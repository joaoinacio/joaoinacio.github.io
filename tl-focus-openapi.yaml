openapi: 3.1.0
info:
  title: Teamleader API
  description: "This is the new Teamleader API. We will make additions and changes to this API, but don't worry; we will keep the documented endpoints backwards compatible for the lifetime of this major API version.\n\nDo you have any feedback, do you miss functionality to support your use case? Let us know via [api@teamleader.eu](mailto:api@teamleader.eu).\n\n## AP-What?\n\nAn API is an Application Programming Interface. It is used to programmatically interact with Teamleader, integrate with other software tools or add custom functionalities to Teamleader.\n\nBefore creating a new integration, make sure to check our existing integrations built by our community in our [Teamleader Marketplace](https://marketplace.focus.teamleader.eu).\n\n## General principles\n\n### Endpoints\n\nOur API consists of HTTP RPC-style methods, in the form of `https://api.focus.teamleader.eu/resource.action`.\n\nWe chose this action based approach over the more popular REST, because it enables us to have domain related actions on resources such as `invoices.book`, `timetracking.start` and `timetracking.stop`.\n\n### Requests\n\nAll methods must be called using HTTPS. Data is passed as JSON data in a POST request or as GET query parameters.\n\nFor more complex actions we recommend using POST requests with JSON:\n\n```\nPOST https://api.focus.teamleader.eu/invoices.list\n\n{\n    \"filter\": {\n        \"department_id\": \"9d4096c3-813f-4bd5-b3c4-4091807b5b74\"\n    },\n    \"page\": {\n        \"size\": 50,\n        \"number\": 3\n    }\n}\n```\n\nThe GET equivalent:\n\n```\nGET https://api.focus.teamleader.eu/invoices.list?filter[department_id]=9d4096c3-813f-4bd5-b3c4-4091807b5b74&page[number]=3&page[size]=50&company_id=3250c613-c478-4a43-9640-b97da923eb21\n```\n\n### Responses\n\nBoth single objects and collections are returned as JSON objects, keyed by `data` in the top level of a JSON object:\n\n```json\n{\n    \"data\": {\n        \"id\": \"f1dfb84c-3c29-4548-9b9b-9090a080742a\",\n        \"first_name\": \"Erlich\",\n        \"last_name\": \"Bachman\",\n        \"salutation\": \"Mr\",\n        \"email\": \"info@piedpiper.eu\"\n    }\n}\n```\n\nResponses may also contain meta data for pagination.\n\nSample response with pagination:\n\n```json\n{\n    \"data\": [\n        {\n            \"id\": \"f1dfb84c-3c29-4548-9b9b-9090a080742a\",\n            \"first_name\": \"Erlich\",\n            \"last_name\": \"Bachman\",\n            \"salutation\": \"Mr\",\n            \"email\": \"info@piedpiper.eu\"\n        },\n        {\n            \"id\": \"f1dfb84c-3c29-4548-9b9b-9090a080742b\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"salutation\": \"Mr\",\n            \"email\": \"john@piedpiper.eu\"\n        }\n    ],\n    \"meta\": {\n        \"page\": {\n            \"size\": 20,\n            \"number\": 2\n        },\n        \"matches\": 200\n    }\n}\n```\n\n### Errors\n\nErrors are always returned as an array of error objects, keyed by `errors` in the top level of a JSON object:\n\n```json\n{\n  \"errors\": [\n    {\n      \"title\": \"Company name must not be empty\"\n    }\n  ]\n}\n```\n\n### Rate limiting\n\nTo ensure a fast and predictable experience for everyone, we limit the number of calls your integration (or client id) can make to a specific Teamleader account.  \nTo calculate this, we use the **sliding window** principle: before allowing requests, we check how many requests your integration made in the **last minute**. \nIf you would cross your limit, we deny the request by replying with a specific HTTP error.\n\n`HTTP 429 Too Many Requests`\n\nYou will be able to make a request again, if the oldest request we took into account falls outside the last minute window.  \nTo help you predict this, you can find rate limiting specific headers on each response:\n\n```\nX-RateLimit-Limit: 100                          \n# the number of requests we allow per sliding minute\n\nX-RateLimit-Reset: 2021-06-15T10:51:23.035+0100 \n# the exact time your oldest significant request will expire; \n# when over limit, this is the earliest time you'll be able to successfully make requests again\n\nX-RateLimit-Remaining: 78                       \n# the number of requests you have left before you will be denied access; \n# note that this number can go up if earlier requests expire (after one minute)\n```\n\nYou can use these headers to\n\n- programmatically check the `X-RateLimit-Remaining` _number_ to avoid making calls that will be denied anyways, if the number is 0\n\n- postpone execution until `X-RateLimit-Reset` _time_ to avoid waiting not long enough or too long before trying a next request\n\nIf you consistently bump into rate limits\n\n- check if you can use `.list` endpoints instead of `.info` endpoints (did you know you can filter `.list` endpoints with a list of entity `ids`?)\n\n- check if you can limit the items you fetch by making use of specific filters, eg. `updated_since`\n\n- check if you can replace periodical checks with [webhooks](#/reference/other/webhooks)\n\n- check if you can [side-load](#sideloading) related entities instead of fetching them yourself\n\n- ask us for help through [api@teamleader.eu](mailto:api@teamleader.eu)\n\n### Status codes\n\nWhen objects are created, we return a `201` response containing the `id` and `type` of the new resource:\n\n```json\n{\n  \"type\": \"contact\",\n  \"id\": \"9d4096c3-813f-4bd5-b3c4-4091807b5b74\"\n}\n```\n\nWhen objects are updated or actions are performed, we often return an empty response with a `204` status code.\n\nCommon used status codes:\n\n- `200` - OK\n\n- `201` - Created, when resources are created\n\n- `204` - No Content, on resource updates or actions\n\n- `400` - Bad Request, the request contains invalid data or references non-existing resources\n\n- `401` - Unauthorized, invalid or missing access token\n\n- `403` - Forbidden, not allowed to access this resource\n\n- `404` - Not Found, resource not found\n\n- `429` - Too Many Requests, your client has reached the API rate limit\n\n- `500` - Internal Server Error, something went wrong on our end\n\n## Authentication\n\n### OAuth 2\n\nOAuth 2 is an authorization framework that allows a user to grant limited access to data in a Teamleader account, without having to expose their credentials.\n\nTo get access to the protected resources using our API, OAuth 2 uses access tokens. An access token is a string representing the granted permissions. Access tokens can be obtained after a user has completed the OAuth 2 authorization flow.\n\nBefore starting, you will need to register your integration (an OAuth 2 client) on our [Marketplace](https://marketplace.focus.teamleader.eu/build). Each registered integration is assigned a unique `client_id` and `client_secret`, which is used in the OAuth 2 authorization flow. Note that the `client_secret` key should not be shared or embedded in client-side code.\n\nWhen you register an integration on our [Marketplace](https://marketplace.focus.teamleader.eu), it is required to select all *scopes* your integration wants access to.\n\nFor more detailed information about OAuth 2, we recommend reading [this article](https://auth0.com/docs/protocols/oauth2).\n\n### Authorization flow\n\nTo get access to a user's Teamleader data using the *authorization code grant type*, redirect users to the Teamleader authorization page:\n\n`https://focus.teamleader.eu/oauth2/authorize`\n\nThe required GET parameters are:\n\n- `client_id` - issued when you create your integration\n\n- `response_type` - must be \"code\"\n\n- `state` - unique string to be passed back upon completion (optional)\n\n- `redirect_uri` - URL to redirect back to after authorization\n\n> A list of allowed redirect URIs needs to be configured on your integration's [settings page](https://marketplace.focus.teamleader.eu/build). Only redirect URIs matching one of these whitelisted URIs will be accepted. This is a security measure to prevent malicious users to impersonate your integration.\n\nAfter logging in, the user will be asked to authorize your integration to access the data in their account. You will only be granted access to certain Teamleader data, based on the scopes you have selected on your integration's [settings page](https://marketplace.focus.teamleader.eu/build).\n\nIf the user authorizes your integration, they will be redirected to the specified `redirect_uri` with a temporary authorization code and the original `state` parameter. If the `state` parameter does not match the original value, the response may have been created by a third party and should be ignored.\n\n`https://YOUR_REDIRECT_URI?code=CODE&state=STATE`\n\nIf the user denies your integration, he will be redirected to the `redirect_uri`, with an `error` parameter:\n\n`https://YOUR_REDIRECT_URI?error=access_denied`\n\n### Obtaining access tokens\n\nAfter receiving the authorization code from the previous step, an access token can be requested to make API calls. Note that authorization codes can only be exchanged for an access token once and expire 10 minutes after issuance. To exchange the code for an access token, send an HTTP POST request to the following endpoint:\n\n`https://focus.teamleader.eu/oauth2/access_token`\n\nThe required POST parameters are:\n\n- `client_id` - issued when you register your integration\n\n- `client_secret` - issued when you register your integration\n\n- `code` - the authorization code\n\n- `grant_type` - must be \"authorization_code\"\n\n- `redirect_uri` - the original submitted redirect URL\n\nIt is recommended to add `content-type` header to this request. Supported content types are:\n\n- application/x-www-form-urlencoded\n\n- application/json\n\nYou will receive a JSON response containing an `access_token` and `refresh_token`:\n\n```\n{\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 3600,\n    \"access_token\": \"ACCESS_TOKEN\",\n    \"refresh_token\": \"REFRESH_TOKEN\"\n}\n```\n\nThese access tokens are also known as bearer tokens. You can use this token to call API endpoints on behalf of the user, by adding it to the API request as an `Authorization` header.\n\n```\nGET https://api.focus.teamleader.eu/contacts.list HTTP/1.1\nAuthorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciO...\nAccept: application/json\n```\n\nAccess tokens expire shortly (usually 1 hour) after they are issued for security reasons. If your integration needs to communicate with our API beyond the access token's lifespan, you will need to request a new access token using the refresh token which was issued with the access token. Note that refresh tokens can only be used once to get a new access token and refresh token.\n\n### Using refresh tokens\n\nIf an access token is expired, a new access token and refresh token pair can be obtained by sending an HTTP POST request to the following endpoint:\n\n`https://focus.teamleader.eu/oauth2/access_token`\n\nThe required POST parameters are:\n\n- `client_id` - issued when you register your integration\n\n- `client_secret` - issued when you register your integration\n\n- `refresh_token` - the refresh token\n\n- `grant_type` - must be \"refresh_token\"\n\nRefresh tokens will continue functioning until the user revokes them or uninstalls your integration.\n\n### Client-side authorization (implicit grant)\n\nYour client secret must remain private and can not be embedded within client side applications such as browser plugins. For these types of applications, we have an alternative authorization method called using the [implicit grant](https://tools.ietf.org/html/rfc6749#section-1.3.2).  \nThe implicit grant is a simplified authorization code flow optimized for clients implemented in a browser using a scripting language such as JavaScript. In the implicit flow, instead of issuing the client an authorization code, the client is issued an access token directly.\n\nSimilar to the regular flow, users are redirected to the Teamleader authorization page, but use `token` as the `response_type`:\n\n`https://focus.teamleader.eu/oauth2/authorize`\n\nThe required GET parameters are:\n\n- `client_id` - issued when you create your integration\n\n- `response_type` - must be \"token\" (instead of \"code\")\n\n- `state` - unique string to be passed back upon completion (optional)\n\n- `redirect_uri` - URL to redirect back to after authorization\n\n> A list of allowed redirect URIs needs to be configured on your integration's [settings page](https://marketplace.focus.teamleader.eu/build). Only redirect URIs matching one of these whitelisted URIs will be accepted. This is a security measure to prevent malicious users to impersonate your integration.\n\nAfter authorization, the user is redirected to the `redirect_uri` with the following parameters in the **fragment part of the url**:\n\n- `token_type` - with the value \"Bearer\"\n\n- `expires_in` - the TTL for this access token in seconds\n\n- `access_token` - the access token\n\n- `state` - the state parameter sent in the original request\n\nExample:\n\n`https://YOUR_REDIRECT_URI#token_type=Bearer&expires_in=900&access_token=TOKEN&state=STATE`\n\nNote that the implicit grant does not return refresh tokens and that our access tokens have a short TTL value. If you opt for this authorization method, you will have to go through the authorization flow every time you want to make API calls on behalf of the user. Keep this in mind while developing client-side applications.\n\n### User Identity\n\nTo retrieve information about the user who authorized your application (the resource owner), call the `users.me` API endpoint:\n\n`https://api.focus.teamleader.eu/users.me`\n\n### PHP code example\n\nYou can find a (very) minimal PHP code example, showing how to start the OAuth 2 authentication flow and retrieve the user's identity using the obtained access token.\n\n[https://github.com/teamleadercrm/api/blob/master/examples/oauth2.php](https://github.com/teamleadercrm/api/blob/master/examples/oauth2.php)\n\n<a name=\"sideloading\"></a>\n\n## Sideloading\n\nSideloading (or compound documents) allows you to retrieve relevant related items as part of a single request. For example, a deal has a reference to a lead which can either be a contact or a company:\n\n```\n{\n  \"data\": {\n    \"id\": \"f6871b06-6513-4750-b5e6-ff3503b5a029\",\n    \"title\": \"Deal with ACME\",\n    \"lead\": {\n      \"customer\": {\n        \"type\": \"company\",\n        \"id\": \"2659dc4d-444b-4ced-b51c-b87591f604d7\"\n      }\n    }\n  }\n}\n```\n\nRelationships are always represented by an object with a type/id combination. All of these relationships are candidates for sideloading.\n\nTo sideload relationships, use the dot-notation reference of the relationship's property and add it as an `include` parameter to your JSON body or your URL. In this case of our deal's customer, that would be `include=lead.customer`.\n\nThe sideloaded relationships are returned as part of an `included` property in the response body.\n\n```\n{\n  \"data\": {\n    \"id\": \"f6871b06-6513-4750-b5e6-ff3503b5a029\",\n    \"title\": \"Deal with ACME\",\n    \"lead\": {\n      \"customer\": {\n        \"type\": \"company\",\n        \"id\": \"2659dc4d-444b-4ced-b51c-b87591f604d7\"\n      }\n    }\n  },\n  \"included\": {\n    \"company\": [\n      {\n        \"id\": \"2659dc4d-444b-4ced-b51c-b87591f604d7\",\n        \"name\": \"ACME\"\n      }\n    ]\n  }\n}\n```\n\nNote that the sideloaded relationships are indexed based on their object type. Use the `type` property from your original relationship object to search for the sideloaded relationship in the `included` section.\n\nMultiple relationships can be sideloaded at the same time by passing them as a comma-separated value such as `include=lead.customer,responsible_user`.\n\nSideloading is supported on every endpoint which returns objects.\n\n## Changes & upgrades\n\nWe want to keep this API backwards compatible as long as possible, but at the same time, we need to make changes to it to match our evolving product.\n\nTherefore we assigned a dated version to your API client when it was created.\nThis version controls the API and webhooks behaviour for your API client.\nWhen we change the API in a backwards-incompatible way, we release a new dated version.\nTo avoid breaking your code, you stay on your assigned version until you [upgrade your API version](#upgrading-your-api-version).\n\n### Types of changes\n\nWe consider the following changes to be backwards-compatible:\n\n- Adding new API endpoints.\n\n- Adding new optional parameters to existing API requests.\n\n- Adding new properties to existing API responses.\n\n- Adding new webhook types.\n\n- Making existing parameters optional.\n\n- Changing the order of properties in existing API responses.\n\n- Fixing (potential) bugs that made an endpoint unusable (HTTP 500 errors).\n\n- (Currently, we also hold ourselves the right to return a different error format, as there is still room for improvement)\n\nWe consider the following changes to be backwards-incompatible:\n\n- Renaming or removing an endpoint.\n\n- Renaming or removing a parameter of API requests.\n\n- Renaming or removing a property of API responses.\n\n- Changing the format of a parameter of API responses (eg. integer to float)\n\n- Making validation of a parameter more strict (eg. making it required)\n\n- Returning a different HTTP status code.\n\n<a name=\"additions\"></a>\n\n### Additions\n\nWe list all backwards-compatible additions here. These are currently available in all published versions.\n(There is also a [list of backwards-incompatible upgrades](#changelog) available, but those only apply if you [upgrade your API version](#upgrading-your-api-version).)\n\n### Latest\n\n- We added `status` on `companies.list`\n\n- We added `status` on `companies.info`\n\n- We added `status` on `contacts.list`\n\n- We added `status` on `contacts.info`\n\n### September 2021\n\n- We added `sort` to `timeTracking.list`.\n\n- We added `teams.list`.\n\n### June 2021\n\n- We added `description` on `products.add`.\n\n- We added `title` on `tasks.info` and `tasks.list`.\n\n- We added `term` to the filters on `workTypes.list`.\n\n- We added `started_on` to `timeTracking.update` and `timeTracking.add`.\n\n- We added the `quotations.delete` endpoint.\n\n- We changed the behaviour of the started_before, started_after, ended_before, and ended_after filters on timeTracking.list to be inclusive. So \"started after midnight\" will include time tracking that started exactly on midnight.\n\n- We added `status` to `quotations.info` and `quotations.list`.\n\n### March 2021\n\n- Updated the `migrate.id` endpoint for type `quotation` to return the first or accepted quotation uuid for given deal id.\n\n### January 2021\n\n- We added `deal` on `invoices.list` and `invoices.info`.\n\n### October 2020\n\n- We added `title` as a sort field on `projects.list`\n\n- We added `area_level_two` to the .list and .info responses for `company`, `contact` and `department` addresses.\n\n- We added `area_level_two_id` to the .add and .update calls for `companies` and `contacts`.\n\n- We added `starts_on` to `milestones.create`, `milestones.update`, `milestones.list`, `milestones.info`, and `projects.create` (in the milestone context)\n\n- We added `budget` on `projects.update`.\n\n- We added `customer` on `projects.update`.\n\n- We added `starts_on` and `desc` to the sort options on `milestones.list`.\n\n- We added `file` to `invoices.list` and `invoices.info`.\n\n- We added `quotations.accept` endpoint.\n\n### September 2020\n\n- We added the `milestones.close` and `milestones.open` endpoints.\n\n- We added the `created_at` and `updated_at` fields to `quotations.list` and `quotations.info`. Please note that these fields are nullable and will only be filled in for future quotations.\n\n- We added the `discounts` field to `quotations.info`.\n\n- We added the `purchase_price` field to `quotations.list`, `quotations.info`, `quotations.create` and `quotations.update`.\n\n- We added `projects.close` and `projects.reopen` endpoints.\n\n### August 2020\n\n- We added a filter `done` to `events.list`.\n\n- We added the `currency_exchange_rate` to `invoices.list`.\n\n- We added the `product_id` property to `quotations.create`, `quotations.update`, `invoices.draft` and `invoices.update`.\n\n### July 2020\n\n- We added `quotations.list`, `quotations.create` and `quotations.update`.\n\n### June 2020\n\n- We added the `emails` property to `departments.list`.\n\n- We added the `status` property to `departments.info` and `departments.list`, this property is also available as a filter on `departments.list`.\n\n- We added a filter `scheduled` to `tasks.list`.\n\n- We added the `total` field to `quotations.info`.\n\n#### May 2020\n\n- We no longer require all fields in `projects.update`, only the id remains required.\n\n#### May 2020\n\n- We added the `purchase_order_number` field to `projects.info`, `projects.create`, and `projects.update`\n\n#### April 2020\n\n- We added the `description` field to `milestones.info`, `milestones.create`, and `milestones.update`.\n\n- We added the `propagate_date_changes` property to `milestones.update`. This allows propagating the new due date difference to the due date of all open tasks of that milestone, and recursively to all depending milestones.\n\n- We added the `vat_number` property to `contacts.info`.\n\n- Project custom fields are now included as `custom_fields` on `projects.info`. They can also be added and updated through the `projects.create` / `projects.update` endpoints.\n\n#### March 2020\n\n- We added actuals and budget to `projects.list`, `projects.info`, `milestones.list`, and `milestones.info`\n\n- We added `depends_on` to the `milestones.info` and `milestones.list` endpoints.\n\n- We added `dependency_for` to the `milestones.info` and `milestones.list` endpoints. This indicates all the milestones for which the current milestone is a dependency.\n\n- We added `depends_on` to the `milestones.create` and `milestones.update` endpoints. It allows setting a dependency on another milestone of the same project.\n\n#### February 2020\n\n- We added an `ids` filter to `lostReasons.list`.\n\n- As events can be linked to deals, we added the `deal` link type to `events.list` and `events.info`, and allow filtering on deals in `events.list`.\n\n- We added `lost_reason` to the response of `deals.info`.\n\n- We added `lost_reason` to the response of `deals.list`. This is composed of a `lostReason` object along with a more elaborate `remark`.\n\n- We added a filter `term` to `invoices.list`.\n\n- We added the `purchase_order_number` to the response of both `deals.list` and `deals.info` request.\n\n- We added the `summary` to the response of both the `deals.list` and `deals.info` request. The `summary` can also be added and updated through the `deals.create` / `deals.update` endpoints.\n\n#### January 2020\n\n- We added the time tracking `locked` and `updatable` properties to `timeTracking.info`.\n\n- We exposed the \"Freeze time tracking after a number of days\" preference in `users.me`.\n\n- We added format `ubl/e-fff` to `invoices.download`.\n\n- We added filters `estimated_closing_date_from` and `estimated_closing_date_until` to `deals.list`.\n\n- We added a new sorting option `weighted_value` to `deals.list` and will allow ascending as well as descending orders on sorts.\n  The default remains created_at and descending as before if nothing is passed.\n\n- We added the `weighted_value` to the response of both `deals.list` and `deals.info` requests.\n\n- We added the `extra_option_allowed` information (for single select custom fields) to `customFieldDefinitions.list` and `customFieldDefinitions.info` endpoints.\n\n- We added format `ubl/e-fff` to `creditNotes.download`.\n\n#### October 2019\n\n- We added `milestones.delete`.\n\n- We added a `estimated_closing_date` filter to `deals.list`.\n\n- We added a filter `created_before` to `deal.list`.\n\n- We modified filter `responsible_user_id` in `deal.list` to also accept an array of responsible_user_ids.\n\n- Task custom fields are now included as `custom_fields` on `tasks.info`. They can also be added and updated through the `tasks.create` / `tasks.update` endpoints.\n\n- Milestone custom fields are now included as `custom_fields` on `milestones.info`. They can also be added and updated through the `milestones.create` / `milestones.update` endpoints.\n\n#### July 2019\n\n- We added an `updated_since` filter to `products.list`\n\n- We added `project` to `tasks.info` and `tasks.list`.\n\n- We added a filter by `subject` to `timeTracking.list`.\n\n- A `task_id` filter has been added to `/events.list`.\n\n- We added a `term` filter to `milestone.list`.\n\n#### June 2019\n\n- We added a `term` filter to `tasks.list`.\n\n- We added `tasks.complete` and `tasks.reopen` endpoints.\n\n- We added `due_by` and `due_from` to `tasks.list` filters.\n\n- We added a `tasks.schedule` endpoint.\n\n- We added the ability to sort `tasks.list` based on a descending `due_at`.\n\n- `tasks.info` and `tasks.list` now return information about the customer.\n\n- We added `customer` parameter to `tasks.create` and `tasks.update`.\n\n- In order to link milestones and deals to a task, we added `milestone_id` and `deal_id` as optional parameters to `tasks.create` and `tasks.update`.\n\n- `tasks.list` and `tasks.info` now return the milestone and deal objects.\n\n#### May 2019\n\n- We added a `started_at` property to `timers.update` in order to be able to update the start time of a running timer.\n\n- We added `sent` as a boolean to `invoices.info` and `invoices.list`.\n\n- We added an optional filter on `ids` to `invoices.list`.\n\n- We added `creditNote.booked` and `product.added` to the available webhooks list.\n\n#### April 2019\n\n- In `users.info`, we added the `status` property to the response since it is now possible to retrieve deactivated users.\n\n- In `users.list`, you can now also request deactivated users, by using a new filter on `status`.\n  By default, the endpoint keeps returning active users only. The status is also returned in the response data.\n\n- We've added a `products.add` endpoint.\n  Because you can provide the selling price of a product in this endpoint, we also return it in `products.info` from now on.\n\n- We now also return the `payment_reference` of an invoice in the `invoices.list`.\n  We also made it filterable through the `payment_reference` filter.\n\n- We added the `purchase_order_number` to all relevant endpoints (`invoices.draft`, `invoices.update`, `invoices.info` and `invoices.list`).\n  The property is also filterable through the `purchase_order_number` filter.\n\n- We added `currency_exchange_rate` to `quotations.info`.\n\n- The `events.list` endpoint now has an optional filter property `ids`.\n\n- The `tasks.list` endpoint now has an optional filter property `ids`.\n\n- We added an `invoices.credit` endpoint.\n\n#### March 2019\n\n- On `invoices.draft` and `invoices.update` you can now also provide (a) global discount(s) through the `discounts` property.\n\n- We've published a bunch of `tasks` endpoints (`tasks.list`, `tasks.info`, `tasks.create`, `tasks.update`, `tasks.delete`).\n\n- We now also return a `currency_exchange_rate` on all `.info` endpoints where we support multi-currency.\n  That is `quotations.info`, `invoices.info` and `creditNotes.info`.\n\n#### February 2019\n\n- We now also return the `invoicing_method` of a milestone. Both in `milestones.list` and `milestones.info`.\n\n- We now expose the invoiceability of time trackings and running timers. You can now use the `invoiceable` property on the following endpoints:\n  - `timeTracking.list`\n  - `timeTracking.info`\n  - `timeTracking.add`\n  - `timeTracking.update`\n  - `timers.current`\n  - `timers.start`\n  - `timers.update`\n\n  We also return an `invoiceable` preference in the `users.me` endpoint that exposes whether a user prefers to track time by default as invoiceable or not.\n\n- We've added a `national_identification_number` property on contacts.\n  You can read it from `contacts.list` and `contacts.info`.\n  It's also writeable through `contacts.add` and `contacts.update`.\n\n- Invoicing custom fields included as `custom_fields`.\n  They are returned in `invoices.info`.\n  They can be added or updated through `invoices.draft` and `invoices.update`.\n\n- Deal can now be filtered with a `term` in `deals.list`.\n  We will return deals of which the term is part of the title, reference or customer's name.\n\n- We have created a way to fetch more data about related resources: sideloading.\n  More information can be found [here](#sideloading).\n\n- We didn't provide you with a way to find the uuid of a quotation.\n  Based on a v1 deal id, you can now retrieve the uuid of a quotation with `migrate.id`.\n\n#### January 2019\n\n- The `projects.list` endpoint has an optional filter to filter on `term` now.\n  We return projects for which the term appears in the title or description.\n\n- During `invoices.draft` and `invoices.update`, we now allow you to provide a `withholding_tax_rate_id`.\n  Don't worry if you don't know what this is. Withholding taxes only apply in certain countries, eg Spain or Italy.\n\n- We added a filter on `term` in `users.list`.\n  We return those users who have the term in their first name, last name or email address.\n\n- We already had a part of the products APIs for our own usage, but since it might be useful to you, we are making it public.\n  So `products.list` and `products.info` are now available for usage.\n\n<a name=\"upgrading-your-api-version\"></a>\n\n### Upgrading your API version\n\nThis documentation only reflects the latest version of the API.\nIf you need to make changes to your client or you want to make use of the latest feature, you might need to upgrade your API version.\n\nYou can find your current API version, in the `X-Api-Version` header on any API response.\nThe current latest version is **2021-09-01**.\n\nAfter checking the API [changelog](#changelog) to see which endpoints work differently, you can upgrade your API version:\n\nSend an `X-Api-Version` header containing the identifier of a version (newer than your current version) with your requests.\n\n_This will only affect the version for those API calls and won't affect any other calls done by your client._\n\n<a name=\"changelog\"></a>\n\n### Changelog\n\nWe list all backwards-incompatible changes here. As described above, new additions and forwards-compatible changes don’t need a new API version and can be found [here](#additions).\n\n#### 2021-09-01\n\n- The property `description` is now returned in Markdown instead of HTML on:\n  - `products.info`\n  - `products.list`\n\n#### 2020-05-01\n\n- The property `title` is added to the response of:\n  - `tasks.list`\n  - `tasks.info`\n\n- The property `title` is added and required on:\n  - `tasks.create`\n  - `tasks.update`\n\n- The property `description` is no longer required on:\n  - `tasks.create`\n  - `tasks.update`\n\n#### 2020-01-01\n\n- The property `assignee` is now returned as null instead of `assignee.id` being returned as null on:\n  - `tasks.list`\n  - `tasks.info`\n\n- The property `assignee` is now accepting null instead of `assignee.id` on:\n  - `tasks.create`\n  - `tasks.update`\n\n#### 2019-10-09\n\n- We added `billing_method` and `budget`, and `billing_method` and `price` to `milestones.create`.\n  - When choosing `time_and_materials` or `non_invoiceable` as the billing method, you can provide a `budget`.\n  - When choosing `fixed_price` as the billing method, you need to provide the `price`.\n\n#### 2019-07-03\n\n- The property `todo` has been renamed to `task` on the following endpoints:\n  - `events.list`\n  - `events.info`\n\n- We renamed the `context` field for work orders on customFieldDefinitions from `werkbonnen` to `work_orders`\n\n- The property `due_at` was removed in favour of `due_on`. Additionally, `due_on` is a date with format `YYYY-MM-DD`, instead of a ISO8601 datetime. These changes affect the following endpoints:\n  - `tasks.info`\n  - `tasks.list`\n  - `tasks.create`\n  - `tasks.update`\n\n- We won't accept `project` as a `subject` anymore in `timeTracking.add`, `timeTracking.update`, `timers.start` and `timers.update`.\n  We wrongly accepted this in the past, but time tracking always needs to be coupled to a milestone. Please use the `milestone` subject instead.\n  For older versions, we will link the time tracked to the oldest `open` milestone. If there is no `open` milestone, it's linked to the most recent `closed` or `done` milestone.\n\n#### 2019-03-13\n\n- The property `tax` has been changed. Instead of giving you the `rate` of the tax it now shows the `id` and the `type` of the tax. This has been changed on the following endpoints:\n  - `invoices.info`\n  - `creditNote.info`\n  - `quotations.info`\n\n- We simplified the `products.info` and `products.list` endpoints:\n  - `name` and `description` are no longer wrapped in a `translations` object.\n  - `external_id` was renamed to `code`\n  - `prices` are temporarily no longer returned, to avoid confusion, as they didn't take into account price lists\n\n#### 2019-01-24\n\n- Previously, the `invoices.info` endpoint returned an _non-existing_ or _empty_ `extended_description` as an empty string, while `invoices.draft` and `invoices.update` didn't allow an empty string as `extended_description`.\n  From now on, `invoices.info` will return an _non-existing_ or _empty_ `extended_description` as `null`, to make this more consistent and interchangeable.\n\n- Invoices can now have three statuses (`draft`, `outstanding` or `matched`) instead of two (`draft` or `booked`).\n  Therefore the `status` property in `invoices.list` and `invoices.info` will either return `outstanding` or `matched` for invoices that were previously just `booked`.\n  This is also reflected in the `status` filter on `invoices.list`: to allow you to still query all `outstanding` and `matched` invoices (previously all `booked`) , it now *only* accepts an array of filter values (eg. `[\"outstanding\", \"matched\"]` or `[\"draft\"]`).\n\n- The property `local_business_number` was renamed to `national_identification_number` on the following endpoints:\n  - `companies.info`\n  - `companies.list`\n  - `companies.add`\n  - `companies.update`\n  - `invoices.info`\n  - `creditNotes.info`\n\n- An invoice number actually contains the bookyear, so from now on, you will see eg. `2018 / 27` instead of `27`.\n  This is reflected in the `invoice_number` property in the `invoices.list` and `invoices.info` endpoints.\n\n#### 2018-10-30\n\n- The top-level property `customer` was removed on all deal endpoints.\n  Earlier, this property could already be found under the `lead.customer` property.\n  If you were still using the `customer` property, just wrap it in an object under a `lead` key.\n\n- The `contacts.list` & `companies.list` endpoints used to give back an object under the `address` key.\n  This object is now returned under the `primary_address` key.\n\n### Stay informed\n\nYou can follow our API progress and ongoing proposals via our [API Blueprint GitHub repository](https://github.com/teamleadercrm/api)."
  contact: {}
  version: '1.0'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: https://api.focus.teamleader.eu
  variables: {}
tags:
- name: Departments
  description: >-
    Departments are used to split quotations and invoices for different legal entities or within one organisation.

    *Required scopes: `departments`*
- name: Users
  description: "
    Users are co-workers in a Teamleader account.\n
    \n
    *Required scopes: `users`*"
- name: Teams
  description: '*Required scopes: `users`*'
- name: General
  description: ''
- name: Contacts
  description: "
    Contacts are physical entities who are added to your CRM database. Contacts might be linked to one or more companies.\n
    \n
    *Required scopes: `contacts`*"
- name: Companies
  description: "
    Companies are legal entities, usually linked to a VAT and/or local business number.\n
    \n
    *Required scopes: `companies`*"
- name: CRM
  description: ''
- name: Deals
  description: ''
- name: Calendar
  description: ''
- name: Invoicing
  description: ''
- name: Products
  description: ''
- name: Projects
  description: ''
- name: Tasks
  description: ''
- name: Time Tracking
  description: ''
- name: Other
  description: ''
x-tagGroups:
  - name: General
    description: 'Something'
    tags:
    - Departments
    - Users
    - Teams
  - name: CRM
    tags:
    - Contacts
    - Companies
    - CRM
  - name: Deals
    tags:
    - Deals
  - name: Calendar
    tags:
    - Calendar
  - name: Invoicing
    tags:
    - Invoicing
  - name: Products
    tags:
    - Products
  - name: Projects
    tags:
    - Projects
  - name: Tasks
    tags:
    - Tasks
  - name: Time Tracking
    tags:
    - Time Tracking
  - name: Other
    tags:
    - Other
paths:
  /departments.list:
    get:
      tags:
      - Departments
      summary: departments.list
      description: >-
        Get a list of departments.
      operationId: departments.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/departments.listresponse'
              example:
                data:
                - id: 67c576e7-7e6f-465d-b6ab-a864f6e5e95b
                  name: Human Resources
                  vat_number: BE0899623035
                  currency: EUR
                  emails:
                  - type: primary
                    email: info@piedpiper.eu
                  status: active
      deprecated: false
    parameters: []
  /departments.info:
    get:
      tags:
      - Departments
      summary: departments.info
      description: >-
        Get details for a single department.
      operationId: departments.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/departments.inforesponse'
      deprecated: false
    parameters: []
  /users.me:
    get:
      tags:
      - Users
      summary: users.me
      description: >-
        Get the current authenticated user.
      operationId: users.me
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users.meresponse'
              example:
                data:
                  id: cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5
                  account:
                    type: account
                    id: 0fc55513-7f68-4865-aba0-de5da9e4e43d
                  first_name: John
                  last_name: Smith
                  email: john@teamleader.eu
                  telephones:
                  - type: phone
                    number: 092980615
                  language: nl-BE
                  function: Sales
                  time_zone: Europe/Brussels
                  preferences:
                    invoiceable: true
                    historic_time_tracking_limit:
                      unit: hour
                      value: 24
                    whitelabeling: true
      deprecated: false
    parameters: []
  /users.list:
    get:
      tags:
      - Users
      summary: users.list
      description: >-
        Get a list of all users.
      operationId: users.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users.listresponse'
              example:
                data:
                - id: cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5
                  account:
                    type: account
                    id: 0fc55513-7f68-4865-aba0-de5da9e4e43d
                  first_name: John
                  last_name: Smith
                  email: john@teamleader.eu
                  telephones:
                  - type: phone
                    number: 092980615
                  language: nl
                  function: Sales
                  status: active
      deprecated: false
    parameters: []
  /users.info:
    get:
      tags:
      - Users
      summary: users.info
      description: >-
        Get details for a single user.
      operationId: users.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users.inforesponse'
              example:
                data:
                  id: cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5
                  account:
                    type: account
                    id: 0fc55513-7f68-4865-aba0-de5da9e4e43d
                  first_name: John
                  last_name: Smith
                  email: john@teamleader.eu
                  telephones:
                  - type: phone
                    number: 092980615
                  language: nl-BE
                  function: Sales
                  time_zone: Europe/Brussels
                  status: active
      deprecated: false
    parameters: []
  /teams.list:
    get:
      tags:
      - Teams
      summary: teams.list
      description: ''
      operationId: teams.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams.listresponse'
              example:
                data:
                - id: 4b5291aa-2d78-09d2-882c-6c1483f00d88
                  name: Designers
                  team_lead:
                    type: user
                    id: bef8c53b-b6bc-0fde-944e-5c4b16e5155a
                  members:
                  - type: user
                    id: bef8c53b-b6bc-0fde-944e-5c4b16e5155a
      deprecated: false
    parameters: []
  /customFieldDefinitions.list:
    get:
      tags:
      - General
      summary: customFieldDefinitions.list
      description: Custom fields are used to add additional data/properties to entities within Teamleader.Get a list of all the definitions of custom fields.
      operationId: customFieldDefinitions.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customFieldDefinitions.listresponse'
              example:
                data:
                - id: 74855f4a-2b61-429c-81d8-c79ad3675a76
                  context: contact
                  type: single_line
                  label: ''
                  group: ''
                  required: false
                  configuration:
                    options:
                    - foo
                    - bar
                    extra_option_allowed: true
      deprecated: false
    parameters: []
  /customFieldDefinitions.info:
    get:
      tags:
      - General
      summary: customFieldDefinitions.info
      description: Custom fields are used to add additional data/properties to entities within Teamleader.Get info about a specific custom field definition.
      operationId: customFieldDefinitions.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customFieldDefinitions.inforesponse'
              example:
                data:
                  id: 57e851e2-3d3b-4523-82f8-fe77df5a5d6c
                  context: contact
                  type: single_line
                  label: ''
                  group: ''
                  required: false
                  configuration:
                    options:
                    - foo
                    - bar
                    extra_option_allowed: true
      deprecated: false
    parameters: []
  /workTypes.list:
    post:
      tags:
      - General
      summary: workTypes.list
      description: Work types define the type of work for events or time tracking. Hourly rates can be added to work types, so that the work can be billed to a customer.Get a list of all work types, sorted alphabetically (on their name).
      operationId: workTypes.list
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workTypes.listrequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workTypes.listresponse'
              example:
                data:
                - id: 811a5825-96f4-4318-83c3-2840935c6003
                  name: Planning
      deprecated: false
    parameters: []
  /contacts.list:
    get:
      tags:
      - Contacts
      summary: contacts.list
      description: >-
        Get a list of contacts.
      operationId: contacts.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contacts.listresponse'
              example:
                data:
                - id: 2a39e420-3ba3-4384-8024-fa702ef99c9f
                  first_name: Erlich
                  last_name: Bachman
                  status: active
                  salutation: Mr
                  emails:
                  - type: primary
                    email: info@piedpiper.eu
                  telephones:
                  - type: phone
                    number: 092980615
                  website: https://piedpiper.com
                  primary_address:
                    line_1: Dok Noord 3A 101
                    postal_code: '9000'
                    city: Ghent
                    country: BE
                    area_level_two:
                      type: area_level_two
                      id: db232cf8-ad4a-024b-941f-15a7a74f0fd2
                  gender: male
                  birthdate: 1987-04-25
                  iban: BE12123412341234
                  bic: BICBANK
                  national_identification_number: 86792345-L
                  language: en
                  payment_term:
                    type: cash
                  invoicing_preferences:
                    electronic_invoicing_address: ''
                  tags:
                  - prospect
                  - expo
                  added_at: 2016-02-04T16:44:33+00:00
                  updated_at: 2016-02-05T16:44:33+00:00
                  web_url: https://focus.teamleader.eu/contact_detail.php?id=2a39e420-3ba3-4384-8024-fa702ef99c9f
      deprecated: false
    parameters: []
  /contacts.info:
    get:
      tags:
      - Contacts
      summary: contacts.info
      description: >-
        Get details for a single contact.
      operationId: contacts.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contacts.inforesponse'
              example:
                data:
                  id: cde0bc5f-8602-4e12-b5d3-f03436b54c0d
                  first_name: Erlich
                  last_name: Bachman
                  status: active
                  salutation: Mr
                  vat_number: BE0899623034
                  emails:
                  - type: primary
                    email: info@piedpiper.eu
                  telephones:
                  - type: phone
                    number: 092980615
                  website: https://piedpiper.com
                  addresses:
                  - type: invoicing
                    address:
                      addressee: Teamleader HQ
                      line_1: Dok Noord 3A 101
                      postal_code: '9000'
                      city: Ghent
                      country: BE
                      area_level_two:
                        type: area_level_two
                        id: db232cf8-ad4a-024b-941f-15a7a74f0fd2
                  gender: male
                  birthdate: 1987-04-25
                  iban: BE12123412341234
                  bic: BICBANK
                  national_identification_number: 00051730-A
                  companies:
                  - position: CEO
                    decision_maker: true
                    company:
                      type: company
                      id: 40157f9d-1322-4f2e-b245-188efdc52cc2
                  language: en
                  payment_term:
                    type: cash
                  invoicing_preferences:
                    electronic_invoicing_address: ''
                  remarks: First contact at expo
                  tags:
                  - prospect
                  - expo
                  custom_fields:
                  - definition:
                      type: customFieldDefinition
                      id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                    value: 092980616
                  marketing_mails_consent: false
                  added_at: 2016-02-04T16:44:33+00:00
                  updated_at: 2016-02-05T16:44:33+00:00
                  web_url: https://focus.teamleader.eu/contact_detail.php?id=cde0bc5f-8602-4e12-b5d3-f03436b54c0d
      deprecated: false
    parameters: []
  /contacts.add:
    post:
      tags:
      - Contacts
      summary: contacts.add
      description: >-
        Add a new contact.
      operationId: contacts.add
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contacts.addrequest'
            example:
              first_name: John
              last_name: Smith
              emails:
              - type: primary
                email: info@piedpiper.eu
              salutation: Mr
              telephones:
              - type: phone
                number: 092980615
              website: http://example.com
              addresses:
              - type: invoicing
                address:
                  addressee: Teamleader HQ
                  line_1: Dok Noord 3A 101
                  postal_code: '9000'
                  city: Ghent
                  country: BE
                  area_level_two_id: db232cf8-ad4a-024b-941f-15a7a74f0fd2
              language: en
              gender: male
              birthdate: 1989-08-19
              iban: BE12123412341234
              bic: BICBANK
              national_identification_number: 01234567-X
              remarks: Met at expo
              tags:
              - prospect
              - expo
              custom_fields:
              - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                value: 092980616
              marketing_mails_consent: false
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contacts.addresponse'
              example:
                data:
                  type: contact
                  id: 7c1d8672-f502-4333-9ea4-7a45add15115
      deprecated: false
    parameters: []
  /contacts.update:
    post:
      tags:
      - Contacts
      summary: contacts.update
      description: >-
        Update a contact.
      operationId: contacts.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contacts.updaterequest'
            example:
              id: 76c9d03c-ec5c-4b21-9fc6-7ffee488b12d
              first_name: John
              last_name: Smith
              salutation: Mr
              emails:
              - type: primary
                email: info@piedpiper.eu
              telephones:
              - type: phone
                number: 092980615
              website: http://example.com
              addresses:
              - type: invoicing
                address:
                  addressee: Teamleader HQ
                  line_1: Dok Noord 3A 101
                  postal_code: '9000'
                  city: Ghent
                  country: BE
                  area_level_two_id: db232cf8-ad4a-024b-941f-15a7a74f0fd2
              language: en
              gender: male
              birthdate: 1989-08-19
              iban: BE12123412341234
              bic: BICBANK
              national_identification_number: 19346758-T
              remarks: Met at expo
              tags:
              - prospect
              - expo
              custom_fields:
              - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                value: 092980616
              marketing_mails_consent: false
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /contacts.delete:
    post:
      tags:
      - Contacts
      summary: contacts.delete
      description: >-
        Delete a contact.
      operationId: contacts.delete
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contacts.deleterequest'
            example:
              id: 4e235f27-0af0-40e5-82f3-d32d0aa9edb3
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /contacts.tag:
    post:
      tags:
      - Contacts
      summary: contacts.tag
      description: >-
        Add a new or existing tag to a contact.
      operationId: contacts.tag
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contacts.tagrequest'
            example:
              id: cadd94ba-a41e-4eb4-a46e-39a7f6f96070
              tags:
              - prospect
              - expo
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /contacts.untag:
    post:
      tags:
      - Contacts
      summary: contacts.untag
      description: >-
        Remove a tag from a contact.
      operationId: contacts.untag
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contacts.untagrequest'
            example:
              id: 518d2e5e-99bc-4c66-8509-78e6820a1418
              tags:
              - prospect
              - expo
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /contacts.linkToCompany:
    post:
      tags:
      - Contacts
      summary: contacts.linkToCompany
      description: >-
        Link a contact to a company.
      operationId: contacts.linkToCompany
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contacts.linkToCompanyrequest'
            example:
              id: 75596038-b9c8-4a37-969d-61059e300a28
              company_id: 4da20f00-0628-4336-b885-aa90e580dd85
              position: CEO
              decision_maker: true
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /contacts.unlinkFromCompany:
    post:
      tags:
      - Contacts
      summary: contacts.unlinkFromCompany
      description: >-
        Unlink a contact from a company.
      operationId: contacts.unlinkFromCompany
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contacts.unlinkFromCompanyrequest'
            example:
              id: b4b3160a-b55e-4033-bdae-25b6d22949b4
              company_id: 3f1c8650-4292-4187-bb02-4aa00bbe9632
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /companies.list:
    get:
      tags:
      - Companies
      summary: companies.list
      description: Get a list of companies.
      operationId: companies.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/companies.listresponse'
              example:
                data:
                - id: 96a38bbf-24ed-4083-8a5c-20db92aa471e
                  name: Pied Piper
                  status: active
                  business_type:
                    type: businessType
                    id: fd48d4a3-b9dc-4eac-8071-5889c9f21e5d
                  vat_number: BE0899623035
                  national_identification_number: '63326426'
                  emails:
                  - type: primary
                    email: info@piedpiper.eu
                  telephones:
                  - type: phone
                    number: 092980615
                  website: https://piedpiper.com
                  primary_address:
                    line_1: Dok Noord 3A 101
                    postal_code: '9000'
                    city: Ghent
                    country: BE
                    area_level_two:
                      type: area_level_two
                      id: db232cf8-ad4a-024b-941f-15a7a74f0fd2
                  iban: BE12123412341234
                  bic: BICBANK
                  language: nl
                  preferred_currency: EUR
                  payment_term:
                    type: cash
                  invoicing_preferences:
                    electronic_invoicing_address: ''
                  responsible_user:
                    type: user
                    id: 9b99d8f8-183b-4c7b-8354-9b98b47a192e
                  added_at: 2016-02-04T16:44:33+00:00
                  updated_at: 2016-02-05T16:44:33+00:00
                  web_url: https://focus.teamleader.eu/company_detail.php?id=96a38bbf-24ed-4083-8a5c-20db92aa471e
                  tags:
                  - prospect
                  - expo
      deprecated: false
    parameters: []
  /companies.info:
    get:
      tags:
      - Companies
      summary: companies.info
      description: Get details for a single company.
      operationId: companies.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/companies.inforesponse'
              example:
                data:
                  id: e8d31ae7-8258-4fcd-9b2d-78f41b0aa5d5
                  name: Pied Piper
                  status: active
                  business_type:
                    type: businessType
                    id: fd48d4a3-b9dc-4eac-8071-5889c9f21e5d
                  vat_number: BE0899623035
                  national_identification_number: '63326426'
                  emails:
                  - type: primary
                    email: info@piedpiper.eu
                  telephones:
                  - type: phone
                    number: 092980615
                  website: https://piedpiper.com
                  addresses:
                  - type: invoicing
                    address:
                      addressee: Teamleader HQ
                      line_1: Dok Noord 3A 101
                      postal_code: '9000'
                      city: Ghent
                      country: BE
                      area_level_two:
                        type: area_level_two
                        id: db232cf8-ad4a-024b-941f-15a7a74f0fd2
                  iban: BE12123412341234
                  bic: BICBANK
                  language: nl
                  preferred_currency: EUR
                  payment_term:
                    type: cash
                  invoicing_preferences:
                    electronic_invoicing_address: ''
                  responsible_user:
                    type: user
                    id: 7ba98a20-5e2b-4b46-81b9-a3364432d4f0
                  remarks: First contact at expo
                  added_at: 2016-02-04T16:44:33+00:00
                  updated_at: 2016-02-05T16:44:33+00:00
                  web_url: https://focus.teamleader.eu/company_detail.php?id=e8d31ae7-8258-4fcd-9b2d-78f41b0aa5d5
                  tags:
                  - prospect
                  - expo
                  custom_fields:
                  - definition:
                      type: customFieldDefinition
                      id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                    value: 092980616
                  marketing_mails_consent: false
      deprecated: false
    parameters: []
  /companies.add:
    post:
      tags:
      - Companies
      summary: companies.add
      description: Add a new company.
      operationId: companies.add
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companies.addrequest'
            example:
              name: Pied Piper
              business_type_id: fd48d4a3-b9dc-4eac-8071-5889c9f21e5d
              vat_number: BE0899623035
              national_identification_number: '63326426'
              emails:
              - type: primary
                email: info@piedpiper.eu
              telephones:
              - type: phone
                number: 092980615
              website: http://example.com
              addresses:
              - type: invoicing
                address:
                  addressee: Teamleader HQ
                  line_1: Dok Noord 3A 101
                  postal_code: '9000'
                  city: Ghent
                  country: BE
                  area_level_two_id: db232cf8-ad4a-024b-941f-15a7a74f0fd2
              iban: BE12 1234 1234 1234
              bic: BICBANK
              language: en
              responsible_user_id: 2b12bd5d-d2d9-43ac-8755-36a1e00bd67f
              remarks: Met at expo
              tags:
              - prospect
              - expo
              custom_fields:
              - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                value: 092980616
              marketing_mails_consent: false
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/companies.addresponse'
              example:
                data:
                  type: company
                  id: 4784189d-610b-4488-b3a5-5f324f752417
      deprecated: false
    parameters: []
  /companies.update:
    post:
      tags:
      - Companies
      summary: companies.update
      description: Update a company.
      operationId: companies.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companies.updaterequest'
            example:
              id: 4784189d-610b-4488-b3a5-5f324f752417
              name: Pied Piper
              business_type_id: fd48d4a3-b9dc-4eac-8071-5889c9f21e5d
              vat_number: BE0899623035
              national_identification_number: '63326426'
              emails:
              - type: primary
                email: info@piedpiper.eu
              telephones:
              - type: phone
                number: 092980615
              website: http://example.com
              addresses:
              - type: invoicing
                address:
                  addressee: Teamleader HQ
                  line_1: Dok Noord 3A 101
                  postal_code: '9000'
                  city: Ghent
                  country: BE
                  area_level_two_id: db232cf8-ad4a-024b-941f-15a7a74f0fd2
              iban: BE12 1234 1234 1234
              bic: BICBANK
              language: en
              responsible_user_id: 0ea94804-401d-4dbd-a577-c2d60998f798
              remarks: Met at expo
              custom_fields:
              - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                value: 092980616
              marketing_mails_consent: false
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /companies.delete:
    post:
      tags:
      - Companies
      summary: companies.delete
      description: Delete a company.
      operationId: companies.delete
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companies.deleterequest'
            example:
              id: f3d67f3e-b8a9-45e8-99b1-17a3b14de8a6
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /companies.tag:
    post:
      tags:
      - Companies
      summary: companies.tag
      description: Add a new or existing tag to a company.
      operationId: companies.tag
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companies.tagrequest'
            example:
              id: cadd94ba-a41e-4eb4-a46e-39a7f6f96070
              tags:
              - prospect
              - expo
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /companies.untag:
    post:
      tags:
      - Companies
      summary: companies.untag
      description: Remove a tag from a company.
      operationId: companies.untag
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companies.untagrequest'
            example:
              id: 518d2e5e-99bc-4c66-8509-78e6820a1418
              tags:
              - prospect
              - expo
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /businessTypes.list:
    get:
      tags:
      - CRM
      summary: businessTypes.list
      description: Each country has a specific set of business types or range of legal entities. You can specify the business type when adding or updating a company.Get the names of business types (legal structures) a company can have within a certain country, sorted alphabetically.
      operationId: businessTypes.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/businessTypes.listresponse'
              example:
                data:
                - id: fd48d4a3-b9dc-4eac-8071-5889c9f21e5d
                  name: VZW/ASBL
                  country: BE
      deprecated: false
    parameters: []
  /tags.list:
    get:
      tags:
      - CRM
      summary: tags.list
      description: Tags are used to label contacts or companies, so that they can easily be filtered or grouped into segments.Get a list of tags.
      operationId: tags.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags.listresponse'
              example:
                data:
                - tag: campaign
      deprecated: false
    parameters: []
  /levelTwoAreas.list:
    get:
      tags:
      - CRM
      summary: levelTwoAreas.list
      description: We provide a set of data which can be used to build addresses.Get a list of level two areas (which correspond to provinces, departments or states in most countries).
      operationId: levelTwoAreas.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/levelTwoAreas.listresponse'
              example:
                data:
                - id: fd48d4a3-b9dc-4eac-8071-5889c9f21e5d
                  name: West-Vlaanderen
                  country: BE
      deprecated: false
    parameters: []
  /deals.list:
    get:
      tags:
      - Deals
      summary: deals.list
      description: >-
        Deals are sale opportunities, which need to be followed up by their responsible user. A deal can move through specific deal phases, and be marked as won or lost.


        *Required scopes: `deals`*Get a list of deals.
      operationId: deals.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deals.listresponse'
              example:
                data:
                - id: 6e7fe84d-d4b3-4723-abae-9bc082d8f65a
                  title: Interesting deal
                  summary: Additional information
                  reference: 2017/2
                  status: won
                  lead:
                    customer:
                      type: company
                      id: 2659dc4d-444b-4ced-b51c-b87591f604d7
                    contact_person:
                      type: contact
                      id: 74c6769e-815a-4774-87d7-dfab9b1a0abb
                  department:
                    type: department
                    id: 33121d39-44e2-426a-92ef-62178edeec8a
                  estimated_value:
                    amount: 123.3
                    currency: EUR
                  estimated_closing_date: 2017-05-09
                  estimated_probability: 0.5
                  weighted_value:
                    amount: 123.3
                    currency: EUR
                  purchase_order_number: 000023
                  current_phase:
                    type: dealPhase
                    id: 521a331d-60d1-4920-bde3-ccd01d09f9f1
                  responsible_user:
                    type: user
                    id: bac1c91b-bc86-489b-8590-9be9478f62bb
                  closed_at: 2017-05-09T11:31:30+00:00
                  source:
                    type: dealSource
                    id: 52a4bbb2-d196-48d7-8e43-9ec2f44d06f9
                  lost_reason:
                    reason:
                      type: lostReason
                      id: 4e81f3c4-7dca-44cb-b126-6158bec392a2
                    remark: Too expensive
                  created_at: 2017-05-09T11:25:11+00:00
                  updated_at: 2017-05-09T11:30:58+00:00
                  web_url: https://focus.teamleader.eu/sale_detail.php?id=6e7fe84d-d4b3-4723-abae-9bc082d8f65a
      deprecated: false
    parameters: []
  /deals.info:
    get:
      tags:
      - Deals
      summary: deals.info
      description: >-
        Deals are sale opportunities, which need to be followed up by their responsible user. A deal can move through specific deal phases, and be marked as won or lost.


        *Required scopes: `deals`*Get details for a single deal.
      operationId: deals.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deals.inforesponse'
              example:
                data:
                  id: f6871b06-6513-4750-b5e6-ff3503b5a029
                  title: Interesting deal
                  summary: Additional information
                  reference: 2017/2
                  status: won
                  lead:
                    customer:
                      type: company
                      id: 2659dc4d-444b-4ced-b51c-b87591f604d7
                    contact_person:
                      type: contact
                      id: 74c6769e-815a-4774-87d7-dfab9b1a0abb
                  department:
                    type: department
                    id: 92247818-643e-4f5a-bf87-25cd908e8ad9
                  estimated_value:
                    amount: 123.3
                    currency: EUR
                  estimated_closing_date: 2017-05-09
                  estimated_probability: 0.5
                  weighted_value:
                    amount: 123.3
                    currency: EUR
                  purchase_order_number: 000023
                  current_phase:
                    type: dealPhase
                    id: 676a6070-f7d3-43a6-bc08-cda0d32c27ab
                  responsible_user:
                    type: user
                    id: 4e81f3c4-7dca-44cb-b126-6158bec392a2
                  closed_at: 2017-05-09T11:31:30+00:00
                  source:
                    type: dealSource
                    id: aba0ad66-bf59-49fa-b546-45dcbc5e7e6e
                  phase_history:
                  - phase:
                      type: dealPhase
                      id: d5a629f2-7b58-4748-aaca-acf9b6d62404
                    started_at: 2017-05-01 12:00:00
                    started_by:
                      type: user
                      id: 4ec55a8c-2d80-472a-a9c2-5ff5ee7eac6a
                  quotations:
                  - id: e2314517-3cab-4aa9-8471-450e73449041
                    type: quotation
                  lost_reason:
                    reason:
                      type: lostReason
                      id: 4e81f3c4-7dca-44cb-b126-6158bec392a2
                    remark: Too expensive
                  created_at: 2017-05-09T11:25:11+00:00
                  updated_at: 2017-05-09T11:30:58+00:00
                  web_url: https://focus.teamleader.eu/sale_detail.php?id=f6871b06-6513-4750-b5e6-ff3503b5a029
                  custom_fields:
                  - definition:
                      type: customFieldDefinition
                      id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                    value: 092980616
      deprecated: false
    parameters: []
  /deals.create:
    post:
      tags:
      - Deals
      summary: deals.create
      description: >-
        Deals are sale opportunities, which need to be followed up by their responsible user. A deal can move through specific deal phases, and be marked as won or lost.


        *Required scopes: `deals`*Create a new deal for a customer.
      operationId: deals.create
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deals.createrequest'
            example:
              lead:
                customer:
                  type: company
                  id: 09e5d75f-f817-4872-9723-57fbb8ff710d
                contact_person_id: b38ebb9b-6e46-4bf4-a1e2-af747d6b64ae
              title: Interesting business deal
              summary: Additional information
              source_id: b38ebb9b-6e46-4bf4-a1e2-af747d6b64ae
              department_id: 6a6343fc-fdd8-4bc0-aa69-3a004c710e87
              responsible_user_id: 98b2863e-7b01-4232-82f5-ede1f0b9db22
              phase_id: 060687bb-a742-4882-a538-199a5e5feb60
              estimated_value:
                amount: 123.3
                currency: EUR
              estimated_probability: 0.75
              estimated_closing_date: 2017-05-09
              custom_fields:
              - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                value: 092980616
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deals.createresponse'
              example:
                data:
                  type: deal
                  id: 65a35860-dcca-4850-9fd6-47ff08469e0c
      deprecated: false
    parameters: []
  /deals.update:
    post:
      tags:
      - Deals
      summary: deals.update
      description: >-
        Deals are sale opportunities, which need to be followed up by their responsible user. A deal can move through specific deal phases, and be marked as won or lost.


        *Required scopes: `deals`*Update a deal.
      operationId: deals.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deals.updaterequest'
            example:
              id: 65a35860-dcca-4850-9fd6-47ff08469e0c
              lead:
                customer:
                  type: contact
                  id: 09e5d75f-f817-4872-9723-57fbb8ff710d
                contact_person_id: b38ebb9b-6e46-4bf4-a1e2-af747d6b64ae
              title: Interesting business deal
              summary: Additional information
              source_id: b38ebb9b-6e46-4bf4-a1e2-af747d6b64ae
              department_id: 6a6343fc-fdd8-4bc0-aa69-3a004c710e87
              responsible_user_id: 98b2863e-7b01-4232-82f5-ede1f0b9db22
              estimated_value:
                amount: 123.3
                currency: EUR
              estimated_probability: 0.75
              estimated_closing_date: 2017-05-09
              custom_fields:
              - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                value: 092980616
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /deals.move:
    post:
      tags:
      - Deals
      summary: deals.move
      description: >-
        Deals are sale opportunities, which need to be followed up by their responsible user. A deal can move through specific deal phases, and be marked as won or lost.


        *Required scopes: `deals`*Move the deal to a different phase.
      operationId: deals.move
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deals.moverequest'
            example:
              id: e88131bf-50c4-49d3-8ae3-47e5d9626bf6
              phase_id: 8776abee-d856-43c6-b98d-9ffc912e8b0b
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /deals.win:
    post:
      tags:
      - Deals
      summary: deals.win
      description: >-
        Deals are sale opportunities, which need to be followed up by their responsible user. A deal can move through specific deal phases, and be marked as won or lost.


        *Required scopes: `deals`*Mark a deal as won.
      operationId: deals.win
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deals.winrequest'
            example:
              id: e88131bf-50c4-49d3-8ae3-47e5d9626bf6
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /deals.lose:
    post:
      tags:
      - Deals
      summary: deals.lose
      description: >-
        Deals are sale opportunities, which need to be followed up by their responsible user. A deal can move through specific deal phases, and be marked as won or lost.


        *Required scopes: `deals`*Mark a deal as lost.
      operationId: deals.lose
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deals.loserequest'
            example:
              id: 460df7b2-fe82-4c6c-b215-6d0a1bd3c742
              reason_id: da4c902f-2ae5-4c1f-be6f-b50308aabc5c
              extra_info: Not ready for a change, decision postponed
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /deals.delete:
    post:
      tags:
      - Deals
      summary: deals.delete
      description: >-
        Deals are sale opportunities, which need to be followed up by their responsible user. A deal can move through specific deal phases, and be marked as won or lost.


        *Required scopes: `deals`*Delete a deal.
      operationId: deals.delete
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deals.deleterequest'
            example:
              id: 4e235f27-0af0-40e5-82f3-d32d0aa9edb3
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /lostReasons.list:
    get:
      tags:
      - Deals
      summary: lostReasons.list
      description: >-
        Deals are sale opportunities, which need to be followed up by their responsible user. A deal can move through specific deal phases, and be marked as won or lost.


        *Required scopes: `deals`*Get a list of lost reasons for deals.
      operationId: lostReasons.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lostReasons.listresponse'
              example:
                data:
                - id: 6e7fe84d-d4b3-4723-abae-9bc082d8f65a
                  name: Deal declined
      deprecated: false
    parameters: []
  /dealPhases.list:
    get:
      tags:
      - Deals
      summary: dealPhases.list
      description: >-
        Deal phases are the different phases a deal typically goes through. A deal can be moved to either a next or previous phase. A deal can be marked as won or lost independently from the deal phase.


        *Required scopes: `deals`*Get a list of all phases a deal can go through, sorted by their order in the flow.
      operationId: dealPhases.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dealPhases.listresponse'
              example:
                data:
                - id: 21efc56e-1ba8-469d-926a-e89502591b47
                  name: New
      deprecated: false
    parameters: []
  /dealSources.list:
    get:
      tags:
      - Deals
      summary: dealSources.list
      description: >-
        Deal sources are used to track the origin of a deal.


        *Required scopes: `deals`*Get a list of all deal sources, sorted alphabetically (on name)
      operationId: dealSources.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dealSources.listresponse'
              example:
                data:
                - id: b18c298b-0e6f-495d-8fcd-31dfecaea741
                  name: Referral
      deprecated: false
    parameters: []
  /quotations.list:
    get:
      tags:
      - Deals
      summary: quotations.list
      description: >-
        A quotation is a sales offer for a specific customer. It is always attached to a deal. Quotations can be signed online via Cloudsign.


        *Required scopes: `quotations`*Get a list of quotations.
      operationId: quotations.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quotations.listresponse'
              example:
                data:
                - id: 5b16f6ee-e302-0079-901b-50c26c4a55b1
                  deal:
                    type: deal
                    id: 53474a7a-f9b2-4dd4-88a8-40ce773c7a64
                  currency_exchange_rate:
                    from: USD
                    to: EUR
                    rate: 1.1234
                  total:
                    tax_exclusive:
                      amount: 123.3
                      currency: EUR
                    tax_inclusive:
                      amount: 123.3
                      currency: EUR
                    taxes:
                    - rate: 0.21
                      taxable:
                        amount: 123.3
                        currency: EUR
                      tax:
                        amount: 123.3
                        currency: EUR
                    purchase_price:
                      amount: 123.3
                      currency: EUR
                  created_at: 2017-05-09T11:25:11+00:00
                  updated_at: 2017-05-09T11:30:58+00:00
                  status: open
      deprecated: false
    parameters: []
  /quotations.info:
    get:
      tags:
      - Deals
      summary: quotations.info
      description: >-
        A quotation is a sales offer for a specific customer. It is always attached to a deal. Quotations can be signed online via Cloudsign.


        *Required scopes: `quotations`*Get a quotation
      operationId: quotations.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quotations.inforesponse'
              example:
                data:
                  id: e7a3fe2b-2c75-480f-87b9-121816b5257b
                  deal:
                    type: deal
                    id: 53474a7a-f9b2-4dd4-88a8-40ce773c7a64
                  grouped_lines:
                  - section:
                      title: ''
                    line_items:
                    - product:
                        type: product
                        id: e2314517-3cab-4aa9-8471-450e73449040
                      quantity: 3
                      description: An awesome product
                      extended_description: Some more information about this awesome product
                      unit_price:
                        amount: 123.3
                        currency: EUR
                        tax: excluding
                      tax:
                        type: taxRate
                        id: e2314517-3cab-4aa9-8471-450e73449042
                      discount:
                        type: percentage
                        value: 15
                      purchase_price:
                        amount: 123.3
                        currency: EUR
                      total:
                        tax_exclusive:
                          amount: 123.3
                          currency: EUR
                        tax_exclusive_before_discount:
                          amount: 123.3
                          currency: EUR
                        tax_inclusive:
                          amount: 123.3
                          currency: EUR
                        tax_inclusive_before_discount:
                          amount: 123.3
                          currency: EUR
                  currency_exchange_rate:
                    from: USD
                    to: EUR
                    rate: 1.1234
                  total:
                    tax_exclusive:
                      amount: 123.3
                      currency: EUR
                    tax_inclusive:
                      amount: 123.3
                      currency: EUR
                    taxes:
                    - rate: 0.21
                      taxable:
                        amount: 123.3
                        currency: EUR
                      tax:
                        amount: 123.3
                        currency: EUR
                    purchase_price:
                      amount: 123.3
                      currency: EUR
                  discounts:
                  - value: 10
                    type: percentage
                    description: winter promotion
                  created_at: 2017-05-09T11:25:11+00:00
                  updated_at: 2017-05-09T11:30:58+00:00
                  status: open
      deprecated: false
    parameters: []
  /quotations.download:
    post:
      tags:
      - Deals
      summary: quotations.download
      description: >-
        A quotation is a sales offer for a specific customer. It is always attached to a deal. Quotations can be signed online via Cloudsign.


        *Required scopes: `quotations`*Download a quotation in a specific format.
      operationId: quotations.download
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quotations.downloadrequest'
            example:
              id: d885e5d5-bacb-4607-bde9-abc4a04a901b
              format: pdf
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quotations.downloadresponse'
              example:
                data:
                  location: https://cdn.teamleader.eu/file
                  expires: 2018-02-05T16:44:33+00:00
      deprecated: false
    parameters: []
  /quotations.create:
    post:
      tags:
      - Deals
      summary: quotations.create
      description: >-
        A quotation is a sales offer for a specific customer. It is always attached to a deal. Quotations can be signed online via Cloudsign.


        *Required scopes: `quotations`*Create a quotation.
      operationId: quotations.create
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quotations.createrequest'
            example:
              deal_id: cef01135-7e51-4f6f-a6eb-6e5e5a885ac8
              grouped_lines:
              - section:
                  title: ''
                line_items:
                - quantity: 3
                  description: An awesome product
                  extended_description: Some more information about this awesome product
                  unit_price:
                    amount: 123.3
                    currency: EUR
                    tax: excluding
                  tax_rate_id: c0c03f1e-77e3-402c-a713-30ea1c585823
                  discount:
                    value: 10
                    type: percentage
                  product_id: d905ff57-e866-0f59-9d1e-1fd4538bfae1
                  purchase_price:
                    amount: 123.3
                    currency: EUR
              discounts:
              - value: 10
                type: percentage
                description: winter promotion
              text: Quotation text
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quotations.createresponse'
              example:
                data:
                  type: quotation
                  id: e4bf74ca-e900-471f-84b1-276e5d3afae4
      deprecated: false
    parameters: []
  /quotations.update:
    post:
      tags:
      - Deals
      summary: quotations.update
      description: >-
        A quotation is a sales offer for a specific customer. It is always attached to a deal. Quotations can be signed online via Cloudsign.


        *Required scopes: `quotations`*Update a quotation.
      operationId: quotations.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quotations.updaterequest'
            example:
              id: 5b16f6ee-e302-0079-901b-50c26c4a55b1
              grouped_lines:
              - section:
                  title: ''
                line_items:
                - quantity: 3
                  description: An awesome product
                  extended_description: Some more information about this awesome product
                  unit_price:
                    amount: 123.3
                    currency: EUR
                    tax: excluding
                  tax_rate_id: c0c03f1e-77e3-402c-a713-30ea1c585823
                  discount:
                    value: 10
                    type: percentage
                  product_id: d905ff57-e866-0f59-9d1e-1fd4538bfae1
                  purchase_price:
                    amount: 123.3
                    currency: EUR
              discounts:
              - value: 10
                type: percentage
                description: winter promotion
              text: Quotation text
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /quotations.accept:
    post:
      tags:
      - Deals
      summary: quotations.accept
      description: >-
        A quotation is a sales offer for a specific customer. It is always attached to a deal. Quotations can be signed online via Cloudsign.


        *Required scopes: `quotations`*Mark a quotation as accepted.
      operationId: quotations.accept
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quotations.acceptrequest'
            example:
              id: e7a3fe2b-2c75-480f-87b9-121816b5257b
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /quotations.delete:
    post:
      tags:
      - Deals
      summary: quotations.delete
      description: >-
        A quotation is a sales offer for a specific customer. It is always attached to a deal. Quotations can be signed online via Cloudsign.


        *Required scopes: `quotations`*Delete a quotation.
      operationId: quotations.delete
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quotations.deleterequest'
            example:
              id: 4e235f27-0af0-40e5-82f3-d32d0aa9edb3
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /events.list:
    get:
      tags:
      - Calendar
      summary: events.list
      description: >-
        Calendar events are scheduled events in your calendar. A calendar event involves a particular activity type: a task, meeting or call.


        *Required scopes: `events`*Get a list of calendar events.
      operationId: events.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.listresponse'
              example:
                data:
                - id: 6d64488c-75d8-4de9-b140-2555566fa27d
                  creator:
                    type: user
                    id: e51d1a0e-452e-4d5d-a2a1-2c8f75dde560
                  task:
                    type: task
                    id: eb399573-e1ae-4377-bbaf-34358eb19831
                  activity_type:
                    type: activityType
                    id: 28158af3-2ef3-4178-ac8b-2542b1481af0
                  title: Erlich Bachman's birthday
                  description: ''
                  starts_at: 2016-02-04T16:00:00+00:00
                  ends_at: 2016-02-04T18:00:00+00:00
                  location: ''
                  attendees:
                  - type: contact
                    id: 8b3afad7-648d-4b4c-b38b-5726d3222282
                  links:
                  - type: company
                    id: c9258836-f9a5-40cb-aa2a-d55c22991b93
      deprecated: false
    parameters: []
  /events.info:
    get:
      tags:
      - Calendar
      summary: events.info
      description: >-
        Calendar events are scheduled events in your calendar. A calendar event involves a particular activity type: a task, meeting or call.


        *Required scopes: `events`*Get details for a single calendar event.
      operationId: events.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.inforesponse'
              example:
                data:
                  id: 9a5a3984-abfc-40cd-a880-f97683c6a99c
                  title: Meeting with stakeholders
                  description: ''
                  creator:
                    type: user
                    id: 6f45600a-4402-40e0-9dcc-7665384bcd48
                  task:
                    type: task
                    id: be80d753-f2ee-426d-9596-2a2e1a23a82e
                  activity_type:
                    type: activityType
                    id: 4a1b1d8e-45da-4c5f-a986-3f93d174d352
                  starts_at: 2016-02-04T16:00:00+00:00
                  ends_at: 2016-02-04T18:00:00+00:00
                  location: ''
                  attendees:
                  - type: contact
                    id: 8b3afad7-648d-4b4c-b38b-5726d3222282
                  links:
                  - type: company
                    id: c9258836-f9a5-40cb-aa2a-d55c22991b93
      deprecated: false
    parameters: []
  /events.create:
    post:
      tags:
      - Calendar
      summary: events.create
      description: >-
        Calendar events are scheduled events in your calendar. A calendar event involves a particular activity type: a task, meeting or call.


        *Required scopes: `events`*Create a new calendar event.
      operationId: events.create
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/events.createrequest'
            example:
              title: Meeting with stakeholders
              activity_type_id: b0a9ace5-fe82-4827-9d90-fc52f2c93050
              starts_at: 2016-02-04T16:00:00+00:00
              ends_at: 2016-02-04T18:00:00+00:00
              work_type_id: b37e2bc7-dea0-4fda-88e9-c092fb65667d
              attendees:
              - type: user
                id: 6ddd2666-65a0-497f-9f01-54c4343ec1a6
              links:
              - type: company
                id: c9258836-f9a5-40cb-aa2a-d55c22991b93
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.createresponse'
              example:
                data:
                  type: event
                  id: 9fc14045-5c6c-4ba8-8672-42ea3f26aa63
      deprecated: false
    parameters: []
  /events.update:
    post:
      tags:
      - Calendar
      summary: events.update
      description: >-
        Calendar events are scheduled events in your calendar. A calendar event involves a particular activity type: a task, meeting or call.


        *Required scopes: `events`*Update a calendar event.
      operationId: events.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/events.updaterequest'
            example:
              id: f22fc69d-5d07-40cf-af46-015698a74b63
              title: Meeting with stakeholders
              starts_at: 2016-02-04T16:00:00+00:00
              ends_at: 2016-02-04T18:00:00+00:00
              work_type_id: b37e2bc7-dea0-4fda-88e9-c092fb65667d
              attendees:
              - type: user
                id: 6ddd2666-65a0-497f-9f01-54c4343ec1a6
              links:
              - type: company
                id: c9258836-f9a5-40cb-aa2a-d55c22991b93
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /events.cancel:
    post:
      tags:
      - Calendar
      summary: events.cancel
      description: >-
        Calendar events are scheduled events in your calendar. A calendar event involves a particular activity type: a task, meeting or call.


        *Required scopes: `events`*Cancel a calendar event (for all attendees).
      operationId: events.cancel
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/events.cancelrequest'
            example:
              id: b519491e-ca80-4efb-bb7b-3f08544936b0
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /activityTypes.list:
    get:
      tags:
      - Calendar
      summary: activityTypes.list
      description: 'Activity types identify the different types of events that take place within your organisation. Currently only three activity types are available: tasks, meetings and calls.Get a list of all activity types.'
      operationId: activityTypes.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activityTypes.listresponse'
              example:
                data:
                - id: 9feb5f61-c6dd-4f9d-9b37-2813ada4e343
                  name: ''
      deprecated: false
    parameters: []
  /invoices.list:
    get:
      tags:
      - Invoicing
      summary: invoices.list
      description: >-
        Teamleader provides a whole set of endpoints to make it easy to develop integrations with invoices. New invoices are created in accordance with this flow: `invoice.draft` → `invoice.book`. Invoices can also be updated, deleted or credited.


        *Required scopes: `invoices`*Get a list of invoices.
      operationId: invoices.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoices.listresponse'
              example:
                data:
                - id: 2aa4a6a9-9ce8-4851-a9b3-26aea2ea14c4
                  department:
                    type: department
                    id: 5e90eb0a-b502-4344-aa0f-3b8525af6186
                  invoice_number: 2017 / 5
                  invoice_date: 2016-02-04
                  status: matched
                  due_on: 2016-03-03
                  paid: true
                  paid_at: 2016-02-04T16:44:33+00:00
                  sent: true
                  purchase_order_number: 000023
                  payment_reference: +++084/2613/66074+++
                  invoicee:
                    name: De Rode Duivels
                    vat_number: BE0899623035
                    customer:
                      type: contact
                      id: 4b0f959a-27e3-4080-b1b2-a05b374863cb
                    for_attention_of:
                      name: Radja Nainggolan
                      contact:
                        type: contact
                        id: d4391f46-a32c-458c-b2ee-833fd27a348d
                  total:
                    tax_exclusive:
                      amount: 123.3
                      currency: EUR
                    tax_inclusive:
                      amount: 123.3
                      currency: EUR
                    payable:
                      amount: 123.3
                      currency: EUR
                    taxes:
                    - rate: 0.21
                      taxable:
                        amount: 123.3
                        currency: EUR
                      tax:
                        amount: 123.3
                        currency: EUR
                    due:
                      amount: 123.3
                      currency: EUR
                  currency_exchange_rate:
                    from: USD
                    to: EUR
                    rate: 1.1234
                  created_at: 2016-02-04T16:44:33+00:00
                  updated_at: 2016-02-05T16:44:33+00:00
                  web_url: https://focus.teamleader.eu/invoice_detail.php?id=2aa4a6a9-9ce8-4851-a9b3-26aea2ea14c4
                  file:
                    type: file
                    id: 39a02b79-b9a9-46e3-a44d-6c473b2fe350
                  deal:
                    type: deal
                    id: a8ef428a-0e70-48a5-8696-58be0c45a772
      deprecated: false
    parameters: []
  /invoices.info:
    get:
      tags:
      - Invoicing
      summary: invoices.info
      description: >-
        Teamleader provides a whole set of endpoints to make it easy to develop integrations with invoices. New invoices are created in accordance with this flow: `invoice.draft` → `invoice.book`. Invoices can also be updated, deleted or credited.


        *Required scopes: `invoices`*Get details for a single invoice.
      operationId: invoices.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoices.inforesponse'
      deprecated: false
    parameters: []
  /invoices.download:
    post:
      tags:
      - Invoicing
      summary: invoices.download
      description: >-
        Teamleader provides a whole set of endpoints to make it easy to develop integrations with invoices. New invoices are created in accordance with this flow: `invoice.draft` → `invoice.book`. Invoices can also be updated, deleted or credited.


        *Required scopes: `invoices`*Download an invoice in a specific format.
      operationId: invoices.download
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoices.downloadrequest'
            example:
              id: d885e5d5-bacb-4607-bde9-abc4a04a901b
              format: pdf
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoices.downloadresponse'
              example:
                data:
                  location: https://cdn.teamleader.eu/file
                  expires: 2018-02-05T16:44:33+00:00
      deprecated: false
    parameters: []
  /invoices.draft:
    post:
      tags:
      - Invoicing
      summary: invoices.draft
      description: >-
        Teamleader provides a whole set of endpoints to make it easy to develop integrations with invoices. New invoices are created in accordance with this flow: `invoice.draft` → `invoice.book`. Invoices can also be updated, deleted or credited.


        *Required scopes: `invoices`*Draft a new invoice.
      operationId: invoices.draft
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoices.draftrequest'
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoices.draftresponse'
              example:
                data:
                  type: invoice
                  id: e4bf74ca-e900-471f-84b1-276e5d3afae4
      deprecated: false
    parameters: []
  /invoices.update:
    post:
      tags:
      - Invoicing
      summary: invoices.update
      description: >-
        Teamleader provides a whole set of endpoints to make it easy to develop integrations with invoices. New invoices are created in accordance with this flow: `invoice.draft` → `invoice.book`. Invoices can also be updated, deleted or credited.


        *Required scopes: `invoices`*Update a draft invoice. Booked invoices cannot be updated.
      operationId: invoices.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoices.updaterequest'
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /invoices.copy:
    post:
      tags:
      - Invoicing
      summary: invoices.copy
      description: >-
        Teamleader provides a whole set of endpoints to make it easy to develop integrations with invoices. New invoices are created in accordance with this flow: `invoice.draft` → `invoice.book`. Invoices can also be updated, deleted or credited.


        *Required scopes: `invoices`*Creates a new draft invoice based on another invoice
      operationId: invoices.copy
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoices.copyrequest'
            example:
              id: b7023c11-455e-4fa5-bb96-87f37dbc7d07
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoices.copyresponse'
              example:
                data:
                  type: invoice
                  id: e4bf74ca-e900-471f-84b1-276e5d3afae4
      deprecated: false
    parameters: []
  /invoices.book:
    post:
      tags:
      - Invoicing
      summary: invoices.book
      description: >-
        Teamleader provides a whole set of endpoints to make it easy to develop integrations with invoices. New invoices are created in accordance with this flow: `invoice.draft` → `invoice.book`. Invoices can also be updated, deleted or credited.


        *Required scopes: `invoices`*Book a draft invoice.
      operationId: invoices.book
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoices.bookrequest'
            example:
              id: 7abb325c-e063-42a4-8fb4-1b730759645a
              on: 2016-02-04
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /invoices.delete:
    post:
      tags:
      - Invoicing
      summary: invoices.delete
      description: >-
        Teamleader provides a whole set of endpoints to make it easy to develop integrations with invoices. New invoices are created in accordance with this flow: `invoice.draft` → `invoice.book`. Invoices can also be updated, deleted or credited.


        *Required scopes: `invoices`*Delete an existing invoice. Only possible for draft invoices or the last booked invoice.
      operationId: invoices.delete
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoices.deleterequest'
            example:
              id: 7517d21c-75c1-4b89-8956-0e67f46c8532
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /invoices.registerPayment:
    post:
      tags:
      - Invoicing
      summary: invoices.registerPayment
      description: >-
        Teamleader provides a whole set of endpoints to make it easy to develop integrations with invoices. New invoices are created in accordance with this flow: `invoice.draft` → `invoice.book`. Invoices can also be updated, deleted or credited.


        *Required scopes: `invoices`*Register a payment for an invoice.
      operationId: invoices.registerPayment
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoices.registerPaymentrequest'
            example:
              id: 7abb325c-e063-42a4-8fb4-1b730759645a
              payment:
                amount: 123.3
                currency: EUR
              paid_at: 2016-03-03T16:44:33+00:00
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /invoices.credit:
    post:
      tags:
      - Invoicing
      summary: invoices.credit
      description: >-
        Teamleader provides a whole set of endpoints to make it easy to develop integrations with invoices. New invoices are created in accordance with this flow: `invoice.draft` → `invoice.book`. Invoices can also be updated, deleted or credited.


        *Required scopes: `invoices`*Credit an invoice completely.
      operationId: invoices.credit
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoices.creditrequest'
            example:
              id: d885e5d5-bacb-4607-bde9-abc4a04a901b
              credit_note_date: 2016-02-04
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoices.creditresponse'
              example:
                data:
                  type: creditNote
                  id: d885e5d5-bacb-4607-bde9-abc4a04a901c
      deprecated: false
    parameters: []
  /creditNotes.list:
    get:
      tags:
      - Invoicing
      summary: creditNotes.list
      description: >-
        Credit notes are created when certain products or services are not delivered according to their invoice. The credit note reduces the due amount of the credited invoice.


        *Required scopes: `invoices`*List credit notes
      operationId: creditNotes.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/creditNotes.listresponse'
              example:
                data:
                - id: 2b43633b-22d1-41b6-b87b-e1fd742325d4
                  department:
                    type: department
                    id: 36386b05-936e-4cc0-9523-bd20d797ebf5
                  credit_note_number: 2017/5
                  credit_note_date: 2016-02-04
                  status: booked
                  invoice:
                    type: invoice
                    id: 53484141-8382-4948-9a4c-9cd7e79b30bd
                  paid: true
                  paid_at: 2016-03-03T16:44:33+00:00
                  invoicee:
                    name: De Rode Duivels
                    vat_number: BE0899623035
                    customer:
                      type: contact
                      id: dc2a40bf-f050-4c8e-a002-872a051150b9
                  total:
                    tax_exclusive:
                      amount: 123.3
                      currency: EUR
                    tax_inclusive:
                      amount: 123.3
                      currency: EUR
                    payable:
                      amount: 123.3
                      currency: EUR
                    taxes:
                    - rate: 0.21
                      taxable:
                        amount: 123.3
                        currency: EUR
                      tax:
                        amount: 123.3
                        currency: EUR
                  created_at: 2016-02-04T16:44:33+00:00
                  updated_at: 2016-02-05T16:44:33+00:00
      deprecated: false
    parameters: []
  /creditNotes.info:
    get:
      tags:
      - Invoicing
      summary: creditNotes.info
      description: >-
        Credit notes are created when certain products or services are not delivered according to their invoice. The credit note reduces the due amount of the credited invoice.


        *Required scopes: `invoices`*Get details for a single credit note
      operationId: creditNotes.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/creditNotes.inforesponse'
              example:
                data:
                - id: 27300f09-6250-4a23-8557-d84c52f99ecf
                  department:
                    type: department
                    id: 36386b05-936e-4cc0-9523-bd20d797ebf5
                  credit_note_number: 2017/5
                  credit_note_date: 2016-02-04
                  status: booked
                  invoice:
                    type: invoice
                    id: 53484141-8382-4948-9a4c-9cd7e79b30bd
                  paid: true
                  paid_at: 2016-03-03T16:44:33+00:00
                  invoicee:
                    name: De Rode Duivels
                    vat_number: BE0899623035
                    customer:
                      type: contact
                      id: dc2a40bf-f050-4c8e-a002-872a051150b9
                    email: duivels@test.com
                    national_identification_number: '123'
                  total:
                    tax_exclusive:
                      amount: 123.3
                      currency: EUR
                    tax_inclusive:
                      amount: 123.3
                      currency: EUR
                    payable:
                      amount: 123.3
                      currency: EUR
                    taxes:
                    - rate: 0.21
                      taxable:
                        amount: 123.3
                        currency: EUR
                      tax:
                        amount: 123.3
                        currency: EUR
                  grouped_lines:
                  - section:
                      title: ''
                    line_items:
                    - product:
                        type: product
                        id: e2314517-3cab-4aa9-8471-450e73449040
                      product_category:
                        id: e2314517-3cab-4aa9-8471-450e73449041
                        type: productCategory
                      quantity: 3
                      description: An awesome product
                      extended_description: Some more information about this awesome product
                      unit_price:
                        amount: 123.3
                        currency: EUR
                        tax: excluding
                      tax:
                        type: taxRate
                        id: e2314517-3cab-4aa9-8471-450e73449042
                      discount:
                        type: percentage
                        value: 15
                      total:
                        tax_exclusive:
                          amount: 123.3
                          currency: EUR
                        tax_exclusive_before_discount:
                          amount: 123.3
                          currency: EUR
                        tax_inclusive:
                          amount: 123.3
                          currency: EUR
                        tax_inclusive_before_discount:
                          amount: 123.3
                          currency: EUR
                  currency_exchange_rate:
                    from: USD
                    to: EUR
                    rate: 1.1234
                  created_at: 2016-02-04T16:44:33+00:00
                  updated_at: 2016-02-05T16:44:33+00:00
      deprecated: false
    parameters: []
  /creditNotes.download:
    post:
      tags:
      - Invoicing
      summary: creditNotes.download
      description: >-
        Credit notes are created when certain products or services are not delivered according to their invoice. The credit note reduces the due amount of the credited invoice.


        *Required scopes: `invoices`*Download a credit note in a specific format.
      operationId: creditNotes.download
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/creditNotes.downloadrequest'
            example:
              id: d885e5d5-bacb-4607-bde9-abc4a04a901b
              format: pdf
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/creditNotes.downloadresponse'
              example:
                data:
                  location: https://cdn.teamleader.eu/file
                  expires: 2018-02-05T16:44:33+00:00
      deprecated: false
    parameters: []
  /taxRates.list:
    get:
      tags:
      - Invoicing
      summary: taxRates.list
      description: Tax rates provide an overview of different taxation rates used to bill customers. Teamleader provides a default list of tax rates based on the country of residence of the company that’s using Teamleader. The end user also has the option to add additional tax rates.Get a list of available tax rates.
      operationId: taxRates.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxRates.listresponse'
              example:
                data:
                - id: c93ddb52-0af8-47d9-8551-441435be66a7
                  description: 21%
                  rate: 0.21
                  department:
                    type: department
                    id: 182af0a8-3f68-409b-8941-cf8caf8f28a0
      deprecated: false
    parameters: []
  /paymentTerms.list:
    get:
      tags:
      - Invoicing
      summary: paymentTerms.list
      description: Payment terms are the conditions under which an invoice need to be paid.Get a list of available payment terms.
      operationId: paymentTerms.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentTerms.listresponse'
              example:
                data:
                - id: c93ddb52-0af8-47d9-8551-441435be66a7
                  type: cash
      deprecated: false
    parameters: []
  /withholdingTaxRates.list:
    get:
      tags:
      - Invoicing
      summary: withholdingTaxRates.list
      description: Withholding tax rates provide an overview of different taxation rates used to bill customers. Teamleader provides a default list of tax rates based on the country of residence of the company that’s using Teamleader. The countries that use withholding tax rates are Italy and Spain.Get a list of available withholding tax rates.
      operationId: withholdingTaxRates.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/withholdingTaxRates.listresponse'
              example:
                data:
                - id: c93ddb52-0af8-47d9-8551-441435be66a7
                  department:
                    type: department
                    id: 182af0a8-3f68-409b-8941-cf8caf8f28a0
                  description: Ritenuta d'acconto 23% su 20%
                  rate: 0.046
      deprecated: false
    parameters: []
  /productCategories.list:
    get:
      tags:
      - Products
      summary: productCategories.list
      description: >-
        Product categories are used to group specific products. They can be linked to a ledger account, which is important for accounting.


        *Required scopes: `products`*Get a list of product categories.
      operationId: productCategories.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productCategories.listresponse'
              example:
                data:
                - id: 2aa4a6a9-9ce8-4851-a9b3-26aea2ea14c4
                  name: "'Asian Flowers'"
                  ledgers:
                  - department:
                      type: department
                      id: 2aa4a6a9-9ce8-4851-a9b3-26aea2ea14c6
                    ledger_account_number: '70100'
      deprecated: false
    parameters: []
  /products.list:
    get:
      tags:
      - Products
      summary: products.list
      description: '*Required scopes: `products`*Get a list of products.'
      operationId: products.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/products.listresponse'
              example:
                data:
                - id: 2aa4a6a9-9ce8-4851-a9b3-26aea2ea14c4
                  name: cookies
                  description: dark chocolate
                  code: COOK-DARKCHOC-42
      deprecated: false
    parameters: []
  /products.info:
    get:
      tags:
      - Products
      summary: products.info
      description: '*Required scopes: `products`*Get details for a single product.'
      operationId: products.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/products.inforesponse'
              example:
                data:
                  id: f8ae61ec-62f3-0538-b028-185c4a5f217f
                  name: cookies
                  description: dark chocolate
                  code: COOK-DARKCHOC-42
                  purchase_price:
                    amount: 123.3
                    currency: EUR
                  selling_price:
                    amount: 123.3
                    currency: EUR
      deprecated: false
    parameters: []
  /products.add:
    post:
      tags:
      - Products
      summary: products.add
      description: '*Required scopes: `products`*Add a new product.'
      operationId: products.add
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
              - type: string
                examples:
                - cookies
              - type: string
                examples:
                - cookies
              examples:
              - name: cookies
                code: COOK-DARKCHOC-42
                purchase_price:
                  amount: 123.3
                  currency: EUR
                selling_price:
                  amount: 123.3
                  currency: EUR
              contentMediaType: application/json
            example:
              name: cookies
              code: COOK-DARKCHOC-42
              purchase_price:
                amount: 123.3
                currency: EUR
              selling_price:
                amount: 123.3
                currency: EUR
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/products.addresponse'
              example:
                data:
                  type: product
                  id: ee94b4c0-5786-0517-9d26-8dd1e6406f20
      deprecated: false
    parameters: []
  /projects.list:
    get:
      tags:
      - Projects
      summary: projects.list
      description: >-
        Projects allow users to work together as a team on a single project. They consist of one or more milestones, have one or more participants and are limited in time and budget.


        *Required scopes: `projects`*Get a list of projects.
      operationId: projects.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projects.listresponse'
              example:
                data:
                - id: 624ca743-8998-4f8c-add1-c427bb022166
                  reference: PRO-2
                  title: New company website
                  description: ''
                  status: active
                  customer:
                    type: contact
                    id: abbf02c0-8ff9-4048-b83f-5195035161e1
                  starts_on: 2016-02-04
                  due_on: 2016-10-14
                  source:
                    type: deal
                    id: 5023d7c2-80d7-4d4b-b2bd-0fcaa6a1f069
                  actuals:
                    billable_amount:
                      amount: 123.3
                      currency: EUR
                    costs:
                      amount: 123.3
                      currency: EUR
                    result:
                      amount: 123.3
                      currency: EUR
                    profit_percentage: 0
                  budget:
                    provided:
                      amount: 123.3
                      currency: EUR
                    spent:
                      total:
                        amount: 123.3
                        currency: EUR
                      time:
                        amount: 123.3
                        currency: EUR
                      materials:
                        amount: 123.3
                        currency: EUR
                    remaining:
                      amount: 123.3
                      currency: EUR
                    allocated:
                      amount: 123.3
                      currency: EUR
                    forecasted:
                      amount: 123.3
                      currency: EUR
      deprecated: false
    parameters: []
  /projects.info:
    get:
      tags:
      - Projects
      summary: projects.info
      description: >-
        Projects allow users to work together as a team on a single project. They consist of one or more milestones, have one or more participants and are limited in time and budget.


        *Required scopes: `projects`*Get details for a single project.
      operationId: projects.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projects.inforesponse'
              example:
                data:
                  id: 8a04371b-2ffb-407b-9b24-d5b5452009c7
                  reference: PRO-1
                  title: New company website
                  description: ''
                  status: active
                  customer:
                    type: contact
                    id: de41d3e8-808f-4279-b6ff-4706b04c8df2
                  starts_on: 2016-02-04
                  due_on: 2016-02-04
                  source:
                    type: deal
                    id: 39abbf9e-9692-4cca-b20d-79577890752c
                  milestones:
                  - type: milestone
                    id: 7c6b5e26-3068-47a6-bf3b-431d7ab7e704
                  participants:
                  - participant:
                      type: user
                      id: b0ef899b-143c-4708-90ce-aecb3350e116
                    role: decision_maker
                  purchase_order_number: 000023
                  custom_fields:
                  - definition:
                      type: customFieldDefinition
                      id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                    value: 092980616
                  actuals:
                    billable_amount:
                      amount: 123.3
                      currency: EUR
                    costs:
                      amount: 123.3
                      currency: EUR
                    result:
                      amount: 123.3
                      currency: EUR
                    profit_percentage: 0
                  budget:
                    provided:
                      amount: 123.3
                      currency: EUR
                    spent:
                      total:
                        amount: 123.3
                        currency: EUR
                      time:
                        amount: 123.3
                        currency: EUR
                      materials:
                        amount: 123.3
                        currency: EUR
                    remaining:
                      amount: 123.3
                      currency: EUR
                    allocated:
                      amount: 123.3
                      currency: EUR
                    forecasted:
                      amount: 123.3
                      currency: EUR
      deprecated: false
    parameters: []
  /projects.create:
    post:
      tags:
      - Projects
      summary: projects.create
      description: >-
        Projects allow users to work together as a team on a single project. They consist of one or more milestones, have one or more participants and are limited in time and budget.


        *Required scopes: `projects`*Create a new project.
      operationId: projects.create
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects.createrequest'
            example:
              title: New company website
              starts_on: 2016-02-04
              milestones:
              - starts_on: 2017-01-01
                due_on: 2018-01-01
                name: Initial setup
                responsible_user_id: e1240972-6cfc-4549-b49c-edda7568cc48
              participants:
              - participant:
                  type: user
                  id: e1240972-6cfc-4549-b49c-edda7568cc48
                role: member
              purchase_order_number: 000023
              custom_fields:
              - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                value: 092980616
              customer:
                type: contact
                id: ebafa4c5-fa8a-4409-92e5-1b192243372f
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projects.createresponse'
              example:
                data:
                  type: project
                  id: c47e8e40-9a16-468f-9b29-38aea8ae4210
      deprecated: false
    parameters: []
  /projects.update:
    post:
      tags:
      - Projects
      summary: projects.update
      description: >-
        Projects allow users to work together as a team on a single project. They consist of one or more milestones, have one or more participants and are limited in time and budget.


        *Required scopes: `projects`*Update a project.
      operationId: projects.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects.updaterequest'
            example:
              id: dcc2e8ed-51be-4cb6-9c01-034aedac86fd
              title: New company website
              description: ''
              status: active
              starts_on: 2016-02-04
              customer:
                type: company
                id: 2659dc4d-444b-4ced-b51c-b87591f604d7
              budget:
                amount: 123.3
                currency: EUR
              purchase_order_number: 000023
              custom_fields:
              - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                value: 092980616
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /projects.close:
    post:
      tags:
      - Projects
      summary: projects.close
      description: >-
        Projects allow users to work together as a team on a single project. They consist of one or more milestones, have one or more participants and are limited in time and budget.


        *Required scopes: `projects`*Closes a project, all its phases, and all tasks within each phase (but not meetings).
      operationId: projects.close
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects.closerequest'
            example:
              id: 01548b10-4932-4a18-8a89-005ad09db2c8
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /projects.reopen:
    post:
      tags:
      - Projects
      summary: projects.reopen
      description: >-
        Projects allow users to work together as a team on a single project. They consist of one or more milestones, have one or more participants and are limited in time and budget.


        *Required scopes: `projects`*Reopens a project, changing its status to "active".
      operationId: projects.reopen
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects.reopenrequest'
            example:
              id: 01548b10-4932-4a18-8a89-005ad09db2c8
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /projects.delete:
    post:
      tags:
      - Projects
      summary: projects.delete
      description: >-
        Projects allow users to work together as a team on a single project. They consist of one or more milestones, have one or more participants and are limited in time and budget.


        *Required scopes: `projects`*Delete a project.
      operationId: projects.delete
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects.deleterequest'
            example:
              id: 01548b10-4932-4a18-8a89-005ad09db2c8
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /projects.addParticipant:
    post:
      tags:
      - Projects
      summary: projects.addParticipant
      description: >-
        Projects allow users to work together as a team on a single project. They consist of one or more milestones, have one or more participants and are limited in time and budget.


        *Required scopes: `projects`*Add a participant to a project.
      operationId: projects.addParticipant
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects.addParticipantrequest'
            example:
              id: 8dbfa9db-c53f-410c-97d3-755b19685809
              participant:
                type: user
                id: a1388f3d-6116-4792-ac1c-04657697539e
              role: member
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /projects.updateParticipant:
    post:
      tags:
      - Projects
      summary: projects.updateParticipant
      description: >-
        Projects allow users to work together as a team on a single project. They consist of one or more milestones, have one or more participants and are limited in time and budget.


        *Required scopes: `projects`*Update a participant's role for a project.
      operationId: projects.updateParticipant
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects.updateParticipantrequest'
            example:
              id: 55fbe14f-7399-48e5-b4e0-64b7f5c50451
              participant:
                type: user
                id: 5ccbc008-f65e-4192-836c-4d7e21f54052
              role: decision_maker
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /milestones.list:
    get:
      tags:
      - Projects
      summary: milestones.list
      description: >-
        Every projects consists of one or more milestones which are limited in time and budget. Budget is however not included in this endpoints (yet).


        *Required scopes: `projects`*Get a list of project milestones.
      operationId: milestones.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milestones.listresponse'
              example:
                data:
                - id: cfb4146d-06be-41f1-bb39-aa3c929c71dc
                  project:
                    type: project
                    id: 944534fb-15f1-4eea-aab1-82a427aa2d0d
                  starts_on: 2017-01-01
                  due_on: 2018-01-01
                  name: Initial setup
                  responsible_user:
                    type: user
                    id: e1240972-6cfc-4549-b49c-edda7568cc48
                  status: open
                  invoicing_method: time_and_materials
                  depends_on:
                    type: milestone
                    id: 0488d792-ba9b-059f-bd57-bea75d3f4f4e
                  dependency_for:
                  - type: milestone
                    id: b71ff11f-074e-0705-9450-589342af4f4f
                  actuals:
                    billable_amount:
                      amount: 123.3
                      currency: EUR
                    costs:
                      amount: 123.3
                      currency: EUR
                    result:
                      amount: 123.3
                      currency: EUR
                  budget:
                    provided:
                      amount: 123.3
                      currency: EUR
                    spent:
                      amount: 123.3
                      currency: EUR
                    remaining:
                      amount: 123.3
                      currency: EUR
                    allocated:
                      amount: 123.3
                      currency: EUR
                    forecasted:
                      amount: 123.3
                      currency: EUR
      deprecated: false
    parameters: []
  /milestones.info:
    get:
      tags:
      - Projects
      summary: milestones.info
      description: >-
        Every projects consists of one or more milestones which are limited in time and budget. Budget is however not included in this endpoints (yet).


        *Required scopes: `projects`*Get details for a single milestone.
      operationId: milestones.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milestones.inforesponse'
              example:
                data:
                  id: 64349fa2-6ca2-4b19-82e6-d3258ceab2d8
                  project:
                    type: project
                    id: fffaf951-b65a-4cb1-bfb6-4b93e0e60c10
                  starts_on: 2017-01-01
                  due_on: 2018-01-01
                  name: Initial setup
                  description: ''
                  responsible_user:
                    type: user
                    id: e1240972-6cfc-4549-b49c-edda7568cc48
                  status: open
                  invoicing_method: time_and_materials
                  depends_on:
                    type: milestone
                    id: 0488d792-ba9b-059f-bd57-bea75d3f4f4e
                  dependency_for:
                  - type: milestone
                    id: b71ff11f-074e-0705-9450-589342af4f4f
                  actuals:
                    billable_amount:
                      amount: 123.3
                      currency: EUR
                    costs:
                      amount: 123.3
                      currency: EUR
                    result:
                      amount: 123.3
                      currency: EUR
                  budget:
                    provided:
                      amount: 123.3
                      currency: EUR
                    spent:
                      amount: 123.3
                      currency: EUR
                    remaining:
                      amount: 123.3
                      currency: EUR
                    allocated:
                      amount: 123.3
                      currency: EUR
                    forecasted:
                      amount: 123.3
                      currency: EUR
                  custom_fields:
                  - definition:
                      type: customFieldDefinition
                      id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                    value: 092980616
      deprecated: false
    parameters: []
  /milestones.create:
    post:
      tags:
      - Projects
      summary: milestones.create
      description: >-
        Every projects consists of one or more milestones which are limited in time and budget. Budget is however not included in this endpoints (yet).


        *Required scopes: `projects`*Create a new milestone.
      operationId: milestones.create
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/billing_method'
              - type: string
                examples:
                - fixed_price
              examples:
              - project_id: 1c159f98-4b07-438a-9f42-fb4206b9530d
                starts_on: 2017-01-01
                due_on: 2018-01-01
                name: Initial setup
                responsible_user_id: e1240972-6cfc-4549-b49c-edda7568cc48
                billing_method: time_and_materials
                budget:
                  amount: 123.3
                  currency: EUR
                depends_on: 0488d792-ba9b-059f-bd57-bea75d3f4f4e
                custom_fields:
                - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                  value: 092980616
              contentMediaType: application/json
            example:
              project_id: 1c159f98-4b07-438a-9f42-fb4206b9530d
              starts_on: 2017-01-01
              due_on: 2018-01-01
              name: Initial setup
              responsible_user_id: e1240972-6cfc-4549-b49c-edda7568cc48
              billing_method: time_and_materials
              budget:
                amount: 123.3
                currency: EUR
              depends_on: 0488d792-ba9b-059f-bd57-bea75d3f4f4e
              custom_fields:
              - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                value: 092980616
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milestones.createresponse'
              example:
                data:
                  type: milestone
                  id: 51f19f91-6343-4001-a628-3afe45f674ad
      deprecated: false
    parameters: []
  /milestones.update:
    post:
      tags:
      - Projects
      summary: milestones.update
      description: >-
        Every projects consists of one or more milestones which are limited in time and budget. Budget is however not included in this endpoints (yet).


        *Required scopes: `projects`*Update a milestone.
      operationId: milestones.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/milestones.updaterequest'
            example:
              id: 67e80ad8-d14f-4510-a2bd-a4c6aa578c37
              starts_on: 2017-01-01
              due_on: 2018-01-01
              name: Initial setup
              responsible_user_id: e1240972-6cfc-4549-b49c-edda7568cc48
              depends_on: 0488d792-ba9b-059f-bd57-bea75d3f4f4e
              propagate_date_changes: false
              custom_fields:
              - id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                value: 092980616
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /milestones.delete:
    post:
      tags:
      - Projects
      summary: milestones.delete
      description: >-
        Every projects consists of one or more milestones which are limited in time and budget. Budget is however not included in this endpoints (yet).


        *Required scopes: `projects`*Delete a milestone.
      operationId: milestones.delete
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/milestones.deleterequest'
            example:
              id: 67e80ad8-d14f-4510-a2bd-a4c6aa578c37
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /milestones.close:
    post:
      tags:
      - Projects
      summary: milestones.close
      description: >-
        Every projects consists of one or more milestones which are limited in time and budget. Budget is however not included in this endpoints (yet).


        *Required scopes: `projects`*Close a milestone. All open tasks will be closed, open meetings will remain open. Closing the last open milestone will also close the project.
      operationId: milestones.close
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/milestones.closerequest'
            example:
              id: 67e80ad8-d14f-4510-a2bd-a4c6aa578c37
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /milestones.open:
    post:
      tags:
      - Projects
      summary: milestones.open
      description: >-
        Every projects consists of one or more milestones which are limited in time and budget. Budget is however not included in this endpoints (yet).


        *Required scopes: `projects`*(Re)open a milestone. If the milestone's project is closed, the project will be reopened.
      operationId: milestones.open
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/milestones.openrequest'
            example:
              id: 67e80ad8-d14f-4510-a2bd-a4c6aa578c37
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /tasks.list:
    get:
      tags:
      - Tasks
      summary: tasks.list
      description: Get a list of tasks.
      operationId: tasks.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks.listresponse'
              example:
                data:
                - id: f29abf48-337d-44b4-aad4-585f5277a456
                  title: Review code changes
                  description: ''
                  completed: false
                  completed_at: 2016-02-04T16:44:33+00:00
                  due_on: 2016-02-04
                  estimated_duration:
                    unit: min
                    value: 60
                  work_type:
                    type: workType
                    id: 32665afd-1818-0ed3-9e18-a603a3a21b95
                  assignee:
                    type: user
                    id: f29abf48-337d-44b4-aad4-585f5277a456
                  customer:
                    type: contact
                    id: f29abf48-337d-44b4-aad4-585f5277a456
                  milestone:
                    type: milestone
                    id: 32665afd-1818-0ed3-9e18-a603a3a21b95
                  deal:
                    type: deal
                    id: 32665afd-1818-0ed3-9e18-a603a3a21b95
                  project:
                    type: project
                    id: bbbb772b-e7ad-06c5-935c-b0f6ef61d6bc
      deprecated: false
    parameters: []
  /tasks.info:
    get:
      tags:
      - Tasks
      summary: tasks.info
      description: Get information about a task.
      operationId: tasks.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks.inforesponse'
              example:
                data:
                  id: 6fac0bf0-e803-424e-af67-76863a3d7d16
                  title: Review code changes
                  description: ''
                  completed: false
                  completed_at: 2016-02-04T16:44:33+00:00
                  due_on: 2016-02-04
                  estimated_duration:
                    unit: min
                    value: 60
                  work_type:
                    type: workType
                    id: 32665afd-1818-0ed3-9e18-a603a3a21b95
                  assignee:
                    type: user
                    id: f29abf48-337d-44b4-aad4-585f5277a456
                  customer:
                    type: contact
                    id: f29abf48-337d-44b4-aad4-585f5277a456
                  milestone:
                    type: milestone
                    id: 32665afd-1818-0ed3-9e18-a603a3a21b95
                  deal:
                    type: deal
                    id: 32665afd-1818-0ed3-9e18-a603a3a21b95
                  project:
                    type: project
                    id: bbbb772b-e7ad-06c5-935c-b0f6ef61d6bc
                  custom_fields:
                  - definition:
                      type: customFieldDefinition
                      id: bf6765de-56eb-40ec-ad14-9096c5dc5fe1
                    value: 092980616
      deprecated: false
    parameters: []
  /tasks.create:
    post:
      tags:
      - Tasks
      summary: tasks.create
      description: Create a new task.
      operationId: tasks.create
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tasks.createrequest'
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks.createresponse'
              example:
                data:
                  type: task
                  id: 1759dfc1-7365-4f1b-8d90-d29787a5d29d
      deprecated: false
    parameters: []
  /tasks.update:
    post:
      tags:
      - Tasks
      summary: tasks.update
      description: Update a task.
      operationId: tasks.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tasks.updaterequest'
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /tasks.complete:
    post:
      tags:
      - Tasks
      summary: tasks.complete
      description: Mark a task as complete.
      operationId: tasks.complete
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tasks.completerequest'
            example:
              id: 46156648-87c6-478d-8aa7-1dc3a00dacab
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /tasks.reopen:
    post:
      tags:
      - Tasks
      summary: tasks.reopen
      description: Reopen a task that had been marked as complete.
      operationId: tasks.reopen
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tasks.reopenrequest'
            example:
              id: 46156648-87c6-478d-8aa7-1dc3a00dacab
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /tasks.delete:
    post:
      tags:
      - Tasks
      summary: tasks.delete
      description: Delete a task.
      operationId: tasks.delete
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tasks.deleterequest'
            example:
              id: 5f0afd8a-8a40-48a4-bbe6-7d0e9c61bb6d
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /tasks.schedule:
    post:
      tags:
      - Tasks
      summary: tasks.schedule
      description: Schedule a task in your calendar.
      operationId: tasks.schedule
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tasks.schedulerequest'
            example:
              id: 7c70c54e-6e50-4e6a-b5fd-80234eb535cf
              starts_at: 2016-02-04T16:00:00+00:00
              ends_at: 2016-02-04T18:00:00+00:00
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks.scheduleresponse'
              example:
                data:
                  type: event
                  id: d7d2d100-d440-46c2-a4a3-177ad4b2a860
      deprecated: false
    parameters: []
  /timeTracking.list:
    get:
      tags:
      - Time Tracking
      summary: timeTracking.list
      description: Time tracking allows users to record time spent on tasks or projects and the type of work. You are able to follow-up on the budgets of your projects and eventually you are able to invoice the billable time.Get a list of tracked time.
      operationId: timeTracking.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeTracking.listresponse'
              example:
                data:
                - id: 4f4288b2-c21b-4dac-87f6-a97511309079
                  user:
                    type: user
                    id: eb1eb8b8-d0cb-4385-b60a-c995953ec6be
                  work_type:
                    type: workType
                    id: 8a146eda-c9af-4b11-b63a-ddac47bb254d
                  started_on: 2017-04-26
                  started_at: 2017-04-26T10:01:49+00:00
                  ended_at: 2017-04-26T11:01:49+00:00
                  duration: 3600
                  description: Timer description
                  subject:
                    type: milestone
                    id: 58f5b799-51c4-4eb9-8308-b1aa02e0a873
                  invoiceable: true
      deprecated: false
    parameters: []
  /timeTracking.info:
    get:
      tags:
      - Time Tracking
      summary: timeTracking.info
      description: Time tracking allows users to record time spent on tasks or projects and the type of work. You are able to follow-up on the budgets of your projects and eventually you are able to invoice the billable time.Get information about tracked time.
      operationId: timeTracking.info
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeTracking.inforesponse'
              example:
                data:
                  id: 6caeea11-aa83-4da9-9859-5b62bbf3a476
                  user:
                    type: user
                    id: 56bc6b39-b722-42f5-9ea7-acea4814d7dd
                  work_type:
                    type: workType
                    id: d980dbc6-944e-47fc-bf16-2ed7d5a71889
                  started_on: 2017-04-26
                  started_at: 2017-04-26T10:01:49+00:00
                  ended_at: 2017-04-26T11:01:49+00:00
                  duration: 3600
                  description: Timer description
                  subject:
                    type: milestone
                    id: 5883723a-b5aa-4c9d-a02b-ec0dd25f6ca2
                  invoiceable: true
                  locked: true
                meta:
                  updatable: true
      deprecated: false
    parameters: []
  /timeTracking.add:
    post:
      tags:
      - Time Tracking
      summary: timeTracking.add
      description: Time tracking allows users to record time spent on tasks or projects and the type of work. You are able to follow-up on the budgets of your projects and eventually you are able to invoice the billable time.Add tracked time.
      operationId: timeTracking.add
      parameters: []
      requestBody:
        description: Note that the time tracking entry will be split up if the time span passes midnight.
        content:
          application/json:
            schema:
              oneOf:
              - type: string
                examples:
                - 2017-04-26T10:01:49+00:00
              - type: string
                examples:
                - 2017-04-26T10:01:49+00:00
              - type: string
                examples:
                - 2017-04-26
              description: Note that the time tracking entry will be split up if the time span passes midnight.
              examples:
              - work_type_id: 2175597d-484e-4a1c-a781-cbc3d9f893ba
                started_at: 2017-04-26T10:01:49+00:00
                duration: 3600
                subject:
                  type: milestone
                  id: b40ea20d-4ae5-4a56-be12-03766ecaefae
                invoiceable: true
              contentMediaType: application/json
            example:
              work_type_id: 2175597d-484e-4a1c-a781-cbc3d9f893ba
              started_at: 2017-04-26T10:01:49+00:00
              duration: 3600
              subject:
                type: milestone
                id: b40ea20d-4ae5-4a56-be12-03766ecaefae
              invoiceable: true
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeTracking.addresponse'
      deprecated: false
    parameters: []
  /timeTracking.update:
    post:
      tags:
      - Time Tracking
      summary: timeTracking.update
      description: Time tracking allows users to record time spent on tasks or projects and the type of work. You are able to follow-up on the budgets of your projects and eventually you are able to invoice the billable time.Update tracked time.
      operationId: timeTracking.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
              - type: string
                examples:
                - 2017-04-26T10:01:49+00:00
              - type: string
                examples:
                - 2017-04-26
              examples:
              - id: 66621f54-3d0d-420f-8d4b-ddd7fc473bf2
                work_type_id: a12f4289-3580-4780-bb6d-b4e9f84f80ad
                started_at: 2017-04-26T10:01:49+00:00
                duration: 3600
                subject:
                  type: milestone
                  id: 88f14220-55d3-4ca6-802b-425e2f53c850
                invoiceable: true
              contentMediaType: application/json
            example:
              id: 66621f54-3d0d-420f-8d4b-ddd7fc473bf2
              work_type_id: a12f4289-3580-4780-bb6d-b4e9f84f80ad
              started_at: 2017-04-26T10:01:49+00:00
              duration: 3600
              subject:
                type: milestone
                id: 88f14220-55d3-4ca6-802b-425e2f53c850
              invoiceable: true
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /timeTracking.resume:
    post:
      tags:
      - Time Tracking
      summary: timeTracking.resume
      description: Time tracking allows users to record time spent on tasks or projects and the type of work. You are able to follow-up on the budgets of your projects and eventually you are able to invoice the billable time.Start a new timer based on previously tracked time.
      operationId: timeTracking.resume
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timeTracking.resumerequest'
            example:
              id: 06dfa08a-b769-4005-a912-45ab885c5737
              started_at: 2017-04-26T10:01:49+00:00
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeTracking.resumeresponse'
      deprecated: false
    parameters: []
  /timeTracking.delete:
    post:
      tags:
      - Time Tracking
      summary: timeTracking.delete
      description: Time tracking allows users to record time spent on tasks or projects and the type of work. You are able to follow-up on the budgets of your projects and eventually you are able to invoice the billable time.Delete a tracked time.
      operationId: timeTracking.delete
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timeTracking.deleterequest'
            example:
              id: 6caeea11-aa83-4da9-9859-5b62bbf3a476
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /timers.current:
    get:
      tags:
      - Time Tracking
      summary: timers.current
      description: Timers are an easy way to track time. You can start, stop or resume a timer any time. However, only one timer can run simultaneously per user. Every action will result in the creation or update of a time tracking.Get the current running timer.
      operationId: timers.current
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timers.currentresponse'
              example:
                data:
                  id: 2b282dec-ba9d-4faa-9b39-944b99ee5c0a
                  user:
                    type: user
                    id: 5443a1b9-7673-4922-921f-1da4ff557783
                  work_type:
                    type: workType
                    id: d02de940-9435-4e35-bc0b-3d17f3d0ea7b
                  started_at: 2017-04-26T10:01:49+00:00
                  description: Timer description
                  subject:
                    type: milestone
                    id: 31931bc9-4ae8-4c50-ba8d-9ea88498c1c1
                  invoiceable: true
      deprecated: false
    parameters: []
  /timers.start:
    post:
      tags:
      - Time Tracking
      summary: timers.start
      description: Timers are an easy way to track time. You can start, stop or resume a timer any time. However, only one timer can run simultaneously per user. Every action will result in the creation or update of a time tracking.Start a new timer.
      operationId: timers.start
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timers.startrequest'
            example:
              work_type_id: db41328a-7a25-4e85-8fb9-830baacb7f40
              started_at: 2017-04-26T10:01:49+00:00
              subject:
                type: milestone
                id: 29ff471c-7d8f-40d5-8c95-9a9cab841e65
              invoiceable: true
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timers.startresponse'
      deprecated: false
    parameters: []
  /timers.stop:
    post:
      tags:
      - Time Tracking
      summary: timers.stop
      description: Timers are an easy way to track time. You can start, stop or resume a timer any time. However, only one timer can run simultaneously per user. Every action will result in the creation or update of a time tracking.Stop the current timer. This will add a new time tracking in the background.
      operationId: timers.stop
      parameters: []
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timers.stopresponse'
              example:
                data:
                  type: timeTracking
                  id: 4ff475b2-f45b-4803-800e-350b9c02aeca
      deprecated: false
    parameters: []
  /timers.update:
    post:
      tags:
      - Time Tracking
      summary: timers.update
      description: Timers are an easy way to track time. You can start, stop or resume a timer any time. However, only one timer can run simultaneously per user. Every action will result in the creation or update of a time tracking.Update the current timer. Only possible if there is a timer running.
      operationId: timers.update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timers.updaterequest'
            example:
              work_type_id: db41328a-7a25-4e85-8fb9-830baacb7f40
              started_at: 2017-04-26T10:01:49+00:00
              description: Timer Description
              subject:
                type: milestone
                id: 29ff471c-7d8f-40d5-8c95-9a9cab841e65
              invoiceable: true
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /migrate.id:
    get:
      tags:
      - Other
      summary: migrate.id
      description: >-
        WARNING! These endpoints are not guaranteed to stay backwards compatible.

        Their only use is to allow older integrations to migrate their data to the new API.Translates an ID from the deprecated API into a new UUID.
      operationId: migrate.id
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/migrate.idresponse'
              example:
                data:
                  type: contact
                  id: 6ad54ec6-ee2d-4500-afe6-0917c1aa7a38
      deprecated: false
    parameters: []
  /migrate.taxRate:
    get:
      tags:
      - Other
      summary: migrate.taxRate
      description: >-
        WARNING! These endpoints are not guaranteed to stay backwards compatible.

        Their only use is to allow older integrations to migrate their data to the new API.Translates tax rates from the deprecated API into a new UUID tax rate.
      operationId: migrate.taxRate
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/migrate.taxRateresponse'
              example:
                data:
                  type: taxRate
                  id: 6ad54ec6-ee2d-4500-afe6-0917c1aa7a38
      deprecated: false
    parameters: []
  /migrate.activityType:
    get:
      tags:
      - Other
      summary: migrate.activityType
      description: >-
        WARNING! These endpoints are not guaranteed to stay backwards compatible.

        Their only use is to allow older integrations to migrate their data to the new API.Translates "meeting", "call" and "task" into their respective activity type UUID.
      operationId: migrate.activityType
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/migrate.activityTyperesponse'
              example:
                data:
                  type: activityType
                  id: 28f3639d-9b64-44a8-974d-a4df645af6a5
      deprecated: false
    parameters: []
  /webhooks.register:
    post:
      tags:
      - Other
      summary: webhooks.register
      description: Register a new webhook.
      operationId: webhooks.register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebHook'
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /webhooks.list:
    get:
      tags:
      - Other
      summary: webhooks.list
      description: List registered webhooks ordered by URL.
      operationId: webhooks.list
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhooks.listresponse'
      deprecated: false
    parameters: []
  /webhooks.unregister:
    post:
      tags:
      - Other
      summary: webhooks.unregister
      description: Unregister a webhook.
      operationId: webhooks.unregister
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebHook'
        required: true
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
    parameters: []
components:
  schemas:
    Telephone:
      title: Telephone
      required:
      - type
      - number
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type'
        number:
          type: string
          examples:
          - 092980615
    CompanyTelephone:
      title: CompanyTelephone
      required:
      - type
      - number
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type1'
        number:
          type: string
          examples:
          - 092980615
    AddressRequest:
      title: AddressRequest
      required:
      - line_1
      - postal_code
      - city
      - country
      type: object
      properties:
        line_1:
          type:
          - string
          - 'null'
          examples:
          - Dok Noord 3A 101
        postal_code:
          type:
          - string
          - 'null'
          examples:
          - '9000'
        city:
          type:
          - string
          - 'null'
          examples:
          - Ghent
        country:
          type: string
          examples:
          - BE
        area_level_two_id:
          type: string
          examples:
          - db232cf8-ad4a-024b-941f-15a7a74f0fd2
    AddressResponse:
      title: AddressResponse
      type: object
      properties:
        line_1:
          type:
          - string
          - 'null'
          examples:
          - Dok Noord 3A 101
        postal_code:
          type:
          - string
          - 'null'
          examples:
          - '9000'
        city:
          type:
          - string
          - 'null'
          examples:
          - Ghent
        country:
          type: string
          examples:
          - BE
        area_level_two:
          $ref: '#/components/schemas/User'
    AddressWithAddresseeRequest:
      title: AddressWithAddresseeRequest
      type: object
      properties:
        addressee:
          type: string
          examples:
          - Teamleader HQ
        line_1:
          type:
          - string
          - 'null'
          examples:
          - Dok Noord 3A 101
        postal_code:
          type:
          - string
          - 'null'
          examples:
          - '9000'
        city:
          type:
          - string
          - 'null'
          examples:
          - Ghent
        country:
          type: string
          examples:
          - BE
        area_level_two_id:
          type: string
          examples:
          - db232cf8-ad4a-024b-941f-15a7a74f0fd2
    AddressWithAddresseeResponse:
      title: AddressWithAddresseeResponse
      type: object
      properties:
        addressee:
          type: string
          examples:
          - Teamleader HQ
        line_1:
          type:
          - string
          - 'null'
          examples:
          - Dok Noord 3A 101
        postal_code:
          type:
          - string
          - 'null'
          examples:
          - '9000'
        city:
          type:
          - string
          - 'null'
          examples:
          - Ghent
        country:
          type: string
          examples:
          - BE
        area_level_two:
          $ref: '#/components/schemas/User'
    Money:
      title: Money
      required:
      - amount
      - currency
      type: object
      properties:
        amount:
          type: number
          examples:
          - 123.3
        currency:
          $ref: '#/components/schemas/currency'
    Page:
      title: Page
      type: object
      properties:
        size:
          type: number
          examples:
          - 20
        number:
          type: number
          examples:
          - 1
    Pagination:
      title: Pagination
      type: object
      properties:
        size:
          type: number
          examples:
          - 10
        number:
          type: number
          examples:
          - 2
    PaymentTerm:
      title: PaymentTerm
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type2'
        days:
          type: number
          description: Modifier "X" for the above statements. Not required when type is 'cash'.
    CustomField:
      title: CustomField
      type: object
      properties:
        definition:
          $ref: '#/components/schemas/User'
    CustomFieldValue:
      title: CustomFieldValue
      type: object
      properties:
        id:
          type: string
          examples:
          - bf6765de-56eb-40ec-ad14-9096c5dc5fe1
    WebHook:
      title: WebHook
      required:
      - url
      - types
      type: object
      properties:
        url:
          type: string
          description: Your webhook URL
          examples:
          - https://example.com
        types:
          type: array
          items:
            type: object
          description: Array of event types that fire the webhook
    Duration:
      title: Duration
      required:
      - unit
      - value
      type: object
      properties:
        unit:
          const: s
          type: string
          examples:
          - s
        value:
          type: number
          examples:
          - 10800
    User:
      title: User
      type: object
      properties:
        type:
          type: string
          examples:
          - user
        id:
          type: string
          examples:
          - bef8c53b-b6bc-0fde-944e-5c4b16e5155a
    activityTypes.listresponse:
      title: activityTypes.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data8'
          description: ''
    actuals:
      title: actuals
      type: object
      properties:
        billable_amount:
          $ref: '#/components/schemas/Money'
        costs:
          $ref: '#/components/schemas/Money'
        result:
          $ref: '#/components/schemas/Money'
        profit_percentage:
          type: number
      description: Only accessible for administrators of this project
    actuals2:
      title: actuals2
      type: object
      properties:
        billable_amount:
          $ref: '#/components/schemas/Money'
        costs:
          $ref: '#/components/schemas/Money'
        result:
          $ref: '#/components/schemas/Money'
      description: Only accessible for administrators of the project this milestone belongs to
    addresses:
      title: addresses
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type11'
        address:
          $ref: '#/components/schemas/AddressWithAddresseeResponse'
    addresses1:
      title: addresses1
      required:
      - type
      - address
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type11'
        address:
          $ref: '#/components/schemas/AddressWithAddresseeRequest'
    assignee:
      title: assignee
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type43'
        id:
          type: string
          examples:
          - f29abf48-337d-44b4-aad4-585f5277a456
      description: Null if the task is unassigned
    assignee2:
      title: assignee2
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type43'
        id:
          type: string
          examples:
          - f29abf48-337d-44b4-aad4-585f5277a456
      description: Use null if the task is unassigned
    attendees:
      title: attendees
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type26'
        id:
          type: string
          examples:
          - 8b3afad7-648d-4b4c-b38b-5726d3222282
    attendees2:
      title: attendees2
      required:
      - type
      - id
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type26'
        id:
          type: string
          examples:
          - 6ddd2666-65a0-497f-9f01-54c4343ec1a6
    billing_method:
      title: billing_method
      enum:
      - non_invoiceable
      - time_and_materials
      type: string
      examples:
      - non_invoiceable
    budget:
      title: budget
      type: object
      properties:
        provided:
          $ref: '#/components/schemas/Money'
        spent:
          $ref: '#/components/schemas/spent'
        remaining:
          $ref: '#/components/schemas/Money'
        allocated:
          $ref: '#/components/schemas/Money'
        forecasted:
          $ref: '#/components/schemas/Money'
      description: Only accessible for administrators of this project
    budget2:
      title: budget2
      type: object
      properties:
        provided:
          $ref: '#/components/schemas/Money'
        spent:
          $ref: '#/components/schemas/Money'
        remaining:
          $ref: '#/components/schemas/Money'
        allocated:
          $ref: '#/components/schemas/Money'
        forecasted:
          $ref: '#/components/schemas/Money'
      description: Only accessible for administrators of the project this milestone belongs to
    businessTypes.listresponse:
      title: businessTypes.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data15'
          description: ''
    companies:
      title: companies
      type: object
      properties:
        position:
          type: string
          examples:
          - CEO
        decision_maker:
          type: boolean
          examples:
          - true
        company:
          $ref: '#/components/schemas/User'
    companies.addrequest:
      title: companies.addrequest
      required:
      - name
      type: object
      properties:
        name:
          type: string
          examples:
          - Pied Piper
        business_type_id:
          type: string
          examples:
          - fd48d4a3-b9dc-4eac-8071-5889c9f21e5d
        vat_number:
          type: string
          examples:
          - BE0899623035
        national_identification_number:
          type: string
          examples:
          - '63326426'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/emails8'
          description: ''
        telephones:
          type: array
          items:
            $ref: '#/components/schemas/CompanyTelephone'
          description: ''
        website:
          type: string
          examples:
          - http://example.com
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/addresses1'
          description: ''
        iban:
          type: string
          examples:
          - BE12 1234 1234 1234
        bic:
          type: string
          examples:
          - BICBANK
        language:
          type: string
          examples:
          - en
        responsible_user_id:
          type: string
          examples:
          - 2b12bd5d-d2d9-43ac-8755-36a1e00bd67f
        remarks:
          type: string
          description: Uses Markdown formatting
          examples:
          - Met at expo
        tags:
          type: array
          items:
            type: string
          description: ''
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
        marketing_mails_consent:
          type: boolean
          examples:
          - false
    companies.addresponse:
      title: companies.addresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    companies.deleterequest:
      title: companies.deleterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - f3d67f3e-b8a9-45e8-99b1-17a3b14de8a6
    companies.inforesponse:
      title: companies.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data13'
    companies.listresponse:
      title: companies.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data12'
          description: ''
    companies.tagrequest:
      title: companies.tagrequest
      required:
      - id
      - tags
      type: object
      properties:
        id:
          type: string
          examples:
          - cadd94ba-a41e-4eb4-a46e-39a7f6f96070
        tags:
          type: array
          items:
            type: string
          description: ''
    companies.untagrequest:
      title: companies.untagrequest
      required:
      - id
      - tags
      type: object
      properties:
        id:
          type: string
          examples:
          - 518d2e5e-99bc-4c66-8509-78e6820a1418
        tags:
          type: array
          items:
            type: string
          description: ''
    companies.updaterequest:
      title: companies.updaterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 4784189d-610b-4488-b3a5-5f324f752417
        name:
          type: string
          examples:
          - Pied Piper
        business_type_id:
          type:
          - string
          - 'null'
          examples:
          - fd48d4a3-b9dc-4eac-8071-5889c9f21e5d
        vat_number:
          type:
          - string
          - 'null'
          examples:
          - BE0899623035
        national_identification_number:
          type:
          - string
          - 'null'
          examples:
          - '63326426'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/emails8'
          description: ''
        telephones:
          type: array
          items:
            $ref: '#/components/schemas/CompanyTelephone'
          description: ''
        website:
          type: string
          examples:
          - http://example.com
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/addresses1'
          description: ''
        iban:
          type:
          - string
          - 'null'
          examples:
          - BE12 1234 1234 1234
        bic:
          type:
          - string
          - 'null'
          examples:
          - BICBANK
        language:
          type:
          - string
          - 'null'
          examples:
          - en
        responsible_user_id:
          type:
          - string
          - 'null'
          examples:
          - 0ea94804-401d-4dbd-a577-c2d60998f798
        remarks:
          type:
          - string
          - 'null'
          description: Uses Markdown formatting
          examples:
          - Met at expo
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
        marketing_mails_consent:
          type: boolean
          examples:
          - false
    configuration:
      title: configuration
      type: object
      properties:
        options:
          type: array
          items:
            type: string
          description: ''
        extra_option_allowed:
          type: boolean
          examples:
          - true
    contacts.addrequest:
      title: contacts.addrequest
      required:
      - last_name
      type: object
      properties:
        first_name:
          type: string
          examples:
          - John
        last_name:
          type: string
          examples:
          - Smith
        emails:
          type: array
          items:
            $ref: '#/components/schemas/emails4'
          description: ''
        salutation:
          type: string
          examples:
          - Mr
        telephones:
          type: array
          items:
            $ref: '#/components/schemas/Telephone'
          description: ''
        website:
          type: string
          examples:
          - http://example.com
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/addresses1'
          description: ''
        language:
          type: string
          examples:
          - en
        gender:
          $ref: '#/components/schemas/gender'
        birthdate:
          type: string
          examples:
          - 1989-08-19
        iban:
          type: string
          examples:
          - BE12123412341234
        bic:
          type: string
          examples:
          - BICBANK
        national_identification_number:
          type: string
          examples:
          - 01234567-X
        remarks:
          type: string
          description: Uses Markdown formatting
          examples:
          - Met at expo
        tags:
          type: array
          items:
            type: string
          description: ''
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
        marketing_mails_consent:
          type: boolean
          examples:
          - false
    contacts.addresponse:
      title: contacts.addresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    contacts.deleterequest:
      title: contacts.deleterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 4e235f27-0af0-40e5-82f3-d32d0aa9edb3
    contacts.inforesponse:
      title: contacts.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data10'
    contacts.linkToCompanyrequest:
      title: contacts.linkToCompanyrequest
      required:
      - id
      - company_id
      type: object
      properties:
        id:
          type: string
          examples:
          - 75596038-b9c8-4a37-969d-61059e300a28
        company_id:
          type: string
          examples:
          - 4da20f00-0628-4336-b885-aa90e580dd85
        position:
          type: string
          examples:
          - CEO
        decision_maker:
          type: boolean
          examples:
          - true
    contacts.listresponse:
      title: contacts.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data9'
          description: ''
    contacts.tagrequest:
      title: contacts.tagrequest
      required:
      - id
      - tags
      type: object
      properties:
        id:
          type: string
          examples:
          - cadd94ba-a41e-4eb4-a46e-39a7f6f96070
        tags:
          type: array
          items:
            type: string
          description: ''
    contacts.unlinkFromCompanyrequest:
      title: contacts.unlinkFromCompanyrequest
      required:
      - id
      - company_id
      type: object
      properties:
        id:
          type: string
          examples:
          - b4b3160a-b55e-4033-bdae-25b6d22949b4
        company_id:
          type: string
          examples:
          - 3f1c8650-4292-4187-bb02-4aa00bbe9632
    contacts.untagrequest:
      title: contacts.untagrequest
      required:
      - id
      - tags
      type: object
      properties:
        id:
          type: string
          examples:
          - 518d2e5e-99bc-4c66-8509-78e6820a1418
        tags:
          type: array
          items:
            type: string
          description: ''
    contacts.updaterequest:
      title: contacts.updaterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 76c9d03c-ec5c-4b21-9fc6-7ffee488b12d
        first_name:
          type:
          - string
          - 'null'
          examples:
          - John
        last_name:
          type: string
          examples:
          - Smith
        salutation:
          type:
          - string
          - 'null'
          examples:
          - Mr
        emails:
          type: array
          items:
            $ref: '#/components/schemas/emails5'
          description: ''
        telephones:
          type:
          - array
          - 'null'
          items:
            $ref: '#/components/schemas/Telephone'
          description: ''
        website:
          type:
          - string
          - 'null'
          examples:
          - http://example.com
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/addresses1'
          description: ''
        language:
          type: string
          examples:
          - en
        gender:
          $ref: '#/components/schemas/gender'
        birthdate:
          type:
          - string
          - 'null'
          examples:
          - 1989-08-19
        iban:
          type:
          - string
          - 'null'
          examples:
          - BE12123412341234
        bic:
          type:
          - string
          - 'null'
          examples:
          - BICBANK
        national_identification_number:
          type: string
          examples:
          - 19346758-T
        remarks:
          type:
          - string
          - 'null'
          description: Uses Markdown formatting
          examples:
          - Met at expo
        tags:
          type: array
          items:
            type: string
          description: ''
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
        marketing_mails_consent:
          type: boolean
          examples:
          - false
    context:
      title: context
      enum:
      - contact
      - company
      - deal
      - project
      - milestone
      - product
      - invoice
      - subscription
      - ticket
      type: string
      examples:
      - contact
    creditNotes.downloadrequest:
      title: creditNotes.downloadrequest
      required:
      - id
      - format
      type: object
      properties:
        id:
          type: string
          examples:
          - d885e5d5-bacb-4607-bde9-abc4a04a901b
        format:
          $ref: '#/components/schemas/format'
    creditNotes.downloadresponse:
      title: creditNotes.downloadresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data26'
    creditNotes.inforesponse:
      title: creditNotes.inforesponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data39'
          description: ''
    creditNotes.listresponse:
      title: creditNotes.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data38'
          description: ''
    currency:
      title: currency
      enum:
      - BAM
      - CAD
      - CHF
      - CLP
      - CNY
      - COP
      - CZK
      - DKK
      - EUR
      - GBP
      - INR
      - ISK
      - JPY
      - MAD
      - MXN
      - NOK
      - PEN
      - PLN
      - RON
      - SEK
      - TRY
      - USD
      - ZAR
      type: string
      examples:
      - EUR
    currency_exchange_rate:
      title: currency_exchange_rate
      type: object
      properties:
        from:
          type: string
          examples:
          - USD
        to:
          type: string
          examples:
          - EUR
        rate:
          type: number
          examples:
          - 1.1234
    customer:
      title: customer
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type21'
        id:
          type: string
          examples:
          - 2659dc4d-444b-4ced-b51c-b87591f604d7
    customer2:
      title: customer2
      required:
      - type
      - id
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type21'
        id:
          type: string
          examples:
          - 09e5d75f-f817-4872-9723-57fbb8ff710d
    customer13:
      title: customer13
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type21'
        id:
          type: string
          examples:
          - 2659dc4d-444b-4ced-b51c-b87591f604d7
      description: Null will unlink the customer from the project
    customFieldDefinitions.inforesponse:
      title: customFieldDefinitions.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data6'
    customFieldDefinitions.listresponse:
      title: customFieldDefinitions.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data6'
          description: ''
    data:
      title: data
      type: object
      properties:
        id:
          type: string
          examples:
          - 67c576e7-7e6f-465d-b6ab-a864f6e5e95b
        name:
          type: string
          examples:
          - Human Resources
        vat_number:
          type: string
          examples:
          - BE0899623035
        currency:
          type: string
          examples:
          - EUR
        emails:
          type: array
          items:
            $ref: '#/components/schemas/emails'
          description: ''
        status:
          $ref: '#/components/schemas/status'
    data1:
      title: data1
      type: object
      properties:
        id:
          type: string
          examples:
          - 67c576e7-7e6f-465d-b6ab-a864f6e5e95b
        name:
          type: string
          examples:
          - Human Resources
        vat_number:
          type: string
          examples:
          - BE0899623035
        address:
          $ref: '#/components/schemas/AddressResponse'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/emails'
          description: ''
        telephones:
          type: array
          items:
            type: object
          description: ''
        website:
          type: string
          examples:
          - https://piedpiper.com
        currency:
          type: string
          examples:
          - EUR
        iban:
          type: string
          examples:
          - BE12123412341234
        bic:
          type: string
          examples:
          - BICBANK
        fiscal_regime:
          type:
          - string
          - 'null'
          examples:
          - RF01
        status:
          $ref: '#/components/schemas/status'
    data2:
      title: data2
      type: object
      properties:
        id:
          type: string
          examples:
          - cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5
        account:
          $ref: '#/components/schemas/User'
        first_name:
          type: string
          examples:
          - John
        last_name:
          type: string
          examples:
          - Smith
        email:
          type: string
          examples:
          - john@teamleader.eu
        telephones:
          type: array
          items:
            $ref: '#/components/schemas/Telephone'
          description: ''
        language:
          $ref: '#/components/schemas/language'
        function:
          type: string
          examples:
          - Sales
        time_zone:
          type: string
          examples:
          - Europe/Brussels
        preferences:
          $ref: '#/components/schemas/preferences'
    data3:
      title: data3
      type: object
      properties:
        id:
          type: string
          examples:
          - cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5
        account:
          $ref: '#/components/schemas/User'
        first_name:
          type: string
          examples:
          - John
        last_name:
          type: string
          examples:
          - Smith
        email:
          type: string
          examples:
          - john@teamleader.eu
        telephones:
          type: array
          items:
            $ref: '#/components/schemas/Telephone'
          description: ''
        language:
          type: string
          examples:
          - nl
        function:
          type: string
          examples:
          - Sales
        status:
          $ref: '#/components/schemas/status2'
    data4:
      title: data4
      type: object
      properties:
        id:
          type: string
          examples:
          - cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5
        account:
          $ref: '#/components/schemas/User'
        first_name:
          type: string
          examples:
          - John
        last_name:
          type: string
          examples:
          - Smith
        email:
          type: string
          examples:
          - john@teamleader.eu
        telephones:
          type: array
          items:
            $ref: '#/components/schemas/Telephone'
          description: ''
        language:
          $ref: '#/components/schemas/language'
        function:
          type: string
          examples:
          - Sales
        time_zone:
          type: string
          examples:
          - Europe/Brussels
        status:
          $ref: '#/components/schemas/status2'
    data5:
      title: data5
      type: object
      properties:
        id:
          type: string
          examples:
          - 4b5291aa-2d78-09d2-882c-6c1483f00d88
        name:
          type: string
          examples:
          - Designers
        team_lead:
          $ref: '#/components/schemas/User'
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: ''
    data6:
      title: data6
      type: object
      properties:
        id:
          type: string
          examples:
          - 74855f4a-2b61-429c-81d8-c79ad3675a76
        context:
          $ref: '#/components/schemas/context'
        type:
          $ref: '#/components/schemas/type7'
        label:
          type: string
        group:
          type: string
        required:
          type: boolean
          examples:
          - false
        configuration:
          $ref: '#/components/schemas/configuration'
    data8:
      title: data8
      type: object
      properties:
        id:
          type: string
          examples:
          - 811a5825-96f4-4318-83c3-2840935c6003
        name:
          type: string
          examples:
          - Planning
    data9:
      title: data9
      type: object
      properties:
        id:
          type: string
          examples:
          - 2a39e420-3ba3-4384-8024-fa702ef99c9f
        first_name:
          type: string
          examples:
          - Erlich
        last_name:
          type: string
          examples:
          - Bachman
        status:
          $ref: '#/components/schemas/status2'
        salutation:
          type: string
          examples:
          - Mr
        emails:
          type: array
          items:
            $ref: '#/components/schemas/emails2'
          description: ''
        telephones:
          type: array
          items:
            $ref: '#/components/schemas/Telephone'
          description: ''
        website:
          type: string
          examples:
          - https://piedpiper.com
        primary_address:
          $ref: '#/components/schemas/AddressResponse'
        gender:
          $ref: '#/components/schemas/gender'
        birthdate:
          type: string
          examples:
          - 1987-04-25
        iban:
          type: string
          examples:
          - BE12123412341234
        bic:
          type: string
          examples:
          - BICBANK
        national_identification_number:
          type: string
          examples:
          - 86792345-L
        language:
          type: string
          examples:
          - en
        payment_term:
          $ref: '#/components/schemas/PaymentTerm'
        invoicing_preferences:
          $ref: '#/components/schemas/invoicing_preferences'
        tags:
          type: array
          items:
            type: string
          description: ''
        added_at:
          type: string
          examples:
          - 2016-02-04T16:44:33+00:00
        updated_at:
          type: string
          examples:
          - 2016-02-05T16:44:33+00:00
        web_url:
          type: string
          examples:
          - https://focus.teamleader.eu/contact_detail.php?id=2a39e420-3ba3-4384-8024-fa702ef99c9f
    data10:
      title: data10
      type: object
      properties:
        id:
          type: string
          examples:
          - cde0bc5f-8602-4e12-b5d3-f03436b54c0d
        first_name:
          type: string
          examples:
          - Erlich
        last_name:
          type: string
          examples:
          - Bachman
        status:
          $ref: '#/components/schemas/status5'
        salutation:
          type: string
          examples:
          - Mr
        vat_number:
          type:
          - string
          - 'null'
          examples:
          - BE0899623034
        emails:
          type: array
          items:
            $ref: '#/components/schemas/emails2'
          description: ''
        telephones:
          type: array
          items:
            $ref: '#/components/schemas/Telephone'
          description: ''
        website:
          type: string
          examples:
          - https://piedpiper.com
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/addresses'
          description: ''
        gender:
          $ref: '#/components/schemas/gender'
        birthdate:
          type: string
          examples:
          - 1987-04-25
        iban:
          type: string
          examples:
          - BE12123412341234
        bic:
          type: string
          examples:
          - BICBANK
        national_identification_number:
          type: string
          examples:
          - 00051730-A
        companies:
          type: array
          items:
            $ref: '#/components/schemas/companies'
          description: ''
        language:
          type: string
          examples:
          - en
        payment_term:
          $ref: '#/components/schemas/PaymentTerm'
        invoicing_preferences:
          $ref: '#/components/schemas/invoicing_preferences'
        remarks:
          type: string
          description: Uses Markdown formatting
          examples:
          - First contact at expo
        tags:
          type: array
          items:
            type: string
          description: ''
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
        marketing_mails_consent:
          type: boolean
          examples:
          - false
        added_at:
          type: string
          examples:
          - 2016-02-04T16:44:33+00:00
        updated_at:
          type: string
          examples:
          - 2016-02-05T16:44:33+00:00
        web_url:
          type: string
          examples:
          - https://focus.teamleader.eu/contact_detail.php?id=cde0bc5f-8602-4e12-b5d3-f03436b54c0d
    data12:
      title: data12
      type: object
      properties:
        id:
          type: string
          examples:
          - 96a38bbf-24ed-4083-8a5c-20db92aa471e
        name:
          type: string
          examples:
          - Pied Piper
        status:
          $ref: '#/components/schemas/status2'
        business_type:
          $ref: '#/components/schemas/User'
        vat_number:
          type: string
          examples:
          - BE0899623035
        national_identification_number:
          type: string
          examples:
          - '63326426'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/emails'
          description: ''
        telephones:
          type: array
          items:
            $ref: '#/components/schemas/CompanyTelephone'
          description: ''
        website:
          type: string
          examples:
          - https://piedpiper.com
        primary_address:
          $ref: '#/components/schemas/AddressResponse'
        iban:
          type: string
          examples:
          - BE12123412341234
        bic:
          type: string
          examples:
          - BICBANK
        language:
          type: string
          examples:
          - nl
        preferred_currency:
          type:
          - string
          - 'null'
          examples:
          - EUR
        payment_term:
          $ref: '#/components/schemas/PaymentTerm'
        invoicing_preferences:
          $ref: '#/components/schemas/invoicing_preferences'
        responsible_user:
          $ref: '#/components/schemas/User'
        added_at:
          type: string
          examples:
          - 2016-02-04T16:44:33+00:00
        updated_at:
          type: string
          examples:
          - 2016-02-05T16:44:33+00:00
        web_url:
          type: string
          examples:
          - https://focus.teamleader.eu/company_detail.php?id=96a38bbf-24ed-4083-8a5c-20db92aa471e
        tags:
          type: array
          items:
            type: string
          description: ''
    data13:
      title: data13
      type: object
      properties:
        id:
          type: string
          examples:
          - e8d31ae7-8258-4fcd-9b2d-78f41b0aa5d5
        name:
          type: string
          examples:
          - Pied Piper
        status:
          $ref: '#/components/schemas/status5'
        business_type:
          $ref: '#/components/schemas/User'
        vat_number:
          type: string
          examples:
          - BE0899623035
        national_identification_number:
          type: string
          examples:
          - '63326426'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/emails'
          description: ''
        telephones:
          type: array
          items:
            $ref: '#/components/schemas/CompanyTelephone'
          description: ''
        website:
          type: string
          examples:
          - https://piedpiper.com
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/addresses'
          description: ''
        iban:
          type: string
          examples:
          - BE12123412341234
        bic:
          type: string
          examples:
          - BICBANK
        language:
          type: string
          examples:
          - nl
        preferred_currency:
          type:
          - string
          - 'null'
          examples:
          - EUR
        payment_term:
          $ref: '#/components/schemas/PaymentTerm'
        invoicing_preferences:
          $ref: '#/components/schemas/invoicing_preferences'
        responsible_user:
          $ref: '#/components/schemas/User'
        remarks:
          type: string
          description: Uses Markdown formatting
          examples:
          - First contact at expo
        added_at:
          type: string
          examples:
          - 2016-02-04T16:44:33+00:00
        updated_at:
          type: string
          examples:
          - 2016-02-05T16:44:33+00:00
        web_url:
          type: string
          examples:
          - https://focus.teamleader.eu/company_detail.php?id=e8d31ae7-8258-4fcd-9b2d-78f41b0aa5d5
        tags:
          type: array
          items:
            type: string
          description: ''
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
        marketing_mails_consent:
          type: boolean
          examples:
          - false
    data15:
      title: data15
      type: object
      properties:
        id:
          type: string
          examples:
          - fd48d4a3-b9dc-4eac-8071-5889c9f21e5d
        name:
          type: string
          examples:
          - VZW/ASBL
        country:
          type: string
          examples:
          - BE
    data16:
      title: data16
      type: object
      properties:
        tag:
          type: string
          examples:
          - campaign
    data18:
      title: data18
      type: object
      properties:
        id:
          type: string
          examples:
          - 6e7fe84d-d4b3-4723-abae-9bc082d8f65a
        title:
          type: string
          examples:
          - Interesting deal
        summary:
          type:
          - string
          - 'null'
          examples:
          - Additional information
        reference:
          type: string
          examples:
          - 2017/2
        status:
          $ref: '#/components/schemas/status8'
        lead:
          $ref: '#/components/schemas/lead'
        department:
          $ref: '#/components/schemas/User'
        estimated_value:
          $ref: '#/components/schemas/Money'
        estimated_closing_date:
          type: string
          examples:
          - 2017-05-09
        estimated_probability:
          type: number
          examples:
          - 0.5
        weighted_value:
          $ref: '#/components/schemas/Money'
        purchase_order_number:
          type:
          - string
          - 'null'
          examples:
          - 000023
        current_phase:
          $ref: '#/components/schemas/User'
        responsible_user:
          $ref: '#/components/schemas/User'
        closed_at:
          type: string
          examples:
          - 2017-05-09T11:31:30+00:00
        source:
          $ref: '#/components/schemas/User'
        lost_reason:
          $ref: '#/components/schemas/lost_reason'
        created_at:
          type: string
          examples:
          - 2017-05-09T11:25:11+00:00
        updated_at:
          type: string
          examples:
          - 2017-05-09T11:30:58+00:00
        web_url:
          type: string
          examples:
          - https://focus.teamleader.eu/sale_detail.php?id=6e7fe84d-d4b3-4723-abae-9bc082d8f65a
    data19:
      title: data19
      type: object
      properties:
        id:
          type: string
          examples:
          - f6871b06-6513-4750-b5e6-ff3503b5a029
        title:
          type: string
          examples:
          - Interesting deal
        summary:
          type:
          - string
          - 'null'
          examples:
          - Additional information
        reference:
          type: string
          examples:
          - 2017/2
        status:
          $ref: '#/components/schemas/status9'
        lead:
          $ref: '#/components/schemas/lead'
        department:
          $ref: '#/components/schemas/User'
        estimated_value:
          $ref: '#/components/schemas/Money'
        estimated_closing_date:
          type: string
          examples:
          - 2017-05-09
        estimated_probability:
          type: number
          examples:
          - 0.5
        weighted_value:
          $ref: '#/components/schemas/Money'
        purchase_order_number:
          type:
          - string
          - 'null'
          examples:
          - 000023
        current_phase:
          $ref: '#/components/schemas/User'
        responsible_user:
          $ref: '#/components/schemas/User'
        closed_at:
          type: string
          examples:
          - 2017-05-09T11:31:30+00:00
        source:
          $ref: '#/components/schemas/User'
        phase_history:
          type: array
          items:
            $ref: '#/components/schemas/phase_history'
          description: ''
        quotations:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: ''
        lost_reason:
          $ref: '#/components/schemas/lost_reason'
        created_at:
          type: string
          examples:
          - 2017-05-09T11:25:11+00:00
        updated_at:
          type: string
          examples:
          - 2017-05-09T11:30:58+00:00
        web_url:
          type: string
          examples:
          - https://focus.teamleader.eu/sale_detail.php?id=f6871b06-6513-4750-b5e6-ff3503b5a029
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    data24:
      title: data24
      type: object
      properties:
        id:
          type: string
          examples:
          - 5b16f6ee-e302-0079-901b-50c26c4a55b1
        deal:
          $ref: '#/components/schemas/User'
        currency_exchange_rate:
          $ref: '#/components/schemas/currency_exchange_rate'
        total:
          $ref: '#/components/schemas/total'
        created_at:
          type:
          - string
          - 'null'
          examples:
          - 2017-05-09T11:25:11+00:00
        updated_at:
          type:
          - string
          - 'null'
          examples:
          - 2017-05-09T11:30:58+00:00
        status:
          $ref: '#/components/schemas/status10'
    data25:
      title: data25
      type: object
      properties:
        id:
          type: string
          examples:
          - e7a3fe2b-2c75-480f-87b9-121816b5257b
        deal:
          $ref: '#/components/schemas/User'
        grouped_lines:
          type: array
          items:
            $ref: '#/components/schemas/grouped_lines'
          description: ''
        currency_exchange_rate:
          $ref: '#/components/schemas/currency_exchange_rate'
        total:
          $ref: '#/components/schemas/total'
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/discounts'
          description: ''
        created_at:
          type:
          - string
          - 'null'
          examples:
          - 2017-05-09T11:25:11+00:00
        updated_at:
          type:
          - string
          - 'null'
          examples:
          - 2017-05-09T11:30:58+00:00
        status:
          $ref: '#/components/schemas/status10'
    data26:
      title: data26
      type: object
      properties:
        location:
          type: string
          description: A temporary url where the requested file can be downloaded
          examples:
          - https://cdn.teamleader.eu/file
        expires:
          type: string
          description: Expiration time of the temporary download link
          examples:
          - 2018-02-05T16:44:33+00:00
    data28:
      title: data28
      type: object
      properties:
        id:
          type: string
          examples:
          - 6d64488c-75d8-4de9-b140-2555566fa27d
        creator:
          $ref: '#/components/schemas/User'
        task:
          $ref: '#/components/schemas/User'
        activity_type:
          $ref: '#/components/schemas/User'
        title:
          type: string
          examples:
          - Erlich Bachman's birthday
        description:
          type: string
        starts_at:
          type: string
          examples:
          - 2016-02-04T16:00:00+00:00
        ends_at:
          type: string
          examples:
          - 2016-02-04T18:00:00+00:00
        location:
          type: string
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/attendees'
          description: ''
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
          description: ''
    data29:
      title: data29
      type: object
      properties:
        id:
          type: string
          examples:
          - 9a5a3984-abfc-40cd-a880-f97683c6a99c
        title:
          type: string
          examples:
          - Meeting with stakeholders
        description:
          type: string
        creator:
          $ref: '#/components/schemas/User'
        task:
          $ref: '#/components/schemas/User'
        activity_type:
          $ref: '#/components/schemas/User'
        starts_at:
          type: string
          examples:
          - 2016-02-04T16:00:00+00:00
        ends_at:
          type: string
          examples:
          - 2016-02-04T18:00:00+00:00
        location:
          type: string
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/attendees'
          description: ''
        links:
          type: array
          items:
            $ref: '#/components/schemas/links1'
          description: ''
    data32:
      title: data32
      type: object
      properties:
        id:
          type: string
          examples:
          - 2aa4a6a9-9ce8-4851-a9b3-26aea2ea14c4
        department:
          $ref: '#/components/schemas/User'
        invoice_number:
          type:
          - string
          - 'null'
          examples:
          - 2017 / 5
        invoice_date:
          type:
          - string
          - 'null'
          examples:
          - 2016-02-04
        status:
          $ref: '#/components/schemas/status12'
        due_on:
          type:
          - string
          - 'null'
          examples:
          - 2016-03-03
        paid:
          type: boolean
          examples:
          - true
        paid_at:
          type:
          - string
          - 'null'
          examples:
          - 2016-02-04T16:44:33+00:00
        sent:
          type: boolean
          examples:
          - true
        purchase_order_number:
          type:
          - string
          - 'null'
          examples:
          - 000023
        payment_reference:
          type:
          - string
          - 'null'
          examples:
          - +++084/2613/66074+++
        invoicee:
          $ref: '#/components/schemas/invoicee'
        total:
          $ref: '#/components/schemas/total3'
        currency_exchange_rate:
          $ref: '#/components/schemas/currency_exchange_rate'
        created_at:
          type: string
          examples:
          - 2016-02-04T16:44:33+00:00
        updated_at:
          type: string
          examples:
          - 2016-02-05T16:44:33+00:00
        web_url:
          type: string
          examples:
          - https://focus.teamleader.eu/invoice_detail.php?id=2aa4a6a9-9ce8-4851-a9b3-26aea2ea14c4
        file:
          $ref: '#/components/schemas/User'
        deal:
          $ref: '#/components/schemas/User'
    data33:
      title: data33
      type: object
      properties:
        id:
          type: string
          examples:
          - e540fe7e-dce2-459e-bf7e-24e605fc18b3
        department:
          $ref: '#/components/schemas/User'
        invoice_number:
          type:
          - string
          - 'null'
          examples:
          - 2017 / 5
        invoice_date:
          type:
          - string
          - 'null'
          examples:
          - 2016-02-04
        status:
          $ref: '#/components/schemas/status12'
        due_on:
          type:
          - string
          - 'null'
          examples:
          - 2016-03-03
        paid:
          type: boolean
          examples:
          - true
        paid_at:
          type:
          - string
          - 'null'
          examples:
          - 2016-02-04T16:44:33+00:00
        sent:
          type: boolean
          examples:
          - true
        purchase_order_number:
          type:
          - string
          - 'null'
          examples:
          - 000023
        invoicee:
          $ref: '#/components/schemas/invoicee1'
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/discounts3'
          description: ''
        grouped_lines:
          type: array
          items:
            $ref: '#/components/schemas/grouped_lines3'
          description: ''
        total:
          $ref: '#/components/schemas/total5'
        payment_term:
          $ref: '#/components/schemas/PaymentTerm'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/payments'
          description: ''
        payment_reference:
          type:
          - string
          - 'null'
          examples:
          - +++084/2613/66074+++
        note:
          type:
          - string
          - 'null'
          description: plaintext
          examples:
          - "'Some extra remarks about the invoice'"
        currency_exchange_rate:
          $ref: '#/components/schemas/currency_exchange_rate'
        expected_payment_method:
          oneOf:
          - $ref: '#/components/schemas/method'
          - $ref: '#/components/schemas/method1'
          - type: 'null'
          examples:
          - sepa_direct_debit
        file:
          $ref: '#/components/schemas/User'
        deal:
          $ref: '#/components/schemas/User'
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
        created_at:
          type: string
          examples:
          - 2016-02-04T16:44:33+00:00
        updated_at:
          type: string
          examples:
          - 2016-02-05T16:44:33+00:00
    data38:
      title: data38
      type: object
      properties:
        id:
          type: string
          examples:
          - 2b43633b-22d1-41b6-b87b-e1fd742325d4
        department:
          $ref: '#/components/schemas/User'
        credit_note_number:
          type:
          - string
          - 'null'
          examples:
          - 2017/5
        credit_note_date:
          type:
          - string
          - 'null'
          examples:
          - 2016-02-04
        status:
          $ref: '#/components/schemas/status14'
        invoice:
          $ref: '#/components/schemas/User'
        paid:
          type: boolean
          examples:
          - true
        paid_at:
          type:
          - string
          - 'null'
          examples:
          - 2016-03-03T16:44:33+00:00
        invoicee:
          $ref: '#/components/schemas/invoicee4'
        total:
          $ref: '#/components/schemas/total6'
        created_at:
          type: string
          examples:
          - 2016-02-04T16:44:33+00:00
        updated_at:
          type: string
          examples:
          - 2016-02-05T16:44:33+00:00
    data39:
      title: data39
      type: object
      properties:
        id:
          type: string
          examples:
          - 27300f09-6250-4a23-8557-d84c52f99ecf
        department:
          $ref: '#/components/schemas/User'
        credit_note_number:
          type:
          - string
          - 'null'
          examples:
          - 2017/5
        credit_note_date:
          type:
          - string
          - 'null'
          examples:
          - 2016-02-04
        status:
          $ref: '#/components/schemas/status14'
        invoice:
          $ref: '#/components/schemas/User'
        paid:
          type: boolean
          examples:
          - true
        paid_at:
          type:
          - string
          - 'null'
          examples:
          - 2016-03-03T16:44:33+00:00
        invoicee:
          $ref: '#/components/schemas/invoicee5'
        total:
          $ref: '#/components/schemas/total6'
        grouped_lines:
          type: array
          items:
            $ref: '#/components/schemas/grouped_lines6'
          description: ''
        currency_exchange_rate:
          $ref: '#/components/schemas/currency_exchange_rate'
        created_at:
          type: string
          examples:
          - 2016-02-04T16:44:33+00:00
        updated_at:
          type: string
          examples:
          - 2016-02-05T16:44:33+00:00
    data41:
      title: data41
      type: object
      properties:
        id:
          type: string
          examples:
          - c93ddb52-0af8-47d9-8551-441435be66a7
        description:
          type: string
          examples:
          - 21%
        rate:
          type: number
          examples:
          - 0.21
        department:
          $ref: '#/components/schemas/User'
    data42:
      title: data42
      type: object
      properties:
        id:
          type: string
          examples:
          - c93ddb52-0af8-47d9-8551-441435be66a7
        type:
          $ref: '#/components/schemas/type2'
        days:
          type: number
          description: Modifier "X" for the above statements. Not required when type is 'cash'.
    data44:
      title: data44
      type: object
      properties:
        id:
          type: string
          examples:
          - 2aa4a6a9-9ce8-4851-a9b3-26aea2ea14c4
        name:
          type: string
          examples:
          - "'Asian Flowers'"
        ledgers:
          type: array
          items:
            $ref: '#/components/schemas/ledgers'
          description: ''
    data45:
      title: data45
      type: object
      properties:
        id:
          type: string
          examples:
          - 2aa4a6a9-9ce8-4851-a9b3-26aea2ea14c4
        name:
          type:
          - string
          - 'null'
          examples:
          - cookies
        description:
          type:
          - string
          - 'null'
          description: The description of the product in Markdown
          examples:
          - dark chocolate
        code:
          type:
          - string
          - 'null'
          examples:
          - COOK-DARKCHOC-42
    data46:
      title: data46
      type: object
      properties:
        id:
          type: string
          examples:
          - f8ae61ec-62f3-0538-b028-185c4a5f217f
        name:
          type:
          - string
          - 'null'
          examples:
          - cookies
        description:
          type:
          - string
          - 'null'
          description: The description of the product in Markdown
          examples:
          - dark chocolate
        code:
          type:
          - string
          - 'null'
          examples:
          - COOK-DARKCHOC-42
        purchase_price:
          $ref: '#/components/schemas/Money'
        selling_price:
          $ref: '#/components/schemas/Money'
    data48:
      title: data48
      type: object
      properties:
        id:
          type: string
          examples:
          - 624ca743-8998-4f8c-add1-c427bb022166
        reference:
          type: string
          examples:
          - PRO-2
        title:
          type: string
          examples:
          - New company website
        description:
          type: string
        status:
          $ref: '#/components/schemas/status16'
        customer:
          $ref: '#/components/schemas/User'
        starts_on:
          type: string
          examples:
          - 2016-02-04
        due_on:
          type: string
          examples:
          - 2016-10-14
        source:
          $ref: '#/components/schemas/User'
        actuals:
          $ref: '#/components/schemas/actuals'
        budget:
          $ref: '#/components/schemas/budget'
    data49:
      title: data49
      type: object
      properties:
        id:
          type: string
          examples:
          - 8a04371b-2ffb-407b-9b24-d5b5452009c7
        reference:
          type: string
          examples:
          - PRO-1
        title:
          type: string
          examples:
          - New company website
        description:
          type: string
        status:
          $ref: '#/components/schemas/status16'
        customer:
          $ref: '#/components/schemas/customer'
        starts_on:
          type: string
          examples:
          - 2016-02-04
        due_on:
          type: string
          examples:
          - 2016-02-04
        source:
          $ref: '#/components/schemas/User'
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: ''
        participants:
          type: array
          items:
            $ref: '#/components/schemas/participants'
          description: ''
        purchase_order_number:
          type:
          - string
          - 'null'
          examples:
          - 000023
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
        actuals:
          $ref: '#/components/schemas/actuals'
        budget:
          $ref: '#/components/schemas/budget'
    data51:
      title: data51
      type: object
      properties:
        id:
          type: string
          examples:
          - cfb4146d-06be-41f1-bb39-aa3c929c71dc
        project:
          $ref: '#/components/schemas/User'
        starts_on:
          type:
          - string
          - 'null'
          examples:
          - 2017-01-01
        due_on:
          type: string
          examples:
          - 2018-01-01
        name:
          type: string
          examples:
          - Initial setup
        responsible_user:
          $ref: '#/components/schemas/User'
        status:
          $ref: '#/components/schemas/status19'
        invoicing_method:
          $ref: '#/components/schemas/invoicing_method'
        depends_on:
          $ref: '#/components/schemas/User'
        dependency_for:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: ''
        actuals:
          $ref: '#/components/schemas/actuals2'
        budget:
          $ref: '#/components/schemas/budget2'
    data52:
      title: data52
      type: object
      properties:
        id:
          type: string
          examples:
          - 64349fa2-6ca2-4b19-82e6-d3258ceab2d8
        project:
          $ref: '#/components/schemas/User'
        starts_on:
          type:
          - string
          - 'null'
          examples:
          - 2017-01-01
        due_on:
          type: string
          examples:
          - 2018-01-01
        name:
          type: string
          examples:
          - Initial setup
        description:
          type: string
        responsible_user:
          $ref: '#/components/schemas/User'
        status:
          $ref: '#/components/schemas/status19'
        invoicing_method:
          $ref: '#/components/schemas/invoicing_method'
        depends_on:
          $ref: '#/components/schemas/User'
        dependency_for:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: ''
        actuals:
          $ref: '#/components/schemas/actuals2'
        budget:
          $ref: '#/components/schemas/budget2'
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    data54:
      title: data54
      type: object
      properties:
        id:
          type: string
          examples:
          - f29abf48-337d-44b4-aad4-585f5277a456
        title:
          type: string
          examples:
          - Review code changes
        description:
          type: string
        completed:
          type: boolean
          examples:
          - false
        completed_at:
          type:
          - string
          - 'null'
          examples:
          - 2016-02-04T16:44:33+00:00
        due_on:
          type: string
          examples:
          - 2016-02-04
        estimated_duration:
          $ref: '#/components/schemas/estimated_duration'
        work_type:
          $ref: '#/components/schemas/User'
        assignee:
          $ref: '#/components/schemas/assignee'
        customer:
          $ref: '#/components/schemas/customer'
        milestone:
          $ref: '#/components/schemas/User'
        deal:
          $ref: '#/components/schemas/User'
        project:
          $ref: '#/components/schemas/User'
    data55:
      title: data55
      type: object
      properties:
        id:
          type: string
          examples:
          - 6fac0bf0-e803-424e-af67-76863a3d7d16
        title:
          type: string
          examples:
          - Review code changes
        description:
          type: string
        completed:
          type: boolean
          examples:
          - false
        completed_at:
          type:
          - string
          - 'null'
          examples:
          - 2016-02-04T16:44:33+00:00
        due_on:
          type: string
          examples:
          - 2016-02-04
        estimated_duration:
          $ref: '#/components/schemas/estimated_duration'
        work_type:
          $ref: '#/components/schemas/User'
        assignee:
          $ref: '#/components/schemas/assignee'
        customer:
          $ref: '#/components/schemas/customer'
        milestone:
          $ref: '#/components/schemas/User'
        deal:
          $ref: '#/components/schemas/User'
        project:
          $ref: '#/components/schemas/User'
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    data58:
      title: data58
      type: object
      properties:
        id:
          type: string
          examples:
          - 4f4288b2-c21b-4dac-87f6-a97511309079
        user:
          $ref: '#/components/schemas/User'
        work_type:
          $ref: '#/components/schemas/User'
        started_on:
          type: string
          examples:
          - 2017-04-26
        started_at:
          type:
          - string
          - 'null'
          examples:
          - 2017-04-26T10:01:49+00:00
        ended_at:
          type:
          - string
          - 'null'
          examples:
          - 2017-04-26T11:01:49+00:00
        duration:
          type: number
          description: In seconds
          examples:
          - 3600
        description:
          type: string
          examples:
          - Timer description
        subject:
          $ref: '#/components/schemas/subject'
        invoiceable:
          type: boolean
          examples:
          - true
    data59:
      title: data59
      type: object
      properties:
        id:
          type: string
          examples:
          - 6caeea11-aa83-4da9-9859-5b62bbf3a476
        user:
          $ref: '#/components/schemas/User'
        work_type:
          $ref: '#/components/schemas/User'
        started_on:
          type: string
          examples:
          - 2017-04-26
        started_at:
          type:
          - string
          - 'null'
          examples:
          - 2017-04-26T10:01:49+00:00
        ended_at:
          type:
          - string
          - 'null'
          examples:
          - 2017-04-26T11:01:49+00:00
        duration:
          type: number
          description: In seconds
          examples:
          - 3600
        description:
          type: string
          examples:
          - Timer description
        subject:
          $ref: '#/components/schemas/subject'
        invoiceable:
          type: boolean
          examples:
          - true
        locked:
          type: boolean
          description: If true, the freeze time window has passed since creating it
          examples:
          - true
    data62:
      title: data62
      type: object
      properties:
        id:
          type: string
          examples:
          - 2b282dec-ba9d-4faa-9b39-944b99ee5c0a
        user:
          $ref: '#/components/schemas/User'
        work_type:
          $ref: '#/components/schemas/User'
        started_at:
          type: string
          examples:
          - 2017-04-26T10:01:49+00:00
        description:
          type: string
          examples:
          - Timer description
        subject:
          $ref: '#/components/schemas/subject'
        invoiceable:
          type: boolean
          examples:
          - true
    data65:
      title: data65
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type58'
        id:
          type: string
          examples:
          - 6ad54ec6-ee2d-4500-afe6-0917c1aa7a38
    dealPhases.listresponse:
      title: dealPhases.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data8'
          description: ''
    deals.createrequest:
      title: deals.createrequest
      required:
      - lead
      - title
      type: object
      properties:
        lead:
          $ref: '#/components/schemas/lead2'
        title:
          type: string
          examples:
          - Interesting business deal
        summary:
          type: string
          examples:
          - Additional information
        source_id:
          type: string
          examples:
          - b38ebb9b-6e46-4bf4-a1e2-af747d6b64ae
        department_id:
          type: string
          examples:
          - 6a6343fc-fdd8-4bc0-aa69-3a004c710e87
        responsible_user_id:
          type: string
          examples:
          - 98b2863e-7b01-4232-82f5-ede1f0b9db22
        phase_id:
          type: string
          examples:
          - 060687bb-a742-4882-a538-199a5e5feb60
        estimated_value:
          $ref: '#/components/schemas/Money'
        estimated_probability:
          type: number
          description: A number between 0 and 1 (inclusive)
          examples:
          - 0.75
        estimated_closing_date:
          type: string
          examples:
          - 2017-05-09
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    deals.createresponse:
      title: deals.createresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    deals.deleterequest:
      title: deals.deleterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 4e235f27-0af0-40e5-82f3-d32d0aa9edb3
    deals.inforesponse:
      title: deals.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data19'
    deals.listresponse:
      title: deals.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data18'
          description: ''
    deals.loserequest:
      title: deals.loserequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 460df7b2-fe82-4c6c-b215-6d0a1bd3c742
        reason_id:
          type: string
          examples:
          - da4c902f-2ae5-4c1f-be6f-b50308aabc5c
        extra_info:
          type: string
          examples:
          - Not ready for a change, decision postponed
    deals.moverequest:
      title: deals.moverequest
      required:
      - id
      - phase_id
      type: object
      properties:
        id:
          type: string
          examples:
          - e88131bf-50c4-49d3-8ae3-47e5d9626bf6
        phase_id:
          type: string
          examples:
          - 8776abee-d856-43c6-b98d-9ffc912e8b0b
    deals.updaterequest:
      title: deals.updaterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 65a35860-dcca-4850-9fd6-47ff08469e0c
        lead:
          $ref: '#/components/schemas/lead2'
        title:
          type: string
          examples:
          - Interesting business deal
        summary:
          type:
          - string
          - 'null'
          examples:
          - Additional information
        source_id:
          type:
          - string
          - 'null'
          examples:
          - b38ebb9b-6e46-4bf4-a1e2-af747d6b64ae
        department_id:
          type:
          - string
          - 'null'
          examples:
          - 6a6343fc-fdd8-4bc0-aa69-3a004c710e87
        responsible_user_id:
          type:
          - string
          - 'null'
          examples:
          - 98b2863e-7b01-4232-82f5-ede1f0b9db22
        estimated_value:
          $ref: '#/components/schemas/Money'
        estimated_probability:
          type:
          - number
          - 'null'
          description: A number between 0 and 1 (inclusive)
          examples:
          - 0.75
        estimated_closing_date:
          type:
          - string
          - 'null'
          examples:
          - 2017-05-09
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    deals.winrequest:
      title: deals.winrequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - e88131bf-50c4-49d3-8ae3-47e5d9626bf6
    dealSources.listresponse:
      title: dealSources.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data8'
          description: ''
    departments.inforesponse:
      title: departments.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data1'
    departments.listresponse:
      title: departments.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data'
          description: ''
    discount:
      title: discount
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type25'
        value:
          type: number
          examples:
          - 15
    discount1:
      title: discount1
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: number
          examples:
          - 10
        type:
          const: percentage
          type: string
          examples:
          - percentage
    discounts:
      title: discounts
      required:
      - value
      - type
      - description
      type: object
      properties:
        value:
          type: number
          examples:
          - 10
        type:
          const: percentage
          type: string
          examples:
          - percentage
        description:
          type: string
          examples:
          - winter promotion
    discounts3:
      title: discounts3
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type25'
        value:
          type: number
          examples:
          - 15
        description:
          type: string
          examples:
          - winter promotion
    emails:
      title: emails
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type5'
        email:
          type: string
          examples:
          - info@piedpiper.eu
    emails2:
      title: emails2
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type9'
        email:
          type: string
          examples:
          - info@piedpiper.eu
    emails4:
      title: emails4
      required:
      - type
      - email
      type: object
      properties:
        type:
          const: primary
          type: string
          examples:
          - primary
        email:
          type: string
          examples:
          - info@piedpiper.eu
    emails5:
      title: emails5
      required:
      - type
      - email
      type: object
      properties:
        type:
          const: primary
          type: string
          examples:
          - primary
        email:
          type:
          - string
          - 'null'
          examples:
          - info@piedpiper.eu
    emails8:
      title: emails8
      required:
      - type
      - email
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type5'
        email:
          type: string
          examples:
          - info@piedpiper.eu
    estimated_duration:
      title: estimated_duration
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/unit1'
        value:
          type: number
          examples:
          - 60
    events.cancelrequest:
      title: events.cancelrequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - b519491e-ca80-4efb-bb7b-3f08544936b0
    events.createrequest:
      title: events.createrequest
      required:
      - title
      - activity_type_id
      - starts_at
      - ends_at
      type: object
      properties:
        title:
          type: string
          examples:
          - Meeting with stakeholders
        description:
          type: string
        activity_type_id:
          type: string
          examples:
          - b0a9ace5-fe82-4827-9d90-fc52f2c93050
        starts_at:
          type: string
          examples:
          - 2016-02-04T16:00:00+00:00
        ends_at:
          type: string
          examples:
          - 2016-02-04T18:00:00+00:00
        location:
          type: string
        work_type_id:
          type: string
          examples:
          - b37e2bc7-dea0-4fda-88e9-c092fb65667d
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/attendees2'
          description: ''
        links:
          type: array
          items:
            $ref: '#/components/schemas/links2'
          description: ''
    events.createresponse:
      title: events.createresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    events.inforesponse:
      title: events.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data29'
    events.listresponse:
      title: events.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data28'
          description: ''
    events.updaterequest:
      title: events.updaterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - f22fc69d-5d07-40cf-af46-015698a74b63
        title:
          type: string
          examples:
          - Meeting with stakeholders
        description:
          type:
          - string
          - 'null'
        starts_at:
          type: string
          examples:
          - 2016-02-04T16:00:00+00:00
        ends_at:
          type: string
          examples:
          - 2016-02-04T18:00:00+00:00
        location:
          type: string
        work_type_id:
          type: string
          examples:
          - b37e2bc7-dea0-4fda-88e9-c092fb65667d
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/attendees2'
          description: ''
        links:
          type: array
          items:
            $ref: '#/components/schemas/links2'
          description: ''
    filter:
      title: filter
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
          description: ''
        term:
          type: string
          description: Searches in the work type name only
          examples:
          - design
    filter1:
      title: filter1
      type: object
      properties:
        department_id:
          type: string
          description: The ID of the department you wish to filter on.
          examples:
          - 080aac72-ff1a-4627-bfe3-146b6eee979c
    for_attention_of:
      title: for_attention_of
      type: object
      properties:
        name:
          type:
          - string
          - 'null'
          examples:
          - Radja Nainggolan
        contact:
          $ref: '#/components/schemas/User'
    format:
      title: format
      enum:
      - pdf
      - ubl/e-fff
      type: string
      examples:
      - pdf
    gender:
      title: gender
      enum:
      - male
      - female
      type: string
      examples:
      - male
    grouped_lines:
      title: grouped_lines
      type: object
      properties:
        section:
          $ref: '#/components/schemas/section'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/line_items'
          description: ''
    grouped_lines1:
      title: grouped_lines1
      required:
      - line_items
      type: object
      properties:
        section:
          $ref: '#/components/schemas/section1'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/line_items1'
          description: ''
    grouped_lines3:
      title: grouped_lines3
      type: object
      properties:
        section:
          $ref: '#/components/schemas/section'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/line_items3'
          description: ''
    grouped_lines4:
      title: grouped_lines4
      required:
      - line_items
      type: object
      properties:
        section:
          $ref: '#/components/schemas/section1'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/line_items4'
          description: ''
    grouped_lines5:
      title: grouped_lines5
      required:
      - line_items
      type: object
      properties:
        section:
          $ref: '#/components/schemas/section1'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/line_items5'
          description: ''
    grouped_lines6:
      title: grouped_lines6
      type: object
      properties:
        section:
          $ref: '#/components/schemas/section'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/line_items6'
          description: ''
    historic_time_tracking_limit:
      title: historic_time_tracking_limit
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/unit'
        value:
          type: number
          examples:
          - 24
    invoicee:
      title: invoicee
      type: object
      properties:
        name:
          type: string
          examples:
          - De Rode Duivels
        vat_number:
          type:
          - string
          - 'null'
          examples:
          - BE0899623035
        customer:
          $ref: '#/components/schemas/User'
        for_attention_of:
          $ref: '#/components/schemas/for_attention_of'
    invoicee1:
      title: invoicee1
      type: object
      properties:
        name:
          type: string
          examples:
          - De Rode Duivels
        vat_number:
          type:
          - string
          - 'null'
          examples:
          - BE0899623035
        customer:
          $ref: '#/components/schemas/User'
        for_attention_of:
          $ref: '#/components/schemas/for_attention_of'
        email:
          type:
          - string
          - 'null'
          examples:
          - duivels@test.com
        national_identification_number:
          type:
          - string
          - 'null'
          examples:
          - '123'
    invoicee2:
      title: invoicee2
      required:
      - customer
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/customer'
        for_attention_of:
          oneOf:
          - type: string
            examples:
            - Finance Dept.
          - type: string
            examples:
            - 417a2231-c3c7-4e1c-a6bb-1b014836ca60
          examples:
          - Finance Dept.
    invoicee4:
      title: invoicee4
      type: object
      properties:
        name:
          type: string
          examples:
          - De Rode Duivels
        vat_number:
          type:
          - string
          - 'null'
          examples:
          - BE0899623035
        customer:
          $ref: '#/components/schemas/User'
    invoicee5:
      title: invoicee5
      type: object
      properties:
        name:
          type: string
          examples:
          - De Rode Duivels
        vat_number:
          type:
          - string
          - 'null'
          examples:
          - BE0899623035
        customer:
          $ref: '#/components/schemas/User'
        email:
          type:
          - string
          - 'null'
          examples:
          - duivels@test.com
        national_identification_number:
          type:
          - string
          - 'null'
          examples:
          - '123'
    invoices.bookrequest:
      title: invoices.bookrequest
      required:
      - id
      - on
      type: object
      properties:
        id:
          type: string
          examples:
          - 7abb325c-e063-42a4-8fb4-1b730759645a
        on:
          type: string
          examples:
          - 2016-02-04
    invoices.copyrequest:
      title: invoices.copyrequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - b7023c11-455e-4fa5-bb96-87f37dbc7d07
    invoices.copyresponse:
      title: invoices.copyresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    invoices.creditrequest:
      title: invoices.creditrequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - d885e5d5-bacb-4607-bde9-abc4a04a901b
        credit_note_date:
          type: string
          examples:
          - 2016-02-04
    invoices.creditresponse:
      title: invoices.creditresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    invoices.deleterequest:
      title: invoices.deleterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 7517d21c-75c1-4b89-8956-0e67f46c8532
    invoices.downloadrequest:
      title: invoices.downloadrequest
      required:
      - id
      - format
      type: object
      properties:
        id:
          type: string
          examples:
          - d885e5d5-bacb-4607-bde9-abc4a04a901b
        format:
          $ref: '#/components/schemas/format'
    invoices.downloadresponse:
      title: invoices.downloadresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data26'
    invoices.draftrequest:
      title: invoices.draftrequest
      required:
      - invoicee
      - department_id
      - payment_term
      - grouped_lines
      type: object
      properties:
        invoicee:
          $ref: '#/components/schemas/invoicee2'
        department_id:
          type: string
          examples:
          - cef01135-7e51-4f6f-a6eb-6e5e5a885ac7
        payment_term:
          $ref: '#/components/schemas/PaymentTerm'
        purchase_order_number:
          type: string
          examples:
          - 000023
        grouped_lines:
          type: array
          items:
            $ref: '#/components/schemas/grouped_lines4'
          description: ''
        invoice_date:
          type: string
          examples:
          - 2016-02-04
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/discounts'
          description: ''
        note:
          type: string
          examples:
          - Invoice comments
        expected_payment_method:
          oneOf:
          - $ref: '#/components/schemas/method'
          - $ref: '#/components/schemas/method1'
          - type: 'null'
          examples:
          - sepa_direct_debit
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    invoices.draftresponse:
      title: invoices.draftresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    invoices.inforesponse:
      title: invoices.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data33'
    invoices.listresponse:
      title: invoices.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data32'
          description: ''
    invoices.registerPaymentrequest:
      title: invoices.registerPaymentrequest
      required:
      - id
      - payment
      - paid_at
      type: object
      properties:
        id:
          type: string
          examples:
          - 7abb325c-e063-42a4-8fb4-1b730759645a
        payment:
          $ref: '#/components/schemas/payment'
        paid_at:
          type: string
          examples:
          - 2016-03-03T16:44:33+00:00
    invoices.updaterequest:
      title: invoices.updaterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - b7023c11-455e-4fa5-bb96-87f37dbc7d07
        invoicee:
          $ref: '#/components/schemas/invoicee2'
        payment_term:
          $ref: '#/components/schemas/PaymentTerm'
        purchase_order_number:
          type: string
          examples:
          - 000023
        grouped_lines:
          type: array
          items:
            $ref: '#/components/schemas/grouped_lines5'
          description: ''
        invoice_date:
          type: string
          examples:
          - 2016-02-04
        note:
          type:
          - string
          - 'null'
          examples:
          - Some comments about the invoice
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/discounts'
          description: ''
        expected_payment_method:
          oneOf:
          - $ref: '#/components/schemas/method'
          - $ref: '#/components/schemas/method1'
          - type: 'null'
          examples:
          - sepa_direct_debit
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    invoicing_method:
      title: invoicing_method
      enum:
      - time_and_materials
      - fixed_price
      - non_invoiceable
      type: string
      examples:
      - time_and_materials
    invoicing_preferences:
      title: invoicing_preferences
      type: object
      properties:
        electronic_invoicing_address:
          type:
          - string
          - 'null'
    language:
      title: language
      enum:
      - nl-BE
      - da
      - de
      - en
      - es
      - fi
      - fr
      - it
      - nb
      - nl
      - pl
      - pt
      - sv
      - tr
      type: string
      examples:
      - nl-BE
    lead:
      title: lead
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/customer'
        contact_person:
          $ref: '#/components/schemas/User'
    lead2:
      title: lead2
      required:
      - customer
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/customer2'
        contact_person_id:
          type: string
          examples:
          - b38ebb9b-6e46-4bf4-a1e2-af747d6b64ae
    ledgers:
      title: ledgers
      type: object
      properties:
        department:
          $ref: '#/components/schemas/User'
        ledger_account_number:
          type: string
          examples:
          - '70100'
    levelTwoAreas.listresponse:
      title: levelTwoAreas.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data15'
          description: ''
    line_items:
      title: line_items
      type: object
      properties:
        product:
          $ref: '#/components/schemas/User'
        quantity:
          type: number
          examples:
          - 3
        description:
          type: string
          examples:
          - An awesome product
        extended_description:
          type: string
          description: Uses Markdown formatting
          examples:
          - Some more information about this awesome product
        unit_price:
          $ref: '#/components/schemas/unit_price'
        tax:
          $ref: '#/components/schemas/User'
        discount:
          $ref: '#/components/schemas/discount'
        purchase_price:
          $ref: '#/components/schemas/Money'
        total:
          $ref: '#/components/schemas/total1'
    line_items1:
      title: line_items1
      required:
      - quantity
      - description
      - unit_price
      - tax_rate_id
      type: object
      properties:
        quantity:
          type: number
          examples:
          - 3
        description:
          type: string
          examples:
          - An awesome product
        extended_description:
          type: string
          description: Uses Markdown formatting
          examples:
          - Some more information about this awesome product
        unit_price:
          $ref: '#/components/schemas/unit_price1'
        tax_rate_id:
          type: string
          examples:
          - c0c03f1e-77e3-402c-a713-30ea1c585823
        discount:
          $ref: '#/components/schemas/discount1'
        product_id:
          type: string
          description: This is purely informational and does not affect the quotation besides adding a reference to the product
          examples:
          - d905ff57-e866-0f59-9d1e-1fd4538bfae1
        purchase_price:
          $ref: '#/components/schemas/Money'
    line_items3:
      title: line_items3
      type: object
      properties:
        product:
          $ref: '#/components/schemas/User'
        product_category:
          $ref: '#/components/schemas/User'
        quantity:
          type: number
          examples:
          - 3
        description:
          type: string
          examples:
          - An awesome product
        extended_description:
          type:
          - string
          - 'null'
          description: Uses Markdown formatting
          examples:
          - Some more information about this awesome product
        unit_price:
          $ref: '#/components/schemas/unit_price'
        tax:
          $ref: '#/components/schemas/User'
        discount:
          $ref: '#/components/schemas/discount'
        total:
          $ref: '#/components/schemas/total1'
        withheld_tax:
          $ref: '#/components/schemas/User'
    line_items4:
      title: line_items4
      required:
      - quantity
      - description
      - unit_price
      - tax_rate_id
      type: object
      properties:
        quantity:
          type: number
          examples:
          - 3
        description:
          type: string
          examples:
          - An awesome product
        extended_description:
          type:
          - string
          - 'null'
          description: Uses Markdown formatting
          examples:
          - Some more information about this awesome product
        unit_price:
          $ref: '#/components/schemas/unit_price1'
        tax_rate_id:
          type: string
          examples:
          - c0c03f1e-77e3-402c-a713-30ea1c585823
        withholding_tax_rate_id:
          type: string
          examples:
          - c0c03f1e-77e3-402c-a713-30ea1c585824
        discount:
          $ref: '#/components/schemas/discount1'
        product_category_id:
          type: string
          examples:
          - e2314517-3cab-4aa9-8471-450e73449041
        product_id:
          type: string
          examples:
          - d905ff57-e866-0f59-9d1e-1fd4538bfae1
    line_items5:
      title: line_items5
      required:
      - quantity
      - description
      - tax_rate_id
      type: object
      properties:
        quantity:
          type: number
          examples:
          - 3
        description:
          type: string
          examples:
          - An awesome product
        extended_description:
          type:
          - string
          - 'null'
          description: Uses Markdown formatting
          examples:
          - Some more information about this awesome product
        unit_price:
          $ref: '#/components/schemas/unit_price'
        tax_rate_id:
          type: string
          examples:
          - c0c03f1e-77e3-402c-a713-30ea1c585823
        withholding_tax_rate_id:
          type: string
          examples:
          - c0c03f1e-77e3-402c-a713-30ea1c585824
        discount:
          $ref: '#/components/schemas/discount1'
        product_category_id:
          type: string
          examples:
          - e2314517-3cab-4aa9-8471-450e73449041
        product_id:
          type: string
          examples:
          - d905ff57-e866-0f59-9d1e-1fd4538bfae1
    line_items6:
      title: line_items6
      type: object
      properties:
        product:
          $ref: '#/components/schemas/User'
        product_category:
          $ref: '#/components/schemas/User'
        quantity:
          type: number
          examples:
          - 3
        description:
          type: string
          examples:
          - An awesome product
        extended_description:
          type: string
          description: Uses Markdown formatting
          examples:
          - Some more information about this awesome product
        unit_price:
          $ref: '#/components/schemas/unit_price'
        tax:
          $ref: '#/components/schemas/User'
        discount:
          $ref: '#/components/schemas/discount'
        total:
          $ref: '#/components/schemas/total1'
    links:
      title: links
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type27'
        id:
          type: string
          examples:
          - c9258836-f9a5-40cb-aa2a-d55c22991b93
    links1:
      title: links1
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type29'
        id:
          type: string
          examples:
          - c9258836-f9a5-40cb-aa2a-d55c22991b93
    links2:
      title: links2
      required:
      - type
      - id
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type21'
        id:
          type: string
          examples:
          - c9258836-f9a5-40cb-aa2a-d55c22991b93
    lost_reason:
      title: lost_reason
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/User'
        remark:
          type:
          - string
          - 'null'
          examples:
          - Too expensive
    lostReasons.listresponse:
      title: lostReasons.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data8'
          description: ''
    meta:
      title: meta
      type: object
      properties:
        updatable:
          type: boolean
          description: If true, the current user can update the entry even if it is locked
          examples:
          - true
    method:
      title: method
      enum:
      - sepa_direct_debit
      - direct_debit
      - credit_card
      type: string
      examples:
      - sepa_direct_debit
    method1:
      title: method1
      enum:
      - cash
      - cheque
      - bankers_draft
      - bank_transfer
      - payment_card
      type: string
      examples:
      - cash
    migrate.activityTyperesponse:
      title: migrate.activityTyperesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    migrate.idresponse:
      title: migrate.idresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data65'
    migrate.taxRateresponse:
      title: migrate.taxRateresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    milestones.closerequest:
      title: milestones.closerequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 67e80ad8-d14f-4510-a2bd-a4c6aa578c37
    milestones.createrequest:
      title: milestones.createrequest
      required:
      - project_id
      - due_on
      - name
      - responsible_user_id
      type: object
      properties:
        project_id:
          type: string
          examples:
          - 1c159f98-4b07-438a-9f42-fb4206b9530d
        starts_on:
          type:
          - string
          - 'null'
          examples:
          - 2017-01-01
        due_on:
          type: string
          examples:
          - 2018-01-01
        name:
          type: string
          examples:
          - Initial setup
        description:
          type: string
        responsible_user_id:
          type: string
          examples:
          - e1240972-6cfc-4549-b49c-edda7568cc48
        depends_on:
          type:
          - string
          - 'null'
          examples:
          - 0488d792-ba9b-059f-bd57-bea75d3f4f4e
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    milestones.createresponse:
      title: milestones.createresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    milestones.deleterequest:
      title: milestones.deleterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 67e80ad8-d14f-4510-a2bd-a4c6aa578c37
    milestones.inforesponse:
      title: milestones.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data52'
    milestones.listresponse:
      title: milestones.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data51'
          description: ''
    milestones.openrequest:
      title: milestones.openrequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 67e80ad8-d14f-4510-a2bd-a4c6aa578c37
    milestones.updaterequest:
      title: milestones.updaterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 67e80ad8-d14f-4510-a2bd-a4c6aa578c37
        starts_on:
          type:
          - string
          - 'null'
          examples:
          - 2017-01-01
        due_on:
          type: string
          examples:
          - 2018-01-01
        name:
          type: string
          examples:
          - Initial setup
        description:
          type: string
        responsible_user_id:
          type: string
          examples:
          - e1240972-6cfc-4549-b49c-edda7568cc48
        depends_on:
          type:
          - string
          - 'null'
          examples:
          - 0488d792-ba9b-059f-bd57-bea75d3f4f4e
        propagate_date_changes:
          type: boolean
          examples:
          - false
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    milestones1:
      title: milestones1
      required:
      - due_on
      - name
      - responsible_user_id
      type: object
      properties:
        starts_on:
          type:
          - string
          - 'null'
          examples:
          - 2017-01-01
        due_on:
          type: string
          examples:
          - 2018-01-01
        name:
          type: string
          examples:
          - Initial setup
        responsible_user_id:
          type: string
          examples:
          - e1240972-6cfc-4549-b49c-edda7568cc48
    participant:
      title: participant
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type40'
        id:
          type: string
          examples:
          - b0ef899b-143c-4708-90ce-aecb3350e116
    participant1:
      title: participant1
      required:
      - type
      - id
      type: object
      properties:
        type:
          type: string
          examples:
          - user
        id:
          type: string
          examples:
          - e1240972-6cfc-4549-b49c-edda7568cc48
    participants:
      title: participants
      type: object
      properties:
        participant:
          $ref: '#/components/schemas/participant'
        role:
          $ref: '#/components/schemas/role'
    participants1:
      title: participants1
      required:
      - participant
      type: object
      properties:
        participant:
          $ref: '#/components/schemas/participant1'
        role:
          $ref: '#/components/schemas/role'
    payment:
      title: payment
      type: object
      properties:
        amount:
          type: number
          examples:
          - 123.3
        currency:
          $ref: '#/components/schemas/currency'
    payments:
      title: payments
      type: object
      properties:
        paid_at:
          type: string
          examples:
          - 2016-03-03T16:44:33+00:00
        payment:
          $ref: '#/components/schemas/payment'
    paymentTerms.listresponse:
      title: paymentTerms.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data42'
          description: ''
    phase_history:
      title: phase_history
      type: object
      properties:
        phase:
          $ref: '#/components/schemas/User'
        started_at:
          type: string
          examples:
          - 2017-05-01 12:00:00
        started_by:
          $ref: '#/components/schemas/User'
    preferences:
      title: preferences
      type: object
      properties:
        invoiceable:
          type: boolean
          examples:
          - true
        historic_time_tracking_limit:
          $ref: '#/components/schemas/historic_time_tracking_limit'
        whitelabeling:
          type: boolean
          examples:
          - true
    productCategories.listresponse:
      title: productCategories.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data44'
          description: ''
    products.addrequest:
      title: products.addrequest
      type: object
      properties:
        description:
          type: string
          description: The description of the product in Markdown
        purchase_price:
          $ref: '#/components/schemas/Money'
        selling_price:
          $ref: '#/components/schemas/Money'
    products.addresponse:
      title: products.addresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    products.inforesponse:
      title: products.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data46'
    products.listresponse:
      title: products.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data45'
          description: ''
    projects.addParticipantrequest:
      title: projects.addParticipantrequest
      required:
      - id
      - participant
      type: object
      properties:
        id:
          type: string
          examples:
          - 8dbfa9db-c53f-410c-97d3-755b19685809
        participant:
          $ref: '#/components/schemas/User'
        role:
          $ref: '#/components/schemas/role'
    projects.closerequest:
      title: projects.closerequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 01548b10-4932-4a18-8a89-005ad09db2c8
    projects.createrequest:
      title: projects.createrequest
      required:
      - title
      - starts_on
      - milestones
      - participants
      type: object
      properties:
        title:
          type: string
          examples:
          - New company website
        description:
          type: string
        starts_on:
          type: string
          examples:
          - 2016-02-04
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/milestones1'
          description: At least one milestone is required
        participants:
          type: array
          items:
            $ref: '#/components/schemas/participants1'
          description: At least one decision making participant is required
        purchase_order_number:
          type: string
          examples:
          - 000023
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
        customer:
          $ref: '#/components/schemas/customer2'
    projects.createresponse:
      title: projects.createresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    projects.deleterequest:
      title: projects.deleterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 01548b10-4932-4a18-8a89-005ad09db2c8
    projects.inforesponse:
      title: projects.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data49'
    projects.listresponse:
      title: projects.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data48'
          description: ''
    projects.reopenrequest:
      title: projects.reopenrequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 01548b10-4932-4a18-8a89-005ad09db2c8
    projects.updaterequest:
      title: projects.updaterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - dcc2e8ed-51be-4cb6-9c01-034aedac86fd
        title:
          type: string
          examples:
          - New company website
        description:
          type: string
        status:
          $ref: '#/components/schemas/status16'
        starts_on:
          type: string
          examples:
          - 2016-02-04
        customer:
          oneOf:
          - $ref: '#/components/schemas/customer13'
          - type: 'null'
        budget:
          $ref: '#/components/schemas/Money'
        purchase_order_number:
          oneOf:
          - type: string
            examples:
            - 000023
          - type: 'null'
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    projects.updateParticipantrequest:
      title: projects.updateParticipantrequest
      required:
      - id
      - role
      type: object
      properties:
        id:
          type: string
          examples:
          - 55fbe14f-7399-48e5-b4e0-64b7f5c50451
        participant:
          $ref: '#/components/schemas/User'
        role:
          $ref: '#/components/schemas/role'
    quotations.acceptrequest:
      title: quotations.acceptrequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - e7a3fe2b-2c75-480f-87b9-121816b5257b
    quotations.createrequest:
      title: quotations.createrequest
      required:
      - deal_id
      type: object
      properties:
        deal_id:
          type: string
          examples:
          - cef01135-7e51-4f6f-a6eb-6e5e5a885ac8
        grouped_lines:
          type: array
          items:
            $ref: '#/components/schemas/grouped_lines1'
          description: A quotation needs `grouped_lines` and/or `text` to be valid
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/discounts'
          description: ''
        text:
          type: string
          description: Uses Markdown formatting. A quotation needs `grouped_lines` and/or `text` to be valid
          examples:
          - Quotation text
    quotations.createresponse:
      title: quotations.createresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    quotations.deleterequest:
      title: quotations.deleterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 4e235f27-0af0-40e5-82f3-d32d0aa9edb3
    quotations.downloadrequest:
      title: quotations.downloadrequest
      required:
      - id
      - format
      type: object
      properties:
        id:
          type: string
          examples:
          - d885e5d5-bacb-4607-bde9-abc4a04a901b
        format:
          const: pdf
          type: string
          examples:
          - pdf
    quotations.downloadresponse:
      title: quotations.downloadresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data26'
    quotations.inforesponse:
      title: quotations.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data25'
    quotations.listresponse:
      title: quotations.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data24'
          description: ''
    quotations.updaterequest:
      title: quotations.updaterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 5b16f6ee-e302-0079-901b-50c26c4a55b1
        grouped_lines:
          type: array
          items:
            $ref: '#/components/schemas/grouped_lines1'
          description: A quotation needs `grouped_lines` and/or `text` to be valid
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/discounts'
          description: ''
        text:
          type:
          - string
          - 'null'
          description: Uses Markdown formatting. A quotation needs `grouped_lines` and/or `text` to be valid
          examples:
          - Quotation text
    request:
      title: request
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/filter1'
        page:
          $ref: '#/components/schemas/Page'
        sort:
          type: array
          items:
            type: string
          description: ''
          default:
          - element: object
            content:
            - element: member
              content:
                key:
                  element: string
                  content: field
                value:
                  element: string
                  content: department_id
            - element: member
              content:
                key:
                  element: string
                  content: order
                value:
                  element: string
                  content: asc
          - element: object
            content:
            - element: member
              content:
                key:
                  element: string
                  content: field
                value:
                  element: string
                  content: rate
            - element: member
              content:
                key:
                  element: string
                  content: order
                value:
                  element: string
                  content: asc
          - element: object
            content:
            - element: member
              content:
                key:
                  element: string
                  content: field
                value:
                  element: string
                  content: description
            - element: member
              content:
                key:
                  element: string
                  content: order
                value:
                  element: string
                  content: asc
    request1:
      title: request1
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/filter1'
    role:
      title: role
      enum:
      - decision_maker
      - member
      type: string
      examples:
      - decision_maker
    section:
      title: section
      type: object
      properties:
        title:
          type: string
    section1:
      title: section1
      required:
      - title
      type: object
      properties:
        title:
          type: string
    spent:
      title: spent
      type: object
      properties:
        total:
          $ref: '#/components/schemas/Money'
        time:
          $ref: '#/components/schemas/Money'
        materials:
          $ref: '#/components/schemas/Money'
    status:
      title: status
      enum:
      - active
      - archived
      type: string
      examples:
      - active
    status2:
      title: status2
      enum:
      - active
      - deactivated
      type: string
      examples:
      - active
    status5:
      title: status5
      const: active
      type: string
      description: >-
        + Members
                + `active`
                + `deactivated`
      examples:
      - active
    status8:
      title: status8
      enum:
      - new
      - open
      - won
      - lost
      type: string
      examples:
      - won
    status9:
      title: status9
      enum:
      - open
      - won
      - lost
      type: string
      examples:
      - won
    status10:
      title: status10
      enum:
      - open
      - accepted
      - rejected
      - closed
      type: string
      examples:
      - open
    status12:
      title: status12
      enum:
      - draft
      - outstanding
      - matched
      type: string
      examples:
      - matched
    status14:
      title: status14
      const: booked
      type: string
      examples:
      - booked
    status16:
      title: status16
      enum:
      - active
      - on_hold
      - done
      - cancelled
      type: string
      examples:
      - active
    status19:
      title: status19
      enum:
      - open
      - closed
      type: string
      examples:
      - open
    subject:
      title: subject
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type51'
        id:
          type: string
          examples:
          - 58f5b799-51c4-4eb9-8308-b1aa02e0a873
    subject2:
      title: subject2
      required:
      - type
      - id
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type51'
        id:
          type: string
          examples:
          - b40ea20d-4ae5-4a56-be12-03766ecaefae
    tags.listresponse:
      title: tags.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data16'
          description: ''
    tasks.completerequest:
      title: tasks.completerequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 46156648-87c6-478d-8aa7-1dc3a00dacab
    tasks.createrequest:
      title: tasks.createrequest
      required:
      - title
      - due_on
      - work_type_id
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        due_on:
          type: string
          examples:
          - 2016-02-04
        work_type_id:
          type: string
          examples:
          - 32665afd-1818-0ed3-9e18-a603a3a21b95
        milestone_id:
          type: string
          examples:
          - 32665afd-1818-0ed3-9e18-a603a3a21b95
        deal_id:
          type: string
          examples:
          - 32665afd-1818-0ed3-9e18-a603a3a21b95
        estimated_duration:
          $ref: '#/components/schemas/Duration'
        assignee:
          $ref: '#/components/schemas/assignee2'
        customer:
          $ref: '#/components/schemas/customer'
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    tasks.createresponse:
      title: tasks.createresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    tasks.deleterequest:
      title: tasks.deleterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 5f0afd8a-8a40-48a4-bbe6-7d0e9c61bb6d
    tasks.inforesponse:
      title: tasks.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data55'
    tasks.listresponse:
      title: tasks.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data54'
          description: ''
    tasks.reopenrequest:
      title: tasks.reopenrequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 46156648-87c6-478d-8aa7-1dc3a00dacab
    tasks.schedulerequest:
      title: tasks.schedulerequest
      required:
      - id
      - starts_at
      - ends_at
      type: object
      properties:
        id:
          type: string
          examples:
          - 7c70c54e-6e50-4e6a-b5fd-80234eb535cf
        starts_at:
          type: string
          examples:
          - 2016-02-04T16:00:00+00:00
        ends_at:
          type: string
          examples:
          - 2016-02-04T18:00:00+00:00
    tasks.scheduleresponse:
      title: tasks.scheduleresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    tasks.updaterequest:
      title: tasks.updaterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 00ed6266-a5bd-4aac-a292-2582017b6400
        title:
          type: string
        description:
          type: string
        due_on:
          type: string
          examples:
          - 2016-02-04
        work_type_id:
          type: string
          examples:
          - 32665afd-1818-0ed3-9e18-a603a3a21b95
        milestone_id:
          type:
          - string
          - 'null'
          examples:
          - 32665afd-1818-0ed3-9e18-a603a3a21b95
        deal_id:
          type:
          - string
          - 'null'
          examples:
          - 32665afd-1818-0ed3-9e18-a603a3a21b95
        estimated_duration:
          $ref: '#/components/schemas/Duration'
        assignee:
          $ref: '#/components/schemas/assignee2'
        customer:
          $ref: '#/components/schemas/customer'
        custom_fields:
          type: array
          items:
            oneOf:
            - type: string
              examples:
              - 092980616
            - type: number
              examples:
              - 123
            - type: array
              items:
                type: string
            - type: boolean
              examples:
              - true
            - $ref: '#/components/schemas/value'
          description: ''
    tax:
      title: tax
      const: excluding
      type: string
      examples:
      - excluding
    taxes:
      title: taxes
      type: object
      properties:
        rate:
          type: number
          examples:
          - 0.21
        taxable:
          $ref: '#/components/schemas/Money'
        tax:
          $ref: '#/components/schemas/Money'
    taxRates.listresponse:
      title: taxRates.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data41'
          description: ''
    teams.listresponse:
      title: teams.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data5'
          description: ''
    timers.currentresponse:
      title: timers.currentresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data62'
    timers.startrequest:
      title: timers.startrequest
      type: object
      properties:
        work_type_id:
          type: string
          examples:
          - db41328a-7a25-4e85-8fb9-830baacb7f40
        started_at:
          type: string
          description: If not provided, current time will be used
          examples:
          - 2017-04-26T10:01:49+00:00
        description:
          type: string
        subject:
          $ref: '#/components/schemas/subject2'
        invoiceable:
          type: boolean
          examples:
          - true
    timers.startresponse:
      title: timers.startresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    timers.stopresponse:
      title: timers.stopresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    timers.updaterequest:
      title: timers.updaterequest
      type: object
      properties:
        work_type_id:
          type:
          - string
          - 'null'
          examples:
          - db41328a-7a25-4e85-8fb9-830baacb7f40
        started_at:
          type: string
          examples:
          - 2017-04-26T10:01:49+00:00
        description:
          type:
          - string
          - 'null'
          examples:
          - Timer Description
        subject:
          $ref: '#/components/schemas/subject2'
        invoiceable:
          type: boolean
          examples:
          - true
    timeTracking.addrequest:
      title: timeTracking.addrequest
      type: object
      properties:
        work_type_id:
          type: string
          examples:
          - 2175597d-484e-4a1c-a781-cbc3d9f893ba
        description:
          type: string
        subject:
          $ref: '#/components/schemas/subject2'
        invoiceable:
          type: boolean
          examples:
          - true
    timeTracking.addresponse:
      title: timeTracking.addresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    timeTracking.deleterequest:
      title: timeTracking.deleterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 6caeea11-aa83-4da9-9859-5b62bbf3a476
    timeTracking.inforesponse:
      title: timeTracking.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data59'
        meta:
          $ref: '#/components/schemas/meta'
    timeTracking.listresponse:
      title: timeTracking.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data58'
          description: ''
    timeTracking.resumerequest:
      title: timeTracking.resumerequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 06dfa08a-b769-4005-a912-45ab885c5737
        started_at:
          type: string
          description: If not provided, current time will be used
          examples:
          - 2017-04-26T10:01:49+00:00
    timeTracking.resumeresponse:
      title: timeTracking.resumeresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    timeTracking.updaterequest:
      title: timeTracking.updaterequest
      required:
      - id
      type: object
      properties:
        id:
          type: string
          examples:
          - 66621f54-3d0d-420f-8d4b-ddd7fc473bf2
        work_type_id:
          type:
          - string
          - 'null'
          examples:
          - a12f4289-3580-4780-bb6d-b4e9f84f80ad
        description:
          type:
          - string
          - 'null'
        subject:
          $ref: '#/components/schemas/subject2'
        invoiceable:
          type: boolean
          examples:
          - true
    total:
      title: total
      type: object
      properties:
        tax_exclusive:
          $ref: '#/components/schemas/Money'
        tax_inclusive:
          $ref: '#/components/schemas/Money'
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/taxes'
          description: ''
        purchase_price:
          $ref: '#/components/schemas/Money'
    total1:
      title: total1
      type: object
      properties:
        tax_exclusive:
          $ref: '#/components/schemas/Money'
        tax_exclusive_before_discount:
          $ref: '#/components/schemas/Money'
        tax_inclusive:
          $ref: '#/components/schemas/Money'
        tax_inclusive_before_discount:
          $ref: '#/components/schemas/Money'
    total3:
      title: total3
      type: object
      properties:
        tax_exclusive:
          $ref: '#/components/schemas/Money'
        tax_inclusive:
          $ref: '#/components/schemas/Money'
        payable:
          $ref: '#/components/schemas/Money'
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/taxes'
          description: ''
        due:
          $ref: '#/components/schemas/Money'
    total5:
      title: total5
      type: object
      properties:
        tax_exclusive:
          $ref: '#/components/schemas/Money'
        tax_exclusive_before_discount:
          $ref: '#/components/schemas/Money'
        tax_inclusive:
          $ref: '#/components/schemas/Money'
        tax_inclusive_before_discount:
          $ref: '#/components/schemas/Money'
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/taxes'
          description: ''
        withheld_taxes:
          type: array
          items:
            $ref: '#/components/schemas/withheld_taxes'
          description: ''
        payable:
          $ref: '#/components/schemas/Money'
        due:
          $ref: '#/components/schemas/Money'
    total6:
      title: total6
      type: object
      properties:
        tax_exclusive:
          $ref: '#/components/schemas/Money'
        tax_inclusive:
          $ref: '#/components/schemas/Money'
        payable:
          $ref: '#/components/schemas/Money'
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/taxes'
          description: ''
    type:
      title: type
      enum:
      - phone
      - mobile
      - fax
      type: string
      examples:
      - phone
    type1:
      title: type1
      enum:
      - phone
      - fax
      type: string
      examples:
      - phone
    type2:
      title: type2
      enum:
      - cash
      - end_of_month
      - after_invoice_date
      type: string
      examples:
      - cash
    type3:
      title: type3
      enum:
      - company
      - contact
      - product
      - user
      type: string
      examples:
      - company
    type5:
      title: type5
      enum:
      - primary
      - invoicing
      type: string
      examples:
      - primary
    type7:
      title: type7
      enum:
      - single_line
      - multi_line
      - single_select
      - multi_select
      - date
      - money
      - auto_increment
      - integer
      - number
      - boolean
      - email
      - telephone
      - url
      - company
      - contact
      - product
      - user
      type: string
      examples:
      - single_line
    type9:
      title: type9
      const: primary
      type: string
      examples:
      - primary
    type11:
      title: type11
      enum:
      - primary
      - invoicing
      - delivery
      - visiting
      type: string
      examples:
      - invoicing
    type21:
      title: type21
      enum:
      - contact
      - company
      type: string
      examples:
      - company
    type25:
      title: type25
      const: percentage
      type: string
      examples:
      - percentage
    type26:
      title: type26
      enum:
      - user
      - contact
      type: string
      examples:
      - contact
    type27:
      title: type27
      enum:
      - company
      - contact
      - deal
      type: string
      examples:
      - company
    type29:
      title: type29
      enum:
      - company
      - contact
      - work_order
      - deal
      type: string
      examples:
      - company
    type40:
      title: type40
      const: user
      type: string
      examples:
      - user
    type43:
      title: type43
      enum:
      - user
      - team
      type: string
      examples:
      - user
    type51:
      title: type51
      enum:
      - company
      - contact
      - event
      - todo
      - milestone
      - ticket
      type: string
      examples:
      - milestone
    type58:
      title: type58
      enum:
      - account
      - user
      - product
      - contact
      - company
      - deal
      - dealPhase
      - project
      - milestone
      - todo
      - event
      - ticket
      - invoice
      - creditNote
      - subscription
      - quotation
      type: string
      examples:
      - contact
    unit:
      title: unit
      const: hour
      type: string
      examples:
      - hour
    unit_price:
      title: unit_price
      type: object
      properties:
        tax:
          $ref: '#/components/schemas/tax'
        amount:
          type: number
          examples:
          - 123.3
        currency:
          $ref: '#/components/schemas/currency'
    unit_price1:
      title: unit_price1
      required:
      - tax
      type: object
      properties:
        tax:
          const: excluding
          type: string
          examples:
          - excluding
        amount:
          type: number
          examples:
          - 123.3
        currency:
          $ref: '#/components/schemas/currency'
    unit1:
      title: unit1
      const: min
      type: string
      examples:
      - min
    users.inforesponse:
      title: users.inforesponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data4'
    users.listresponse:
      title: users.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data3'
          description: ''
    users.meresponse:
      title: users.meresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data2'
    value:
      title: value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type3'
        id:
          type: string
          examples:
          - bf6765de-56eb-40ec-ad14-9096c5dc5fe1
      description: For related Teamleader objects
    webhooks.listresponse:
      title: webhooks.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebHook'
          description: ''
    withheld_taxes:
      title: withheld_taxes
      type: object
      properties:
        id:
          type: string
          examples:
          - e2314517-3cab-4aa9-8471-450e73449040
        taxable:
          $ref: '#/components/schemas/Money'
        withheld:
          $ref: '#/components/schemas/Money'
    withholdingTaxRates.listresponse:
      title: withholdingTaxRates.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data41'
          description: ''
    workTypes.listrequest:
      title: workTypes.listrequest
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/filter'
        page:
          $ref: '#/components/schemas/Page'
        sort:
          type: array
          items:
            type: string
          description: ''
          default:
          - element: member
            content:
              key:
                element: string
                content: field
              value:
                element: string
                content: name
          - element: member
            content:
              key:
                element: string
                content: order
              value:
                element: string
                content: asc
    workTypes.listresponse:
      title: workTypes.listresponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/data8'
          description: ''
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
